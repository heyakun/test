{
	"ID": "20220317201732-sgdvf3v",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220317201732-sgdvf3v",
		"title": "day33 axio 61370",
		"type": "doc",
		"updated": "20220318145522"
	},
	"Children": [
		{
			"ID": "20220317201732-jwo3w8p",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220317201732-jwo3w8p"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "day33 axios封装"
				}
			]
		},
		{
			"ID": "20220317201732-40c1luf",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220317201732-40c1luf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "0:09 - 0：26 封装逻辑"
				}
			]
		},
		{
			"ID": "20220317201732-xnmlzw5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-xnmlzw5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "封装网络请求"
				}
			]
		},
		{
			"ID": "20220317201732-vdg0kv8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-vdg0kv8",
				"updated": "20220317201732"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么封装？1不能过度依赖axios ，后续可以替换，2 避免重复代码"
				}
			]
		},
		{
			"ID": "20220318093430-twmgmcj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220318093430-twmgmcj",
				"updated": "20220318093501"
			}
		},
		{
			"ID": "20220317201732-ximh5w4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ximh5w4",
				"updated": "20220317201732"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目前项目是依赖axios的库，如果替换axios，需要修改很多代码"
				}
			]
		},
		{
			"ID": "20220318091946-jivmr9a",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220318091946-jivmr9a",
				"updated": "20220318093007"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220318091949-m9iklr0",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220318091949-m9iklr0",
						"updated": "20220318092003"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "目录结构\n"
						}
					]
				},
				{
					"ID": "20220318092404-8tyfrrb",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20220318092404-8tyfrrb",
						"updated": "20220318093007"
					},
					"Children": [
						{
							"ID": "20220318092413-ucv96ij",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20220318092413-ucv96ij",
								"updated": "20220318093007"
							},
							"Children": [
								{
									"ID": "20220318092413-n8sjgc9",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220318092413-n8sjgc9",
										"updated": "20220318092415"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "src"
										}
									]
								},
								{
									"ID": "20220318092418-u3ltskc",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20220318092418-u3ltskc",
										"updated": "20220318093007"
									},
									"Children": [
										{
											"ID": "20220318092417-iyjc11t",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20220318092417-iyjc11t",
												"updated": "20220318093007"
											},
											"Children": [
												{
													"ID": "20220318092417-zflw1vl",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20220318092417-zflw1vl",
														"updated": "20220318092431"
													},
													"Children": [
														{
															"Type": "NodeText",
															"Data": "service"
														}
													]
												},
												{
													"ID": "20220318092434-42sqo0r",
													"Type": "NodeList",
													"ListData": {},
													"Properties": {
														"id": "20220318092434-42sqo0r",
														"updated": "20220318093007"
													},
													"Children": [
														{
															"ID": "20220318092433-5palzce",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20220318092433-5palzce",
																"updated": "20220318093007"
															},
															"Children": [
																{
																	"ID": "20220318092433-c5wzpcx",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20220318092433-c5wzpcx",
																		"updated": "20220318093007"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "index.ts  // 2.导入类  创建实例   导出实例"
																		}
																	]
																}
															]
														},
														{
															"ID": "20220318092439-kv5mvst",
															"Type": "NodeListItem",
															"ListData": {
																"BulletChar": 42,
																"Marker": "Kg=="
															},
															"Properties": {
																"id": "20220318092439-kv5mvst",
																"updated": "20220318092956"
															},
															"Children": [
																{
																	"ID": "20220318092439-qknzrdw",
																	"Type": "NodeParagraph",
																	"Properties": {
																		"id": "20220318092439-qknzrdw",
																		"updated": "20220318092444"
																	},
																	"Children": [
																		{
																			"Type": "NodeText",
																			"Data": "request"
																		}
																	]
																},
																{
																	"ID": "20220318092446-b7miwih",
																	"Type": "NodeList",
																	"ListData": {},
																	"Properties": {
																		"id": "20220318092446-b7miwih",
																		"updated": "20220318092956"
																	},
																	"Children": [
																		{
																			"ID": "20220318092446-nktrm9p",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20220318092446-nktrm9p",
																				"updated": "20220318092956"
																			},
																			"Children": [
																				{
																					"ID": "20220318092446-0mkhgqq",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20220318092446-0mkhgqq",
																						"updated": "20220318092956"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "index.ts //  1.导入axios    导出封装 类"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20220318092458-atw57ne",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20220318092458-atw57ne"
																			},
																			"Children": [
																				{
																					"ID": "20220318092458-6a2shtg",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20220318092458-6a2shtg",
																						"updated": "20220318092503"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "config.ts"
																						}
																					]
																				}
																			]
																		},
																		{
																			"ID": "20220318092512-5wbzc16",
																			"Type": "NodeListItem",
																			"ListData": {
																				"BulletChar": 42,
																				"Marker": "Kg=="
																			},
																			"Properties": {
																				"id": "20220318092512-5wbzc16"
																			},
																			"Children": [
																				{
																					"ID": "20220318092512-hakydkf",
																					"Type": "NodeParagraph",
																					"Properties": {
																						"id": "20220318092512-hakydkf",
																						"updated": "20220318092515"
																					},
																					"Children": [
																						{
																							"Type": "NodeText",
																							"Data": "type.ts"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220318131853-ua2vdzg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220318131853-ua2vdzg",
				"updated": "20220318132230"
			},
			"Children": [
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20220318132230-8r0d4vm"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefDynamicText",
							"Data": "最简封装"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220318132155-n4u7ni5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220318132155-n4u7ni5",
				"updated": "20220318132155"
			}
		},
		{
			"ID": "20220318131908-zrmy10i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220318131908-zrmy10i",
				"updated": "20220318145522"
			}
		},
		{
			"ID": "20220318131957-g0vnxsz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220318131957-g0vnxsz",
				"updated": "20220318131957"
			}
		},
		{
			"ID": "20220317201732-lnp5iwh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-lnp5iwh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建request文件夹/index.ts"
				}
			]
		},
		{
			"ID": "20220317201732-wsr6526",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-wsr6526"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建service/index.ts作为统一出口"
				}
			]
		},
		{
			"ID": "20220317201732-cg3l275",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-cg3l275"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建类：内容包括所有请求的方法"
				}
			]
		},
		{
			"ID": "20220317201732-5enfrpb",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20220317201732-5enfrpb"
			},
			"Children": [
				{
					"ID": "20220317201732-ezq6491",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"fold": "0",
						"id": "20220317201732-ezq6491"
					},
					"Children": [
						{
							"ID": "20220317201732-g8jdlyo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220317201732-g8jdlyo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "service/request/index.ts(仅当前文件对axios 有依赖，如果更换其他库，直接修改本文件代码即可)"
								}
							]
						},
						{
							"ID": "20220317201732-iw6hpsl",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockFenceOffset": 2,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "dHN4",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20220317201732-iw6hpsl"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "dHN4"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "import axios from 'axios'\nclass HYRequest {\n//请求方法\n  request(){}\n\tget(){}\n}\nexport default HYRequest\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-ow1v64j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ow1v64j"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建入口文件service/index.ts"
				}
			]
		},
		{
			"ID": "20220317201732-68lapp1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-68lapp1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建类的实例"
				}
			]
		},
		{
			"ID": "20220317201732-5bl5g4i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-5bl5g4i"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import HYRequest from './request'\nconst hyRequest = new HYRequest()\nexport default hyRequest\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-m8cbbxm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-m8cbbxm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他文件使用"
				}
			]
		},
		{
			"ID": "20220317201732-argsa7u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-argsa7u"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import hyRequest from './service'\nhyRequest.request({})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-o6cmr50",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220317201732-o6cmr50"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "0:26 - 0:41 类的封装（request/index）"
				}
			]
		},
		{
			"ID": "20220317201732-gbmrxh6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220317201732-gbmrxh6"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "封装类 通用工具"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "axios.create"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 方法"
				}
			]
		},
		{
			"ID": "20220317201732-9njajkf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-9njajkf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class HYRequest {\n  instance: AxiosInstance\n\n  constructor(config: HYRequestConfig) {\n\t// 创建axios实例\n    this.instance = axios.create(config)\n}\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-bcdykuu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-bcdykuu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "两者是不同的axios的实例"
				}
			]
		},
		{
			"ID": "20220317201732-qykkpq0",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220317201732-qykkpq0"
			}
		},
		{
			"ID": "20220317201732-ao6fd9q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ao6fd9q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "instance: AxiosInstance"
				}
			]
		},
		{
			"ID": "20220317201732-5yt3x9z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-5yt3x9z"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类型是import type { AxiosInstance } from 'axios'"
				}
			]
		},
		{
			"ID": "20220317201732-2vil7p8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-2vil7p8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "config ：AxiosRequestConfig"
				}
			]
		},
		{
			"ID": "20220317201732-1hlpdcb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-1hlpdcb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类型需要导入"
				}
			]
		},
		{
			"ID": "20220317201732-tjr5oca",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220317201732-tjr5oca"
			}
		},
		{
			"ID": "20220317201732-rliuf7d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-rliuf7d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单网络请求封装"
				}
			]
		},
		{
			"ID": "20220317201732-075etry",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-075etry"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import {AxiosInstance,AxiosRequestConfig} from 'axios'\nimport axios from 'axios'\n\nclass HYRequest {\n  instance: AxiosInstance\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config)\n  }\n  **request(config: AxiosRequestConfig) {\n    this.instance.request(config).then((res) =\u003e {\n      console.log(res)\n    })**\n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-xzigd6f",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20220317201732-xzigd6f"
			},
			"Children": [
				{
					"ID": "20220317201732-vyhm375",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20220317201732-vyhm375"
					},
					"Children": [
						{
							"ID": "20220317201732-voq21f5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220317201732-voq21f5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "service/index (导出的hyRequest可在main中使用)"
								}
							]
						},
						{
							"ID": "20220317201732-jvruch6",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockFenceOffset": 2,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "anN4",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20220317201732-jvruch6"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "anN4"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "import HYRequest from './request'\nimport type { BASE_URL, TIME_OUT } from './request/config'\n\nconst hyRequest = new HYRequest({\n  baseURL: BASE_URL,\n  timeout: TIME_OUT\n})\n\nexport default hyRequest\n\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-jwk6pep",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-jwk6pep"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用request 方法需要传入配置参数"
				}
			]
		},
		{
			"ID": "20220317201732-ixppikm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ixppikm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "mian.ts 里"
				}
			]
		},
		{
			"ID": "20220317201732-e5wb08r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-e5wb08r"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\nhyRequest.request({\n\turl: '/home/multidata'\n\tmethod:'GET'\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220318133301-bdts2ti",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220318133301-bdts2ti",
				"updated": "20220318133317"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "测试用例 baseurl ="
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://123.207.32.32:8000"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-4xiteo0",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220317201732-4xiteo0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "0:41 - 1:03拦截器（继续完善类-实例config）"
				}
			]
		},
		{
			"ID": "20220317201732-jb7zv8o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-jb7zv8o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "拦截器里"
				}
			]
		},
		{
			"ID": "20220317201732-uovbi3s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-uovbi3s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "扩展 AxiosRequestConfig （原生vue的类型）的内容，在其基础上扩展了四个接口类型"
				}
			]
		},
		{
			"ID": "20220317201732-29ffslw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-29ffslw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 自定义拦截器的类型\n// 四个接口类型 ： 函数类型\ninterface HYRequestInterceptors {\n  requestInterceptors: (config: AxiosRequestConfig) =\u003e AxiosRequestConfig\n  requestInterceptorsCatch: (error: any) =\u003e any\n  responseInterceptors: (config: AxiosResponse) =\u003e AxiosResponse\n  responseInterceptorsCatch: (error: any) =\u003e any\n}\n// 让 HYRequestConfig  继承自 AxiosRequestConfig ，\n// 补充一个类型，在constructor \ninterface HYRequestConfig extends AxiosRequestConfig {\n  interceptors: HYRequestInterceptors\n}\n//修改config: HYRequestConfig 替换AxiosRequestConfig\nclass HYRequest {\n  instance: AxiosInstance\n  constructor(config: HYRequestConfig) {\n    this.instance = axios.create(config)\n  }\n  request(config: AxiosRequestConfig): void {\n    this.instance.request(config).then((res) =\u003e {\n      console.log('刚刚封装好的request方法', res)\n    })\n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-s48ac1l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-s48ac1l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "入口文件"
				}
			]
		},
		{
			"ID": "20220317201732-i4fj4w3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-i4fj4w3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "const hyRequest = new HYRequest({\n  baseURL: BASE_URL,\n  timeout: TIME_OUT,\n  interceptors: {\n    requestInterceptors: (config) =\u003e {\n      return config\n    },\n    requestInterceptorsCatch: (err) =\u003e {\n      return err\n    },\n    responseInterceptors: (config) =\u003e {\n      return config\n    },\n    responseInterceptorsCatch: (err) =\u003e {\n      return err\n    }\n  }\n})\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-0v7xhgt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-0v7xhgt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "main.ts做请求"
				}
			]
		},
		{
			"ID": "20220317201732-rj6ry6l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-rj6ry6l"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "hyRequest.request({\n  url: 'home/multidata',\n  method: 'GET'\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-xb7jw9c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-xb7jw9c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "声明class"
				}
			]
		},
		{
			"ID": "20220317201732-pxa1lpy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-pxa1lpy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class HYRequest {\n  instance: AxiosInstance\n\t  interceptors: HYRequestInterceptors\n\n  constructor(config: HYRequestConfig) {\n    this.instance = axios.create(config)\n    this.interceptors = config.interceptors\n    // 拦截器\n    this.instance.interceptors.request.use(\n      this.interceptors.requestInterceptors,\n      this.interceptors.requestInterceptorsCatch\n    )\n\n    this.instance.interceptors.response.use(\n      this.interceptors.responseInterceptors,\n      this.interceptors.requestInterceptorsCatch\n    )\n  }\n  request(config: AxiosRequestConfig): void {\n    this.instance.request(config).then((res) =\u003e {\n      console.log('刚刚封装好的request方法', res)\n    })\n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-s9cisfx",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220317201732-s9cisfx"
			}
		},
		{
			"ID": "20220317201732-l73f3fb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220317201732-l73f3fb"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "拦截器类型应该是可选"
				}
			]
		},
		{
			"ID": "20220317201732-ojqf9tk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ojqf9tk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "四个拦截函数修改成可选"
				}
			]
		},
		{
			"ID": "20220317201732-lmoa66h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-lmoa66h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对应的可选链也修改成可选的"
				}
			]
		},
		{
			"ID": "20220317201732-c31tywb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-c31tywb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将接口内容"
				}
			]
		},
		{
			"ID": "20220317201732-x5x7s5t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220317201732-x5x7s5t"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "抽离出一个文件"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "./type"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-n56vykf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-n56vykf"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import { AxiosRequestConfig, AxiosResponse } from 'axios'\nexport interface HYRequestInterceptors {\n  requestInterceptors?: (config: AxiosRequestConfig) =\u003e AxiosRequestConfig\n  requestInterceptorsCatch?: (error: any) =\u003e any\n  responseInterceptors?: (config: AxiosResponse) =\u003e AxiosResponse\n  responseInterceptorsCatch?: (error: any) =\u003e any\n}\n\nexport interface HYRequestConfig extends AxiosRequestConfig {\n  interceptors?: HYRequestInterceptors\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-nu8fxre",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220317201732-nu8fxre"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "1：08 - 1:26 全局拦截器和request拦截器封装"
				}
			]
		},
		{
			"ID": "20220317201732-n5m02pj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-n5m02pj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "// 拦截器（从config里取出来的拦截器）"
				}
			]
		},
		{
			"ID": "20220317201732-ysy0wnm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ysy0wnm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "this.interceptors = "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "config.interceptors （要求config里必须有interceptors属性）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-3uexd51",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-3uexd51"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所有实例都有的拦截器（不要求"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "有interceptors属性"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "）"
				}
			]
		},
		{
			"ID": "20220317201732-miaurju",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-miaurju"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "constructor(config: HYRequestConfig) {\n    this.instance = axios.create(config)\n    this.interceptors = config.interceptors\n    // 拦截器（从config里取出来的拦截器）\n    this.instance.interceptors.request.use(\n      this.interceptors?.requestInterceptors,\n      this.interceptors?.requestInterceptorsCatch\n    )\n\n    this.instance.interceptors.response.use(\n      this.interceptors?.responseInterceptors,\n      this.interceptors?.requestInterceptorsCatch\n    )\n    // 所有实例都有的拦截器\n    this.instance.interceptors.request.use(\n      (config) =\u003e {\n        console.log('所有的实例都有的拦截器: 请求成功拦截')\n        return config\n      },\n      (err) =\u003e {\n        console.log('所有的实例都有的拦截器: 请求失败拦截')\n        return err\n      }\n    )\n    this.instance.interceptors.response.use(\n      (res) =\u003e {\n        console.log('所有的实例都有的拦截器: 响应成功拦截')\n        return res\n      },\n      (err) =\u003e {\n        console.log('所有的实例都有的拦截器: 响应失败拦截')\n        return err\n      }\n    )\n  }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-5d72ca6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220317201732-5d72ca6"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "1:19 单个请求的拦截器"
				}
			]
		},
		{
			"ID": "20220317201732-yx783lb",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220317201732-yx783lb"
			}
		},
		{
			"ID": "20220317201732-rst1xyd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-rst1xyd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目前封装类class里request方法传入的config是原始类型AxiosRequestConfig"
				}
			]
		},
		{
			"ID": "20220317201732-rim2d9e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-rim2d9e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "AxiosRequestConfig 不存在拦截器"
				}
			]
		},
		{
			"ID": "20220317201732-xb1zfa3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-xb1zfa3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "  request(config: AxiosRequestConfig): void {\n    this.instance.request(config).then((res) =\u003e {\n      console.log('刚刚封装好的request方法', res)\n    })\n  }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-t4cddvn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-t4cddvn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在main.ts里request（）传入的参数里不能穿拦截器"
				}
			]
		},
		{
			"ID": "20220317201732-f7fwv3t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-f7fwv3t"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "hyRequest.request({\n  url: 'home/multidata',\n  method: 'GET'\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-4nc5d3o",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220317201732-4nc5d3o"
			}
		},
		{
			"ID": "20220317201732-1m87ruj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-1m87ruj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "class封装"
				}
			]
		},
		{
			"ID": "20220317201732-410ssrj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-410ssrj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\nconstructor(config: HYRequestConfig) {\n    this.instance = axios.create(config)\n    this.interceptors = config.interceptors\n    // 拦截器\n    this.instance.interceptors.request.use(\n      this.interceptors?.requestInterceptor,\n      this.interceptors?.requestInterceptorCatch\n    )\n\n    this.instance.interceptors.response.use(\n      this.interceptors?.responseInterceptor,\n      this.interceptors?.requestInterceptorCatch\n    )\n}\n// 修改request 方法\nrequest(config: HYRequestConfig): void {\n    if (config.interceptors?.requestInterceptor) {\n      **config = config.interceptors.requestInterceptor(config)**\n    }\n\n    this.instance.**request**(config).then((res) =\u003e {\n      **console.log('刚刚封装好的request方法', res)**\n    })\n  }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-js0p36d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-js0p36d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "入口文件"
				}
			]
		},
		{
			"ID": "20220317201732-0k1rp5g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-0k1rp5g"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "const hyRequest = new HYRequest({\n  baseURL: BASE_URL,\n  timeout: TIME_OUT\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-mgaimrs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-mgaimrs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "main.ts"
				}
			]
		},
		{
			"ID": "20220317201732-d1yms7y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-d1yms7y"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "hyRequest.request({\n  url: 'home/multidata',\n  method: 'GET',\n  **interceptors: {\n    requestInterceptor: (config) =\u003e {\n      console.log('单独请求的config')\n      return config\n    }\n  }**\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-q3sv8zx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-q3sv8zx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行结果"
				}
			]
		},
		{
			"ID": "20220317201732-teifdgh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-teifdgh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "单独请求的config"
				},
				{
					"Type": "NodeSoftBreak",
					"Data": "\n"
				},
				{
					"Type": "NodeText",
					"Data": "index.ts?922c:55 刚刚封装好的request方法 {data: {…}, status: 200, statusText: \"OK\", headers: {…}, config: {…}, …}"
				}
			]
		},
		{
			"ID": "20220317201732-0fap3ly",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-0fap3ly"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "config = config.interceptors.requestInterceptor(config)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-w7awvbr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-w7awvbr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个意思就是一个普通函数的调用，返回值config在进行真正的request请求，手动写逻辑，完成在请求时拦截的功能，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "但是没有处理error的情况"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-y3tg3z8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-y3tg3z8"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "this.instance.interceptors.response.use(fn1,fn2）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-y3wzz2y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-y3wzz2y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "内置的拦截器，只要执行request方法就会执行"
				}
			]
		},
		{
			"ID": "20220317201732-6u08uqm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-6u08uqm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同理"
				}
			]
		},
		{
			"ID": "20220317201732-phja4na",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-phja4na"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "request/index"
				}
			]
		},
		{
			"ID": "20220317201732-6w8gz48",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-6w8gz48"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "request(config: HYRequestConfig): void {\n    if (config.interceptors?.requestInterceptor) {\n      config = config.interceptors.requestInterceptor(config)\n    }\n\n    this.instance.request(config).then((res) =\u003e {\n      **if (config.interceptors?.responseInterceptor) {\n        res = config.interceptors.responseInterceptor(res)\n      }**\n      console.log('刚刚封装好的request方法', res)\n    })\n  }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-ppb0p2l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ppb0p2l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "main.ts"
				}
			]
		},
		{
			"ID": "20220317201732-x66ueqi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-x66ueqi"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "hyRequest.request({\n  url: 'home/multidata',\n  method: 'GET',\n  interceptors: {\n    **requestInterceptor: (config) =\u003e {\n      console.log('单独请求的config')\n      return config\n    },**\n\n    **responseInterceptor: (res) =\u003e {\n      console.log('单独处理res')\n      return res\n    }**\n  }\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-xbk76bw",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220317201732-xbk76bw"
			}
		},
		{
			"ID": "20220317201732-70inikr",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220317201732-70inikr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "1：46- 2：05 token拦截和两种错误拦截"
				}
			]
		},
		{
			"ID": "20220317201732-duanl3o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-duanl3o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "请求携带token，(写在请求拦截处，可以写在全局的请求拦截处)"
				}
			]
		},
		{
			"ID": "20220317201732-2255d4y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-2255d4y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "放进"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "headers.Authorization"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-jdcdp3b",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220317201732-jdcdp3b"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "**config.headers.Authorization = "
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "Bearer ${token}"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "**"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-4ufbsta",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20220317201732-4ufbsta"
			},
			"Children": [
				{
					"ID": "20220317201732-1fzoxci",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20220317201732-1fzoxci"
					},
					"Children": [
						{
							"ID": "20220317201732-puqfuhu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220317201732-puqfuhu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "service/index"
								}
							]
						},
						{
							"ID": "20220317201732-jco9rt2",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockFenceOffset": 2,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "dHN4",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20220317201732-jco9rt2"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "dHN4"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "const hyRequest = new HYRequest({\n  baseURL: BASE_URL,\n  timeout: TIME_OUT,\n  interceptors: {\n    requestInterceptors: (config) =\u003e {\n\t\t\t**const token = ''\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`\n      }**\n      console.log('随便什么的拦截器')\n      return config\n    },\n    requestInterceptorsCatch: (err) =\u003e {\n      return err\n    },\n    responseInterceptors: (config) =\u003e {\n      return config\n    }\n    // responseInterceptorsCatch: (err) =\u003e {\n    //   return err\n    // }\n  }\n})\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-gc1isv8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-gc1isv8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "axios 返回的res 是做了一层封装，服务器返回的数据在 "
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "res.data"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "http://res.data"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "  res 的全部部分为绿框，真正数据为红色框"
				}
			]
		},
		{
			"ID": "20220317201732-26xi5dd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-26xi5dd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们要用的数据data —— \u003e 服务器封装{ sucess  : returncode:    data:  } ——- \u003e axios封装{ config ：   data: { sucess  :  code:    data:  } }"
				}
			]
		},
		{
			"ID": "20220317201732-k1y8zrq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-k1y8zrq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "服务器封装了一些请求成功失败的相关信息"
				}
			]
		},
		{
			"ID": "20220317201732-sj6dsj7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-sj6dsj7"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "Untitled"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Untitled-20220317201732-9myyl9q.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-hzwcur0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220317201732-hzwcur0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "请求失败-拦截"
				}
			]
		},
		{
			"ID": "20220317201732-vm2i6rg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-vm2i6rg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "失败的两种情况"
				}
			]
		},
		{
			"ID": "20220317201732-i13k44s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-i13k44s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "响应拦截"
				}
			]
		},
		{
			"ID": "20220317201732-6y4isip",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-6y4isip"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "两种情况的错误分别存在"
				}
			]
		},
		{
			"ID": "20220317201732-jspx59v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-jspx59v"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "err.response.status"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-ju9xm2t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ju9xm2t"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "data.returnCode"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-fs22ral",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20220317201732-fs22ral"
			},
			"Children": [
				{
					"ID": "20220317201732-v1zxawp",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20220317201732-v1zxawp"
					},
					"Children": [
						{
							"ID": "20220317201732-f3dqeqk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220317201732-f3dqeqk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "request/index"
								}
							]
						},
						{
							"ID": "20220317201732-xjcr29u",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockFenceOffset": 2,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "dHN4",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20220317201732-xjcr29u"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "dHN4"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "//全局拦截器\nthis.instance.interceptors.response.use(\n      (res) =\u003e {\n        console.log('所有的实例都有的拦截器: 响应成功拦截')\n        **const data = res.data\n        if (data.returnCode === '-1001') {\n          console.log('请求失败~, 错误信息')\n        } else {\n          return data\n        }**\n      },\n      (err) =\u003e {\n        console.log('所有的实例都有的拦截器: 响应失败拦截')\n        **if (err.response.status === 404) {\n          console.log('404的错误~')\n        }**\n        return err\n      }\n    )\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-xk0dq3i",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220317201732-xk0dq3i"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "2：07 - 2:27 loading的添加和移除"
				}
			]
		},
		{
			"ID": "20220317201732-r2yyxca",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-r2yyxca"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "请求前显示loading ，请求结束移除Loading"
				}
			]
		},
		{
			"ID": "20220317201732-kvkdsuk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-kvkdsuk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Loading使用element-plus里的组件"
				}
			]
		},
		{
			"ID": "20220317201732-09k6u7v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-09k6u7v"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeCodeSpan",
							"CodeMarkerLen": 1,
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker",
									"Data": "`"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "import { ElLoading } from 'element-plus'"
								},
								{
									"Type": "NodeCodeSpanCloseMarker",
									"Data": "`"
								}
							]
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-3psrq24",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-3psrq24"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "添加 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "this.loadig  =  ElLoading.service({}）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-wrqycsn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-wrqycsn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "移除 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "``this.loading?.close()"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-am22833",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-am22833"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "Untitled"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Untitled 1-20220317201732-r1grr3x.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-9wvudri",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-9wvudri"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "Untitled"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Untitled 2-20220317201732-5g9s0ft.png"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-2qfvr7o",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220317201732-2qfvr7o"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "自定义showloading属性（是否展示loading）"
				}
			]
		},
		{
			"ID": "20220317201732-cau74l7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-cau74l7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "config的类型里新增 showLoading?: boolean"
				}
			]
		},
		{
			"ID": "20220317201732-ui5ecti",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-ui5ecti"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "export interface HYRequestConfig extends AxiosRequestConfig {\n  interceptors?: HYRequestInterceptors\n  **showLoading?: boolean**\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-mofd665",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-mofd665"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "class 类使用"
				}
			]
		},
		{
			"ID": "20220317201732-9nwx4q4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-9nwx4q4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "showLoading: boolean 必传项"
				}
			]
		},
		{
			"ID": "20220317201732-ug4lzr1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ug4lzr1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "this.showLoading = config.showLoading ?? true 如果没传就是true"
				}
			]
		},
		{
			"ID": "20220317201732-laag0cb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-laag0cb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class HYRequest {\n  instance: AxiosInstance\n  interceptors?: HYRequestInterceptors\n  loading?: ILoadingInstance\n  **showLoading: boolean**\n  constructor(config: HYRequestConfig) {\n    this.instance = axios.create(config)\n    this.interceptors = config.interceptors\n    this.showLoading = **config.showLoading** ?? true\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-nha4wdb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-nha4wdb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "判断showLoading 的值"
				}
			]
		},
		{
			"ID": "20220317201732-g264kqo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-g264kqo"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "this.instance.interceptors.request.use(\n      (config) =\u003e {\n        console.log('所有的实例都有的拦截器: 请求成功拦截')\n\n        **if (this.showLoading) {\n          this.loading = ElLoading.service({\n            lock: true,\n            text: '正在请求数据....',\n            background: 'rgba(0, 0, 0, 0.5)'\n          })\n        }**\n        return config\n      },\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-c2vkque",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-c2vkque"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "移除"
				}
			]
		},
		{
			"ID": "20220317201732-jda645j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-jda645j"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "this.instance.interceptors.response.use(\n      (res) =\u003e {\n        console.log('所有的实例都有的拦截器: 响应成功拦截')\n        **this.loading?.close()**\n\n        const data = res.data\n        if (data.returnCode === '-1001') {\n          console.log('请求失败~, 错误信息')\n        } else {\n          return data\n        }\n      },fn2)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-fj31ou9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-fj31ou9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果是请求时传入"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "showLoading"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-akw20ni",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-akw20ni"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "showLoading 值修改成request传进来的值"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-o3dfbxx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-o3dfbxx"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "this.showLoading = config.showLoading"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-oyb5cml",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-oyb5cml"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "修改后重新修改"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "showLoading 的值为true"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-3vii4ik",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-3vii4ik"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "this.showLoading = true"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-a31hnng",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-a31hnng"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不会影响下一次请求"
				}
			]
		},
		{
			"ID": "20220317201732-xfbfqqr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-xfbfqqr"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "request(config: HYRequestConfig): void {\n    if (config.interceptors?.requestInterceptor) {\n      config = config.interceptors.requestInterceptor(config)\n    }\n\n    // 2.判断是否需要显示loading\n    **if (config.showLoading === false) {\n      this.showLoading = config.showLoading\n    }**\n\n    this.instance.request(config).then((res) =\u003e {\n      if (config.interceptors?.responseInterceptor) {\n        res = config.interceptors.responseInterceptor(res)\n      }\n      console.log('刚刚封装好的request方法', res)\n    })\n    **this.showLoading = true**\n  }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-ca6ukiq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-ca6ukiq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "修改所有的true 为默认常量"
				}
			]
		},
		{
			"ID": "20220317201732-gfjy8s0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-gfjy8s0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "const DEAFULT_LOADING = true\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-1t9n3q5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-1t9n3q5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "请求时传入showLoading"
				}
			]
		},
		{
			"ID": "20220317201732-b8pywb4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-b8pywb4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "hyRequest.request({\n  url: 'home/multidata',\n  method: 'GET',\n  **showLoading: false**\n  \n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-a56xv6a",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220317201732-a56xv6a"
			}
		},
		{
			"ID": "20220317201732-s7hhxj9",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220317201732-s7hhxj9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "# "
				},
				{
					"Type": "NodeText",
					"Data": "2:28 -2:48 完善request 请求封装和其他请求封装"
				}
			]
		},
		{
			"ID": "20220317201732-chgxb6m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-chgxb6m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目前request真正起作用的请求在内部拿到res,"
				}
			]
		},
		{
			"ID": "20220317201732-yht4am1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-yht4am1"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "hyRequest.request({\n  url: 'home/multidata',\n  method: 'GET',\n  // showLoading: false,\n  interceptors: {\n    requestInterceptor: (config) =\u003e {\n      console.log('单独请求的config')\n      return config\n    },\n    responseInterceptor: (res) =\u003e {\n      console.log('单独处理res')\n      return res\n    }\n  }\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-n679omr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-n679omr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "即请求完之后main.ts拿不到res"
				}
			]
		},
		{
			"ID": "20220317201732-gwxn7gd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-gwxn7gd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以让返回值为Promise"
				}
			]
		},
		{
			"ID": "20220317201732-eeqjw4w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-eeqjw4w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "把res 放进"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "resolve(res)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-st56oej",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-st56oej"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "把err放进"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "reject(err)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-2qf4u2v",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220317201732-2qf4u2v"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "2:30 修改request方法"
				}
			]
		},
		{
			"ID": "20220317201732-17joivr",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20220317201732-17joivr"
			},
			"Children": [
				{
					"ID": "20220317201732-eruu7ik",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20220317201732-eruu7ik"
					},
					"Children": [
						{
							"ID": "20220317201732-7mf7x7u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220317201732-7mf7x7u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "原request方法（返回值类型为void）"
								}
							]
						},
						{
							"ID": "20220317201732-x4md4z7",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockFenceOffset": 2,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "anN4",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20220317201732-x4md4z7"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "anN4"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "// 封装好request方法\n  request(config: HYRequestConfig): **void** {\n    if (config.interceptors?.requestInterceptors) {\n      console.log('单个请求拦截')\n      config = config.interceptors.requestInterceptors(config)\n    }\n    this.instance.request(config).then((res) =\u003e {\n      if (config.interceptors?.responseInterceptors) {\n        console.log('单个请求响应拦截')\n        res = config.interceptors.responseInterceptors(res)\n      }\n      console.log(res)\n    })\n  }\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				},
				{
					"ID": "20220317201732-vtrdhf6",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"Tight": true,
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20220317201732-vtrdhf6"
					},
					"Children": [
						{
							"ID": "20220317201732-x7tib5e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220317201732-x7tib5e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "request/index"
								}
							]
						},
						{
							"ID": "20220317201732-3xwfa0d",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockFenceOffset": 2,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "dHN4",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20220317201732-3xwfa0d"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "dHN4"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "request\u003cT\u003e(config: HYRequestConfig): Promise\u003cT\u003e {\n    **return new Promise((resolve, reject) =\u003e {\n\t\t\t//单独拦截器**\n      if (config.interceptors?.requestInterceptor) {\n        config = config.interceptors.requestInterceptor(config)\n      }\n\n      // 2.判断是否需要显示loading\n      if (config.showLoading === false) {\n        this.showLoading = config.showLoading\n      }\n\n      this.instance\n        .request\u003cany, T\u003e(config)\n        .then((res) =\u003e {\n          if (config.interceptors?.responseInterceptor) {\n            // res = config.interceptors.responseInterceptor(res)\n          }\n          console.log('刚刚封装好的request方法', res)\n          this.showLoading = DEAFULT_LOADING\n          **resolve(res)**\n        })\n        .catch((err) =\u003e {\n          this.showLoading = DEAFULT_LOADING\n          **reject(err)**\n          return err\n        })\n    })\n  }\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-9z9yxv4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220317201732-9z9yxv4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "request\u003cT\u003e(config: HYRequestConfig): Promise\u003cT\u003e"
				}
			]
		},
		{
			"ID": "20220317201732-2bn3i2y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-2bn3i2y"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第一个\u003cT\u003e 是用户传入自己定义的类型"
				}
			]
		},
		{
			"ID": "20220317201732-cgfwrdf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-cgfwrdf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第二个\u003cT\u003e是 把用户传入自己定义的类型，给了返回值是Promise\u003cT\u003e ，此时 .then((res) =\u003e {........ 中"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "res就是\u003cT\u003e类型"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-nch4r1h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220317201732-nch4r1h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "this.instance.request\u003cany, T\u003e(config).then((res) =\u003e {"
				}
			]
		},
		{
			"ID": "20220317201732-f6d1zsj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-f6d1zsj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\u003cany, T\u003e 两个泛型"
				}
			]
		},
		{
			"ID": "20220317201732-8wnfl3a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-8wnfl3a"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " res是AxiosRequestResponse类型，不是Promise的res的类型，所以要修改成Promise\u003cT\u003e"
				}
			]
		},
		{
			"ID": "20220317201732-tmxuwf4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-tmxuwf4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看axios里request的类型"
				}
			]
		},
		{
			"ID": "20220317201732-035tngv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-035tngv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "request\u003cT = any, R = AxiosResponse\u003cT\u003e\u003e (config: AxiosRequestConfig): Promise\u003cR\u003e;"
				}
			]
		},
		{
			"ID": "20220317201732-2e0x54n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-2e0x54n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "发现request有两个泛型，我们要修改的是\u003cR\u003e ==即对应的返回值 Promise\u003cR\u003e;"
				}
			]
		},
		{
			"ID": "20220317201732-mi2eyg2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-mi2eyg2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\u003cany, T\u003e 就是制定返回值的res是T类型"
				}
			]
		},
		{
			"ID": "20220317201732-ras10tk",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 45,
				"Padding": 2,
				"Marker": "LQ==",
				"Num": -1
			},
			"Properties": {
				"id": "20220317201732-ras10tk"
			},
			"Children": [
				{
					"ID": "20220317201732-53efrfn",
					"Type": "NodeListItem",
					"Data": "-",
					"ListData": {
						"BulletChar": 45,
						"Padding": 2,
						"Marker": "LQ==",
						"Num": -1
					},
					"Properties": {
						"id": "20220317201732-53efrfn"
					},
					"Children": [
						{
							"ID": "20220317201732-en59o9s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220317201732-en59o9s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "main.ts"
								}
							]
						},
						{
							"ID": "20220317201732-loerxl0",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockFenceOffset": 2,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "dHN4",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20220317201732-loerxl0"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "dHN4"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "**interface DataType {\n  data: any\n  returnCode: string\n  success: boolean\n}**\n\nhyRequest\n  .request**\u003cDataType\u003e**({\n    url: '/home/multidata',\n    showLoading: false\n  })\n  .then((res) =\u003e {\n    **console.log(res.data)\n    console.log(res.returnCode)\n    console.log(res.success)**\n  })\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220317201732-084y88x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-084y88x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他请求方法封装"
				}
			]
		},
		{
			"ID": "20220317201732-wm4imy3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-wm4imy3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本质就是调用了request方法"
				}
			]
		},
		{
			"ID": "20220317201732-aqp8ess",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "dHN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-aqp8ess"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "get\u003cT\u003e(config: HYRequestConfig): Promise\u003cT\u003e {\n    return this.request\u003cT\u003e({ ...config, method: 'GET' })\n  }\n\n  post\u003cT\u003e(config: HYRequestConfig): Promise\u003cT\u003e {\n    return this.request\u003cT\u003e({ ...config, method: 'POST' })\n  }\n\n  delete\u003cT\u003e(config: HYRequestConfig): Promise\u003cT\u003e {\n    return this.request\u003cT\u003e({ ...config, method: 'DELETE' })\n  }\n\n  patch\u003cT\u003e(config: HYRequestConfig): Promise\u003cT\u003e {\n    return this.request\u003cT\u003e({ ...config, method: 'PATCH' })\n  }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-q9j8g9x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-q9j8g9x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了使单独拦截器不报错，res"
				}
			]
		},
		{
			"ID": "20220317201732-vcvl41s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-vcvl41s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为之前的全局拦截器已经将返回的数据进行了处理，拿到的是data ，不是res (AxiosResponse类型)"
				}
			]
		},
		{
			"ID": "20220317201732-svdb4e7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "anN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-svdb4e7"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "this.instance.interceptors.response.use(\n      (res) =\u003e {\n        console.log('所有的实例都有的拦截器: 响应成功拦截')\n        setTimeout(() =\u003e {\n          this.loading?.close()\n        }, 100)\n        const data = res.data\n        if (data.returnCode === '-1001') {\n          console.log('请求失败~, 错误信息')\n        } else {\n          **return data**\n        }\n\n        return res\n      },\n      (err) =\u003e {\n        console.log('所有的实例都有的拦截器: 响应失败拦截')\n        if (err.response.status === 404) {\n          console.log('404的错误~')\n        }\n        return err\n      }\n    )\n  }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-9qrr23v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-9qrr23v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "暂时注释掉res"
				}
			]
		},
		{
			"ID": "20220317201732-z67nhd3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "anN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-z67nhd3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "if (config.interceptors?.responseInterceptor) {\n   // res = config.interceptors.responseInterceptor(res)\n }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220317201732-pvbrt6r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220317201732-pvbrt6r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "或者修改了./type"
				}
			]
		},
		{
			"ID": "20220317201732-qtvza67",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "anN4",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220317201732-qtvza67"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anN4"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import { AxiosRequestConfig, AxiosResponse } from 'axios'\nexport interface HYRequestInterceptors {\n  requestInterceptors?: (config: AxiosRequestConfig) =\u003e AxiosRequestConfig\n  requestInterceptorsCatch?: (error: any) =\u003e any\n\t//原本应该为AxiosResponse 类型\n  **responseInterceptors?: (config: any) =\u003e any**\n  responseInterceptorsCatch?: (error: any) =\u003e any\n}\nexport interface HYRequestConfig extends AxiosRequestConfig {\n  interceptors?: HYRequestInterceptors\n  showLoading?: boolean\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		}
	]
}