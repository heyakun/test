{
	"ID": "20220324211541-il39jpc",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220324211541-il39jpc",
		"title": "newcer-0324",
		"updated": "20220324220302"
	},
	"Children": [
		{
			"ID": "20220324211724-qraxex8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324211724-qraxex8",
				"updated": "20220324212326"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作者： Zeekg"
				}
			]
		},
		{
			"ID": "20220324212327-mpf63ph",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220324212327-mpf63ph",
				"updated": "20220324212339"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字节实习"
				}
			]
		},
		{
			"ID": "20220324211658-bejockh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220324211658-bejockh",
				"updated": "20220324211658"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一面3.11："
				}
			]
		},
		{
			"ID": "20220324211739-fjhxkr5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211739-fjhxkr5",
				"updated": "20220324211739"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "自我介绍"
				}
			]
		},
		{
			"ID": "20220324211740-t5apum9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211740-t5apum9",
				"updated": "20220324211740"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "介绍下项目（我就说的简历上面两个项目）"
				}
			]
		},
		{
			"ID": "20220324211741-5byae8q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211741-5byae8q",
				"updated": "20220324211741"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "项目的难点、解决了什么"
				}
			]
		},
		{
			"ID": "20220324211742-9nhpm9l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211742-9nhpm9l",
				"updated": "20220324211742"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问了许多项目中的东西（比如用cookie做了什么，有点记不住了，先写记得的一点）"
				}
			]
		},
		{
			"ID": "20220324211744-iw8kp9b",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211744-iw8kp9b",
				"updated": "20220324211744"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "style-components和CSS模块比，好处在那里？"
				}
			]
		},
		{
			"ID": "20220324211744-64e26qe",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211744-64e26qe",
				"updated": "20220324211744"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现左右两块宽度固定中间适配，怎么做（说了双飞翼和圣杯布局的一点思想）还有么？（flex布局）"
				}
			]
		},
		{
			"ID": "20220324211812-929yb3q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211812-929yb3q",
				"updated": "20220324211812"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "flex:1具体意思是什么"
				}
			]
		},
		{
			"ID": "20220324211813-wb9kmui",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211813-wb9kmui",
				"updated": "20220324211813"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有了Mobx为什么还要用localStorage（数据持久化）"
				}
			]
		},
		{
			"ID": "20220324211816-5lf3e8j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211816-5lf3e8j",
				"updated": "20220324211816"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "localStorage和SessionStorage区别"
				}
			]
		},
		{
			"ID": "20220324211816-bjmjqs6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211816-bjmjqs6",
				"updated": "20220324211816"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "项目用虚拟列表做了什么，怎么做的"
				}
			]
		},
		{
			"ID": "20220324211817-vdeaw1w",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211817-vdeaw1w",
				"updated": "20220324211817"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么transform比top快"
				}
			]
		},
		{
			"ID": "20220324211818-cr8ewv1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211818-cr8ewv1",
				"updated": "20220324211818"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "图片懒加载怎么做的，如果一次性滚动到底了呢？怎么优化"
				}
			]
		},
		{
			"ID": "20220324211819-hhc6kas",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211819-hhc6kas",
				"updated": "20220324211819"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "防抖和节流原理"
				}
			]
		},
		{
			"ID": "20220324211820-wrtcs2z",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211820-wrtcs2z",
				"updated": "20220324211820"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ES6特性说几个"
				}
			]
		},
		{
			"ID": "20220324211821-b5wy9ij",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211821-b5wy9ij",
				"updated": "20220324211821"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Map和Set你在项目中怎么用的"
				}
			]
		},
		{
			"ID": "20220324211821-440u6t7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211821-440u6t7",
				"updated": "20220324211821"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "let和var区别"
				}
			]
		},
		{
			"ID": "20220324211823-6ks1wm0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211823-6ks1wm0",
				"updated": "20220324211823"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "闭包，闭包场景（之后又问了点this的一些知识）"
				}
			]
		},
		{
			"ID": "20220324211825-ybq6314",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211825-ybq6314",
				"updated": "20220324211825"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HTTP和HTTPS区别"
				}
			]
		},
		{
			"ID": "20220324211826-slng613",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211826-slng613",
				"updated": "20220324211826"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HTTPS的过程"
				}
			]
		},
		{
			"ID": "20220324211827-sez9yb7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324211827-sez9yb7",
				"updated": "20220324211827"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "算法 ：平铺数组（之后又要求算出数组中的深度）"
				}
			]
		},
		{
			"ID": "20220324211901-kocbue2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324211901-kocbue2",
				"updated": "20220324211901"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "（一面大部分在聊项目）"
				}
			]
		},
		{
			"ID": "20220324211658-51skq06",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220324211658-51skq06",
				"updated": "20220324211658"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二面3.16："
				}
			]
		},
		{
			"ID": "20220324212004-odt3fp1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212004-odt3fp1",
				"updated": "20220324212004"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问一些项目相关的东西（setInterval弊端，数据实时性）"
				}
			]
		},
		{
			"ID": "20220324212004-um1f42p",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212004-um1f42p",
				"updated": "20220324212004"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "react query怎么具体工作的"
				}
			]
		},
		{
			"ID": "20220324212005-u0xvrmv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212005-u0xvrmv",
				"updated": "20220324212005"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "跨域是什么（说了CORS，具体怎么做的，简单请求，非简单请求，预请求检测一些东西）"
				}
			]
		},
		{
			"ID": "20220324212005-5366y5s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212005-5366y5s",
				"updated": "20220324212005"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "除了CORS还有么（jsonp）"
				}
			]
		},
		{
			"ID": "20220324212005-z8vynpo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212005-z8vynpo",
				"updated": "20220324212005"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "jsonp原理是什么，怎么做的"
				}
			]
		},
		{
			"ID": "20220324212005-48mw9wu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212005-48mw9wu",
				"updated": "20220324212005"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "float是什么，能做什么"
				}
			]
		},
		{
			"ID": "20220324212005-weedjnr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212005-weedjnr",
				"updated": "20220324212005"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "word文字环绕用float怎么做"
				}
			]
		},
		{
			"ID": "20220324212006-c96uqy7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212006-c96uqy7",
				"updated": "20220324212006"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "BFC是什么，那些能触发BFC"
				}
			]
		},
		{
			"ID": "20220324212012-s0sa7kd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212012-s0sa7kd",
				"updated": "20220324212012"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "快排的思想、时间复杂度"
				}
			]
		},
		{
			"ID": "20220324212006-hf2rw44",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212006-hf2rw44",
				"updated": "20220324212006"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS的类型存放在那里（栈、堆那些东西）"
				}
			]
		},
		{
			"ID": "20220324212006-a1z91jw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212006-a1z91jw",
				"updated": "20220324212006"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那些存在栈，那些存在堆里面"
				}
			]
		},
		{
			"ID": "20220324212007-x5fwu70",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212007-x5fwu70",
				"updated": "20220324212007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "new的执行原理"
				}
			]
		},
		{
			"ID": "20220324212007-dqxx7m5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212007-dqxx7m5",
				"updated": "20220324212007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS事件循环（宏任务、微任务那些）"
				}
			]
		},
		{
			"ID": "20220324212007-79ykxn8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212007-79ykxn8",
				"updated": "20220324212007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "看代码写结果（和闭包，var、let、宏任务微任务相关，都是老生常谈的一些题目，不写了）"
				}
			]
		},
		{
			"ID": "20220324212008-arc14fl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212008-arc14fl",
				"updated": "20220324212008"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "TCP三次握手、为什么要三次握手"
				}
			]
		},
		{
			"ID": "20220324212008-rpbplbf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212008-rpbplbf",
				"updated": "20220324212008"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问看过React或Vue原理没（回答看过React的，之后就没问了，我：？？？）"
				}
			]
		},
		{
			"ID": "20220324212008-03vhx5r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324212008-03vhx5r",
				"updated": "20220324212008"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码题：功能就是如果上一次的没请求完，之后的就无响应\n"
				}
			]
		},
		{
			"ID": "20220324212405-c45tffv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220324212405-c45tffv",
				"updated": "20220324212408"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function singlePipe(promiseFn) {\n\n  // TODO\n\n}\n\n// 模拟一次请求\nfunction bar(data) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(() =\u003e resolve(data), 1000)\n  })\n}\n\nconst request = singlePipe(bar)\n\nrequest(1).then((res) =\u003e console.log(res)) // 1\nrequest(2).then((res) =\u003e console.log(res)) // 无响应\nsetTimeout(() =\u003e {\n  request(3).then((res) =\u003e console.log(res)) // 3\n}, 1001)\n（二面吃亏在八股文CSS上）\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220324211658-knm6i52",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220324211658-knm6i52",
				"updated": "20220324212140"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "三面3.21：开始就是说说你最近学的东西（浏览器渲染原理那方面，和个人项目有关）"
				}
			]
		},
		{
			"ID": "20220324212145-jq3x1mk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212145-jq3x1mk",
				"updated": "20220324212145"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "transfrom和top"
				}
			]
		},
		{
			"ID": "20220324212145-47atcnm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212145-47atcnm",
				"updated": "20220324212145"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么tranfrom好，有什么数据之类来表示这个优化的好处（怎么证明你优化了，而不是直观的去感受了）"
				}
			]
		},
		{
			"ID": "20220324212145-45as36c",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212145-45as36c",
				"updated": "20220324212145"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那些元素会生成合成层出来？"
				}
			]
		},
		{
			"ID": "20220324212145-8hshrxw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212145-8hshrxw",
				"updated": "20220324212145"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "will-change的具体作用"
				}
			]
		},
		{
			"ID": "20220324212145-bce9jiv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212145-bce9jiv",
				"updated": "20220324212145"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么会发生重绘、重排"
				}
			]
		},
		{
			"ID": "20220324212145-u2xt70u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212145-u2xt70u",
				"updated": "20220324212145"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "深究了许多东西（比如那些会重绘重排，为什么会引发重绘重排，重排重绘原理是什么，如果设置字体大小"
				}
			]
		},
		{
			"ID": "20220324212150-dji2i9b",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212150-dji2i9b",
				"updated": "20220324212150"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "影响到了其他DOM元素会引发重排么？当时快被问麻了，有点记不得了）"
				}
			]
		},
		{
			"ID": "20220324212152-7btsrcr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212152-7btsrcr",
				"updated": "20220324212152"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常用那些React Hooks"
				}
			]
		},
		{
			"ID": "20220324212146-24zksyy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212146-24zksyy",
				"updated": "20220324212146"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "useCallback和useMemo区别，一般用来干嘛，怎么用"
				}
			]
		},
		{
			"ID": "20220324212146-60kbxi5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212146-60kbxi5",
				"updated": "20220324212146"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果要你自己实现一个双向绑定，怎么实现"
				}
			]
		},
		{
			"ID": "20220324212146-m0ew6ng",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212146-m0ew6ng",
				"updated": "20220324212146"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "怎么监听一个事件（onclick和addEventListener），第三个参数有什么作用"
				}
			]
		},
		{
			"ID": "20220324212157-95e35nw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212157-95e35nw",
				"updated": "20220324212157"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "冒泡的过程是怎样的？"
				}
			]
		},
		{
			"ID": "20220324212159-egnarht",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212159-egnarht",
				"updated": "20220324212159"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "算法 ：最长连续公共子序列"
				}
			]
		},
		{
			"ID": "20220324212219-4duhtj4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220324212219-4duhtj4",
				"updated": "20220324212245"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "输出结果：\nnew Promise((resolve, reject) =\u003e {\n  reject(1);\n  console.log(6);\n}).catch(() =\u003e {\n  console.log(2);\n}).then(() =\u003e console.log(3), (v) =\u003e console.log(v))\n  .then(console.log)\nconsole.log(5);\n（基本上什么问题都是细问，最后 算法 也是一行一行解释，快被问麻的一面）\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220324211658-c3co7n9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324211658-c3co7n9",
				"updated": "20220324211658"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.23 收到感谢信。也感谢字节给的面试机会吧。哈哈哈"
				}
			]
		},
		{
			"ID": "20220324212424-8y2cyuw",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220324212424-8y2cyuw",
				"updated": "20220324212424"
			}
		},
		{
			"ID": "20220324212427-ppz1dvg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324212427-ppz1dvg",
				"updated": "20220324212544"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字节电商"
				}
			]
		},
		{
			"ID": "20220324213903-u2nyz35",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213903-u2nyz35",
				"updated": "20220324213915"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作者：凶鸡"
				}
			]
		},
		{
			"ID": "20220324212547-1x808lt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324212547-1x808lt",
				"updated": "20220324212547"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "自我介绍\n"
				}
			]
		},
		{
			"ID": "20220324212551-c2yrkfz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324212551-c2yrkfz",
				"updated": "20220324212551"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "参加的 百度 前端训练营项目描述\n"
				}
			]
		},
		{
			"ID": "20220324212551-mjuwi28",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324212551-mjuwi28",
				"updated": "20220324212551"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问计算机专业知识：\n"
				}
			]
		},
		{
			"ID": "20220324212552-e7bfdzk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212552-e7bfdzk",
				"updated": "20220324212552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、有哪些数据结构，怎么分类"
				}
			]
		},
		{
			"ID": "20220324212552-5bakv1r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212552-5bakv1r",
				"updated": "20220324212552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、TCP和UDP区别，应用场景"
				}
			]
		},
		{
			"ID": "20220324212552-rzc8tbh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212552-rzc8tbh",
				"updated": "20220324212552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、HTTP的传输层协议是TCP还是UDP"
				}
			]
		},
		{
			"ID": "20220324212552-6swekzn",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212552-6swekzn",
				"updated": "20220324212552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "flex布局中的flex:1是啥"
				}
			]
		},
		{
			"ID": "20220324212552-17zexi1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212552-17zexi1",
				"updated": "20220324212552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "手撕样式代码：父元素宽度100vw，每列三个子元素均分父宽度怎么判断是不是空对象"
				}
			]
		},
		{
			"ID": "20220324212553-qwp4fjz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212553-qwp4fjz",
				"updated": "20220324212553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS的继承和原型链"
				}
			]
		},
		{
			"ID": "20220324212553-o252i6r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212553-o252i6r",
				"updated": "20220324212553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "闭包是什么"
				}
			]
		},
		{
			"ID": "20220324212553-eocr4ww",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212553-eocr4ww",
				"updated": "20220324212553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用域是在函数定义时决定的还是函数运行时决定的"
				}
			]
		},
		{
			"ID": "20220324212553-a4g5p39",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212553-a4g5p39",
				"updated": "20220324212553"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "手撕JS代码：用Promise实现一个sleep函数，每隔一段事件打印一个数组元素"
				}
			]
		},
		{
			"ID": "20220324212547-66z0dmy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220324212547-66z0dmy",
				"updated": "20220324212619"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "async function print(arr, delay) {\n    for(const v of arr) {\n        await sleep(delay);\n        console.log(v);\n    }\n}\nfunction sleep(delay) {\n    return new Promise(resolve =\u003e {\n        setTimerout(() =\u003e {\n            resolve()\n        }, delay);\n    })\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220324212602-wsmjdku",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212602-wsmjdku",
				"updated": "20220324212602"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "手撕 算法 ： 二叉树 最大深度（卡住半天，好尴尬，最后还是在面试官提醒下写出来了）"
				}
			]
		},
		{
			"ID": "20220324212603-r90042p",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324212603-r90042p",
				"updated": "20220324212612"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "反问：字节的技术栈是不同业务不同的吗？（React为主）提到部门业务是跨端的，又问了是跨哪些端"
				}
			]
		},
		{
			"ID": "20220324212604-dlp3dpm",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220324212604-dlp3dpm",
				"updated": "20220324212604"
			}
		},
		{
			"ID": "20220324213010-zyomxrd",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220324213010-zyomxrd",
				"updated": "20220324213017"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "腾讯前端实习"
				}
			]
		},
		{
			"ID": "20220324212746-r0kvy9o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324212746-r0kvy9o",
				"updated": "20220324212843"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作者：四季奶青大杯正常糖"
				}
			]
		},
		{
			"ID": "20220324212853-cnxj0on",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212853-cnxj0on",
				"updated": "20220324212853"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "讲一讲 CSS 盒子模型, padding 和 margin 区别"
				}
			]
		},
		{
			"ID": "20220324212854-bhqglau",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212854-bhqglau",
				"updated": "20220324212854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个容器内部有一些文字, 如何让这些文字垂直水平居中"
				}
			]
		},
		{
			"ID": "20220324212854-bif1iu8",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212854-bif1iu8",
				"updated": "20220324212854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Vue 和 React 有哪些相同和不同, 它们各自都有哪些核心模块"
				}
			]
		},
		{
			"ID": "20220324212854-3ru6lew",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212854-3ru6lew",
				"updated": "20220324212854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我几乎是把 中介绍的 vue 和 react 之间比较的内容背了一遍, 然后面试官反复说太简略, 能不能详细点, 然后"
				}
			]
		},
		{
			"ID": "20220324212854-gpi6h4g",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212854-gpi6h4g",
				"updated": "20220324212854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一直要我讲所谓\"核心模块\"; 还让我讲 vue 和 react 在实现虚拟 DOM 上的区别?"
				}
			]
		},
		{
			"ID": "20220324212854-tcpuab1",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212854-tcpuab1",
				"updated": "20220324212854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总之, 问得我有点懵哔"
				}
			]
		},
		{
			"ID": "20220324212739-wju71d4",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212739-wju71d4",
				"updated": "20220324212739"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "讲讲什么是闭包"
				}
			]
		},
		{
			"ID": "20220324212855-uvonja4",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212855-uvonja4",
				"updated": "20220324212855"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "你在实际项目中遇到过哪些闭包的坑"
				}
			]
		},
		{
			"ID": "20220324212902-kru8nck",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212902-kru8nck",
				"updated": "20220324212902"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "你熟悉 webpack 吗, 讲讲 webpack 主要干嘛的"
				}
			]
		},
		{
			"ID": "20220324212856-govr2xb",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212856-govr2xb",
				"updated": "20220324212856"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "出线上事故了你怎么排查"
				}
			]
		},
		{
			"ID": "20220324212856-44vg4bg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212856-44vg4bg",
				"updated": "20220324212856"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这得看是什么事故吧, 是样式崩了, 还是页面打不开了, 还是 js 飘红了"
				}
			]
		},
		{
			"ID": "20220324212739-qcjrne9",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212739-qcjrne9",
				"updated": "20220324212739"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "给你两个日期, 计算两个日期中间差了多少天"
				}
			]
		},
		{
			"ID": "20220324212856-62jamy6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212856-62jamy6",
				"updated": "20220324212856"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "答: 把两个日期转成时间戳, 计算它们中间差了多少秒"
				}
			]
		},
		{
			"ID": "20220324212739-xus7rcg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212739-xus7rcg",
				"updated": "20220324212739"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组去重有哪些方式"
				}
			]
		},
		{
			"ID": "20220324212952-y8dpede",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212952-y8dpede",
				"updated": "20220324212952"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "拉家常, 问我大学挂科没(...)"
				}
			]
		},
		{
			"ID": "20220324212857-cwhz6lo",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212857-cwhz6lo",
				"updated": "20220324212857"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "反问"
				}
			]
		},
		{
			"ID": "20220324212857-qq2s33v",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220324212857-qq2s33v",
				"updated": "20220324212857"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "介绍一下你们部门, 因为我在百度和招聘官网都没搜到, 以及部门所在哪个事业群"
				}
			]
		},
		{
			"ID": "20220324212857-i73d96v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324212857-i73d96v",
				"updated": "20220324212857"
			}
		},
		{
			"ID": "20220324212858-jevqsxa",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220324212858-jevqsxa",
				"updated": "20220324212858"
			}
		},
		{
			"ID": "20220324213504-etgtnf8",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220324213504-etgtnf8",
				"updated": "20220324213806"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部门：字节基础架构"
				}
			]
		},
		{
			"ID": "20220324213806-tbzfl8c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213806-tbzfl8c",
				"updated": "20220324213825"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作者： 牛客559180171"
				}
			]
		},
		{
			"ID": "20220324213801-77js9eo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213801-77js9eo",
				"updated": "20220324213803"
			}
		},
		{
			"ID": "20220324213759-5yx1lxz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213759-5yx1lxz",
				"updated": "20220324213759"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "城市：成都\n"
				}
			]
		},
		{
			"ID": "20220324213755-deaiviz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213755-deaiviz",
				"updated": "20220324213755"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "整体感受：约面试提供了很多灵活的时间选择。三轮面试每一位都很友好，流程很规范。能感受到对方认真看了简历，并且是根据自我介绍的内容进行提问。每次面试结束前，对方都讲解了之前没答上来的题正确回答是什么，哪部分知识点需要查漏补缺。"
				}
			]
		},
		{
			"ID": "20220324213504-usfj97j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213504-usfj97j",
				"updated": "20220324213504"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一面\n"
				}
			]
		},
		{
			"ID": "20220324213611-jkwrwdj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213611-jkwrwdj",
				"updated": "20220324213611"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "看js代码，说运行结果："
				}
			]
		},
		{
			"ID": "20220324213532-gyxzze1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213532-gyxzze1",
				"updated": "20220324213532"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一道事件循环、一道变量提升、一道 this "
				}
			]
		},
		{
			"ID": "20220324213629-qux5y1n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213629-qux5y1n",
				"updated": "20220324213631"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "（相关的题目在 牛客 很多了，万变不离其宗，可以自行查查看～掘金上也有很多好文章解释这些概念。）\nReact：\n"
				}
			]
		},
		{
			"ID": "20220324213537-nifyr7y",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213537-nifyr7y",
				"updated": "20220324213537"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "讲讲useMemo、useCallBack、useEffect的用法和思想"
				}
			]
		},
		{
			"ID": "20220324213538-tp4jrvf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213538-tp4jrvf",
				"updated": "20220324213538"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "项目："
				}
			]
		},
		{
			"ID": "20220324213538-bm6zdf8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213538-bm6zdf8",
				"updated": "20220324213538"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "聊了一下简历上提到的开源贡献"
				}
			]
		},
		{
			"ID": "20220324213504-hehyqlf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213504-hehyqlf",
				"updated": "20220324213504"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "算法 ："
				}
			]
		},
		{
			"ID": "20220324213540-i3f2aao",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213540-i3f2aao",
				"updated": "20220324213540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二叉树 遍历"
				}
			]
		},
		{
			"ID": "20220324213504-vzi6x0r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213504-vzi6x0r",
				"updated": "20220324213504"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二面\n"
				}
			]
		},
		{
			"ID": "20220324213544-8ppb46j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213544-8ppb46j",
				"updated": "20220324213544"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "React 组件设计 （因为项目经历中提到了一个组件的设计）"
				}
			]
		},
		{
			"ID": "20220324213544-s7de5k5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213544-s7de5k5",
				"updated": "20220324213544"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CSS 动画"
				}
			]
		},
		{
			"ID": "20220324213504-dyqedzd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213504-dyqedzd",
				"updated": "20220324213504"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "算法 ："
				}
			]
		},
		{
			"ID": "20220324213546-42zm9bb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220324213546-42zm9bb",
				"updated": "20220324213546"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二分查找"
				}
			]
		},
		{
			"ID": "20220324213504-hfn000v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213504-hfn000v",
				"updated": "20220324213504"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "三面\n"
				}
			]
		},
		{
			"ID": "20220324213548-49y3369",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213548-49y3369",
				"updated": "20220324213548"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "聊项目经历，考察了一下 [].map() 的使用。注意，[].map() 是可以获得idx的，第二个参数就是。"
				}
			]
		},
		{
			"ID": "20220324213549-95fbhsu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213549-95fbhsu",
				"updated": "20220324213549"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我当时不确定，用了个forEach获取idx，再一个个push到新数组列，后来想了下其实没必要。"
				}
			]
		},
		{
			"ID": "20220324213504-1zpxza3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213504-1zpxza3",
				"updated": "20220324213504"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HR 面\n"
				}
			]
		},
		{
			"ID": "20220324213552-3k9hy7o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324213552-3k9hy7o",
				"updated": "20220324213552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很轻松的聊天、聊聊个人规划、入职时间、实习时长等"
				}
			]
		},
		{
			"ID": "20220324213711-b4z8rni",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220324213711-b4z8rni",
				"updated": "20220324213711"
			}
		},
		{
			"ID": "20220324213735-mynal8x",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220324213735-mynal8x",
				"updated": "20220324215122"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字节国际化： 四季奶青大杯正常糖"
				}
			]
		},
		{
			"ID": "20220324215127-y3i0vds",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-y3i0vds",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问 Garfish 框架, 如何处理微前端路由, 以及一大堆框架源码级细节问题\n微前端中, 切换多种不同子工程, 与同一子工程内部切换路由有哪些区别\n微前端中, iframe 元素特点, iframe 能否操作主页面 DOM 节点, 能否获取主页面 cookie\nReact, 讲一讲自定义 hook\n讲一讲 TCP 三次握手, 第三次握手发送方是否可以携带信息\n讲一讲进程, 线程, 协程三者区别\n程序执行的原理, 当 CPU 执行程序, 读取变量时, 变量存储在内存, 三级缓存和寄存器中有哪些区别\n为什么在 js 中0.1 + 0.2 !== 0.3, 名词解释什么叫定点和浮点, js 存储数字和 C 语言有什么区别?\nnumber 类型表示整数的最大范围\n手撕 算法 : 传入一个这样的数据结构\n[\n  { id: 1, parentId: null },\n  { id: 2, parentId: 1 },\n  { id: 3, parentId: 1 },\n  { id: 4, parentId: 2 },\n  { id: 5, parentId: 2 },\n  { id: 6, parentId: 3 }\n]\n输出如下结果:"
				}
			]
		},
		{
			"ID": "20220324215127-fhn1sed",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-fhn1sed",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "{\n  id: 1,\n  children: [\n    {\n      id: 2,\n      children: [\n        { id: 4, children: [] },\n        { id: 5, children: [] }\n      ]\n    },\n    {\n      id: 3,\n      children: [\n        { id: 6, children: [] }\n      ]\n    }\n  ]\n}\n在给定的数据中确定根节点, 然后从根节点开始递归构建节点即可\n解法如下:"
				}
			]
		},
		{
			"ID": "20220324215127-o9ovmbf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-o9ovmbf",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "type NodeData = { id: number, parentId: null | number };"
				}
			]
		},
		{
			"ID": "20220324215127-u13j6hk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-u13j6hk",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "type TreeNode = { id: number, children: TreeNode[] };"
				}
			]
		},
		{
			"ID": "20220324215127-op01vu4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-op01vu4",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "const data: NodeData[] = [\n  { id: 1, parentId: null },\n  { id: 2, parentId: 1 },\n  { id: 3, parentId: 1 },\n  { id: 4, parentId: 2 },\n  { id: 5, parentId: 2 },\n  { id: 6, parentId: 3 }\n];"
				}
			]
		},
		{
			"ID": "20220324215127-wc3n6sd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-wc3n6sd",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "function createNode(id: number, data: NodeData[]): TreeNode {\n  // 去 data 中查找这个构建的 node 有哪些子节点\n  const childData = data.filter(({ parentId }) =\u003e parentId === id);\n  const node: TreeNode = {\n    id,\n    children: childData.reduce((acc, cur) =\u003e {\n      acc.push(createNode(cur.id, data));\n      return acc;\n    }, [])\n  };\n  return node;\n}"
				}
			]
		},
		{
			"ID": "20220324215127-hxn6ht1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-hxn6ht1",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "function getTree(data: NodeData[]): TreeNode {\n  // 先获取到哪个是根节点\n  const rootNodeData = data.find(({ parentId }) =\u003e parentId === null);\n  if (!rootNodeData) {\n    throw new Error('在给定的数据中找不到根节点');\n  }\n  // 从根节点开始构建节点, 递归构建成树\n  return createNode(rootNodeData.id, data);\n}"
				}
			]
		},
		{
			"ID": "20220324215127-1dmg3of",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-1dmg3of",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "console.log(JSON.stringify(getTree(data)));\n手撕 算法 : 传入一个正整数 n, 输出一个\"内卷\"形输出, 如\n输入 1, 输出:\n1\n输入 2, 输出:\n1, 2\n4, 3\n输入 3, 输出:\n1, 2, 3\n8, 9, 4\n7, 6, 5\n输入 4, 输出:\n1, 2, 3, 4\n12, 13, 14, 5\n11, 16, 15, 6\n10, 9, 8, 7\n输入 5, 输出:\n1, 2, 3, 4, 5\n16, 17, 18, 19, 6\n15, 24, 25, 20, 7\n14, 23, 22, 21, 8\n13, 12, 11, 10, 9\n思路:\n将每一次绕行一周的行为抽象出函数, 循环执行\n如 n = 5 时, 先构建最外层一圈 1,2,3,4,5 -\u003e 6,7,8,9 -\u003e 10,11,12,13 -\u003e 14,15,16\n再构建内部一层 17,18,19... 直到最中心一层 25"
				}
			]
		},
		{
			"ID": "20220324215127-m3r93b9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-m3r93b9",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解法:"
				}
			]
		},
		{
			"ID": "20220324215127-j6jyaem",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-j6jyaem",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "/**"
				}
			]
		},
		{
			"ID": "20220324215127-tdjrxbt",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220324215127-tdjrxbt",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"ID": "20220324215126-257tvwc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-257tvwc"
					},
					"Children": [
						{
							"ID": "20220324215127-70ivex3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-70ivex3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "生成顺时针添加数字的矩阵"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-h9ulf2u",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-h9ulf2u"
					},
					"Children": [
						{
							"ID": "20220324215127-xm7x7yc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-xm7x7yc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@param num 用户输入的数字"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-aj0bjmn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-aj0bjmn"
					},
					"Children": [
						{
							"ID": "20220324215127-x7sjqgu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-x7sjqgu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@returns result\n*/\nfunction getClockwiseMatrix(num: number): number[] | number[][] {\nif (num \u003c= 0) {\nthrow new Error('提供的 num 必须要是一个正数');\n}\nif (num === 1) {\nreturn [1];\n}\n// 构建空 result, 准备往里面添加值\nconst matrix = initMutiMatrix(num);\n// 开始顺时针绕行构建矩阵\nlet curNum = 1, count = num;\nfor (let i = 0; i \u003c Math.ceil(num / 2); i++) {\ncurNum = addNumberToMatrix(curNum, i, i, count, matrix);\ncount -= 2;\n}\nreturn matrix;\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220324215127-9b1wakf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-9b1wakf",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "/**"
				}
			]
		},
		{
			"ID": "20220324215127-dtyquro",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220324215127-dtyquro",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"ID": "20220324215126-mk6atuj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-mk6atuj"
					},
					"Children": [
						{
							"ID": "20220324215127-ipucqgp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-ipucqgp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "生成初始化 n 行 n 列矩阵"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-khrwago",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-khrwago"
					},
					"Children": [
						{
							"ID": "20220324215127-v59nyj6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-v59nyj6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@param num 用户输入的值"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-5qq55kr",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-5qq55kr"
					},
					"Children": [
						{
							"ID": "20220324215127-rbpjwwo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-rbpjwwo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@returns 如用户输入 3, 则返回[ [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ] ]\n*/\nfunction initMutiMatrix(num: number): number[][] {\n// 构建空 result, 准备往里面添加值\nconst matrix: number[][] = [];"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220324215127-4r2rx49",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-4r2rx49",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "  const addRow = (num: number): number[] =\u003e {\n    const row: number[] = [];\n    for (let i = 0; i \u003c num; i++) {\n      row.push(0);\n    }\n    return row;\n  }\n  for (let i = 0; i \u003c num; i++) {\n    matrix.push(addRow(num));\n  }\n  return matrix;\n};"
				}
			]
		},
		{
			"ID": "20220324215127-3xoylgg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-3xoylgg",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "/**"
				}
			]
		},
		{
			"ID": "20220324215127-1vrs8sj",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220324215127-1vrs8sj",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"ID": "20220324215126-nngrh0x",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-nngrh0x"
					},
					"Children": [
						{
							"ID": "20220324215127-v2c92d8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-v2c92d8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从 matrix[i][j] 位置开始, 顺时针绕行一周向矩阵内添加值"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-a19jks4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-a19jks4"
					},
					"Children": [
						{
							"ID": "20220324215127-j8b8654",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-j8b8654"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@param num 绕行一周起始值"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-ybp59hn",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-ybp59hn"
					},
					"Children": [
						{
							"ID": "20220324215127-5mud4z1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-5mud4z1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@param i 绕行起始位置的横坐标"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-b6xanax",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-b6xanax"
					},
					"Children": [
						{
							"ID": "20220324215127-510riiu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-510riiu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@param j 绕行起始位置的纵坐标"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-prop7xq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-prop7xq"
					},
					"Children": [
						{
							"ID": "20220324215127-eup2d1i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-eup2d1i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@param count 绕行一周遍历 4 次, 每一次遍历的数量"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-7uwjamk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-7uwjamk"
					},
					"Children": [
						{
							"ID": "20220324215127-b6pxddx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-b6pxddx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@param matrix 矩阵数据"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215126-at67kpk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-at67kpk"
					},
					"Children": [
						{
							"ID": "20220324215127-8vynjqf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-8vynjqf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@returns 绕行一周结束后, 下一次绕行的起始值, 作为下一次调用该函数的 num 值\n*/\nfunction addNumberToMatrix(num: number, i: number, j: number, count: number, matrix: number[][]): number {\n// 如果 count 为 1, 说明是执行到了最后, 向矩阵最中心位置添加一个数字即可\nif (count === 1) {\nmatrix[i][j] = num;\nreturn num + 1;\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220324215127-kgy87m2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-kgy87m2",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "  let _i = i, _j = j, _num = num;"
				}
			]
		},
		{
			"ID": "20220324215127-sly4qwj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-sly4qwj",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "  // 顺时针添加数字: 从左到右\n  for (let k = 0; k \u003c count; k++) {\n    matrix[_i][_j] = _num;\n    if (k + 1 \u003c count) {\n      _num++;\n      _j++;\n    }\n  }"
				}
			]
		},
		{
			"ID": "20220324215127-sim4cix",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-sim4cix",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "  // 顺时针添加数字: 从上到下\n  for (let k = 0; k \u003c count; k++) {\n    matrix[_i][_j] = _num;\n    if (k + 1 \u003c count) {\n      _num++;\n      _i++;\n    }\n  }"
				}
			]
		},
		{
			"ID": "20220324215127-xux0k9b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-xux0k9b",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "  // 顺时针添加数字: 从右到左\n  for (let k = 0; k \u003c count; k++) {\n    matrix[_i][_j] = _num;\n    if (k + 1 \u003c count) {\n      _num++;\n      _j--;\n    }\n  }"
				}
			]
		},
		{
			"ID": "20220324215127-47ooruh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-47ooruh",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "  // 顺时针添加数字: 从下到上(最后一步需特殊处理)\n  for (let k = 0; k \u003c count - 1; k++) {\n    matrix[_i][_j] = _num;\n    _num++;\n    _i--;\n  }"
				}
			]
		},
		{
			"ID": "20220324215127-p0adctu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-p0adctu",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "  return _num;\n}"
				}
			]
		},
		{
			"ID": "20220324215127-a27mgjx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-a27mgjx",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "/**"
				}
			]
		},
		{
			"ID": "20220324215127-jr6byr8",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220324215127-jr6byr8",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"ID": "20220324215126-23kho1y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220324215126-23kho1y"
					},
					"Children": [
						{
							"ID": "20220324215127-735qftp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215127-735qftp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "按要求打印目标矩阵\n*/\nfunction renderMatrix(matrix: number[][] | number[]) {\nif (matrix.length === 1) {\nconsole.log(JSON.stringify(matrix));\nreturn;\n}\nmatrix.forEach(row =\u003e {\nconsole.log(JSON.stringify(row));\n});\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220324215127-t0nbjzs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215127-t0nbjzs",
				"updated": "20220324215127"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "//test:\nconst result = getClockwiseMatrix(5);\nrenderMatrix(result);\n// --\u003e result:\n// [1,2,3,4,5]\n// [16,17,18,19,6]\n// [15,24,25,20,7]\n// [14,23,22,21,8]\n// [13,12,11,10,9]"
				}
			]
		},
		{
			"ID": "20220324215144-zds78ks",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220324215144-zds78ks",
				"updated": "20220324215144"
			}
		},
		{
			"ID": "20220324215146-eeuxhdj",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220324215146-eeuxhdj",
				"updated": "20220324215409"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字节电商： jinx\\"
				}
			]
		},
		{
			"ID": "20220324215417-tts6tqq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215417-tts6tqq",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抖音电商，base北京，三轮技术面+一轮HR面，8.27一面，9.1二面，9.7三面\n一面(62min)"
				}
			]
		},
		{
			"ID": "20220324215417-1u7ektg",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220324215417-1u7ektg",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"ID": "20220324215417-74onhma",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220324215417-74onhma"
					},
					"Children": [
						{
							"ID": "20220324215417-maj84x7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-maj84x7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "js数据类型"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-ukq6bws",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220324215417-ukq6bws"
					},
					"Children": [
						{
							"ID": "20220324215417-7p7r37m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-7p7r37m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：大数相加并进行千分位展示"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-ktcbm0i",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220324215417-ktcbm0i"
					},
					"Children": [
						{
							"ID": "20220324215417-aafuglv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-aafuglv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "js继承、作用域、变量提升等综合输出题并解释原因"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-0jhtoy8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220324215417-0jhtoy8"
					},
					"Children": [
						{
							"ID": "20220324215417-qxpdqca",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-qxpdqca"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：寄生组合式继承"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-3ecrnpu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20220324215417-3ecrnpu"
					},
					"Children": [
						{
							"ID": "20220324215417-k4b588r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-k4b588r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "http缓存"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-cxca86y",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20220324215417-cxca86y"
					},
					"Children": [
						{
							"ID": "20220324215417-exlzm9b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-exlzm9b"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "vue 双向绑定原理"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-anqf8q2",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20220324215417-anqf8q2"
					},
					"Children": [
						{
							"ID": "20220324215417-tlf8fol",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-tlf8fol"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "vue 父子组件通信，v-model原理"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-oeqn1wl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OC4=",
						"Num": 8
					},
					"Properties": {
						"id": "20220324215417-oeqn1wl"
					},
					"Children": [
						{
							"ID": "20220324215417-a2ujqts",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-a2ujqts"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：实现elementUI的select组件"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220324215417-hulbshp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215417-hulbshp",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实一面发挥的比较烂，好多地方都出错了，当时自己觉得挂定了，都已经打算让HR删我微信了，\n可能是手写写出来了，面试官综合考虑给了二面机会，非常感谢。"
				}
			]
		},
		{
			"ID": "20220324215417-ksr66jv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215417-ksr66jv",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二面(68min)"
				}
			]
		},
		{
			"ID": "20220324215417-unpu5ol",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220324215417-unpu5ol",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"ID": "20220324215417-sc9zo69",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220324215417-sc9zo69"
					},
					"Children": [
						{
							"ID": "20220324215417-tgocwqc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-tgocwqc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "介绍项目"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-flcamtc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220324215417-flcamtc"
					},
					"Children": [
						{
							"ID": "20220324215417-w0ml8hn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-w0ml8hn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "项目个人任务和难点"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-or12d75",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220324215417-or12d75"
					},
					"Children": [
						{
							"ID": "20220324215417-9xlc7gu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-9xlc7gu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：一个canvas画布，实现鼠标点击绘制、回退、撤销回退功能"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-shnjwez",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220324215417-shnjwez"
					},
					"Children": [
						{
							"ID": "20220324215417-0b600q6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-0b600q6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "websocket优、缺点"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-bxpsmbr",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20220324215417-bxpsmbr"
					},
					"Children": [
						{
							"ID": "20220324215417-evto1tb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-evto1tb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "场景题：双端数据交互，用户在移动端的操作响应到PC端(如扫二维码登录)"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-mih94yw",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20220324215417-mih94yw"
					},
					"Children": [
						{
							"ID": "20220324215417-1dunytm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-1dunytm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "场景题：多人在线编辑同一元素，确保编辑结果统一"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-drzdd3i",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20220324215417-drzdd3i"
					},
					"Children": [
						{
							"ID": "20220324215417-s89z5ga",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-s89z5ga"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "节流、防抖"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-dk21a4a",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OC4=",
						"Num": 8
					},
					"Properties": {
						"id": "20220324215417-dk21a4a"
					},
					"Children": [
						{
							"ID": "20220324215417-70hpd7n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-70hpd7n"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：防抖"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-43rnauq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OS4=",
						"Num": 9
					},
					"Properties": {
						"id": "20220324215417-43rnauq"
					},
					"Children": [
						{
							"ID": "20220324215417-0k391yj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-0k391yj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "场景题：多人聊天室(如直播间弹幕)，确保所有数据能按正确顺序查看"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-j38kdot",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MTAu",
						"Num": 10
					},
					"Properties": {
						"id": "20220324215417-j38kdot"
					},
					"Children": [
						{
							"ID": "20220324215417-0eqagzn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-0eqagzn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "css动画"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-gnx3ksb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MTEu",
						"Num": 11
					},
					"Properties": {
						"id": "20220324215417-gnx3ksb"
					},
					"Children": [
						{
							"ID": "20220324215417-6kyg0k8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-6kyg0k8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "vue响应式原理"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-7ztek8o",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MTIu",
						"Num": 12
					},
					"Properties": {
						"id": "20220324215417-7ztek8o"
					},
					"Children": [
						{
							"ID": "20220324215417-s54mp1k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-s54mp1k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：vue双向绑定(proxy版)"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-avgmohm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MTMu",
						"Num": 13
					},
					"Properties": {
						"id": "20220324215417-avgmohm"
					},
					"Children": [
						{
							"ID": "20220324215417-stp35fr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-stp35fr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：数组随机 排序"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220324215417-xkuyq3u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215417-xkuyq3u",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不得不说，字节的面试真的很有难度！\n反馈速度也很快，面试完问HR回复通过，一个小时后来邮件约三面时间。"
				}
			]
		},
		{
			"ID": "20220324215417-yr07kvv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215417-yr07kvv",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "三面(56min)"
				}
			]
		},
		{
			"ID": "20220324215417-e5vmuu3",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220324215417-e5vmuu3",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"ID": "20220324215417-279rt1x",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220324215417-279rt1x"
					},
					"Children": [
						{
							"ID": "20220324215417-ay1hjin",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-ay1hjin"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "js能表示的最大整数，小数在计算机内部的存储过程"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-qsv6d9k",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220324215417-qsv6d9k"
					},
					"Children": [
						{
							"ID": "20220324215417-rtcxicf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-rtcxicf"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：模板字符串替换"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-1jxfuco",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220324215417-1jxfuco"
					},
					"Children": [
						{
							"ID": "20220324215417-3qkw1co",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-3qkw1co"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "项目介绍，个人任务，难点，解决方案"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-vs5bohw",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220324215417-vs5bohw"
					},
					"Children": [
						{
							"ID": "20220324215417-g94uxe4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-g94uxe4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：根据虚拟DOM创建真实DOM并插入到页面中"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-pqmdupl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20220324215417-pqmdupl"
					},
					"Children": [
						{
							"ID": "20220324215417-gc06jul",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-gc06jul"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "for in、for of 区别"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-9vz2hc5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20220324215417-9vz2hc5"
					},
					"Children": [
						{
							"ID": "20220324215417-qfoervh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-qfoervh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：Promise.all"
								}
							]
						}
					]
				},
				{
					"ID": "20220324215417-mu0yb1z",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20220324215417-mu0yb1z"
					},
					"Children": [
						{
							"ID": "20220324215417-u4wu0zs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324215417-u4wu0zs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题：判断对称 二叉树"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220324215417-e9weaax",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215417-e9weaax",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第一题就错了，给面试官留下了基础不好的映像，对我的项目好像也不感兴趣，\n直接出了四道手写题，很快AK，问了技术栈是react+ts，已经感到一阵凉意，过了三天问HR果然凉了。"
				}
			]
		},
		{
			"ID": "20220324215417-b4w1lj8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215417-b4w1lj8",
				"updated": "20220324215417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从提前批到这次面试，已经是我第三次面字节了，中间被某个部门好像刷了一下KPI就没有做记录，自己真的很想进字节。\n提前批二面挂了，当时没有准备好，这次三面又挂了，说实话挺难过的，马上学校要求毕业中期答辩了，时间不多了。\n感觉到最后进不了大厂，会是我整个秋招留下的痛吧，只能说自己的水平还不够好，继续加油吧。"
				}
			]
		},
		{
			"ID": "20220324215501-8fhefm2",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220324215501-8fhefm2",
				"updated": "20220324215501"
			}
		},
		{
			"ID": "20220324215509-dl1vqxu",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220324215509-dl1vqxu",
				"updated": "20220324215526"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字节实习：authetic"
				}
			]
		},
		{
			"ID": "20220324215505-mb4rvjp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215505-mb4rvjp",
				"updated": "20220324215505"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本来想去腾讯实习的，上个月23号在官网投的结果到现在都没人理我......."
				}
			]
		},
		{
			"ID": "20220324215505-1uvxmv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324215505-1uvxmv0",
				"updated": "20220324215505"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一面 (2.28 60min)\n自我介绍\n项目做了哪些事情？\n项目过程遇到了哪些难点？\n项目中用虚拟列表做了什么？\naxios 项目有没有做出什么新的东西？\n事件循环\n虚拟DOM\nReact 代码如何变成真实 dom 的？JSX 怎么用 React.createElement 创建？\nHTTPS\nHTTP2.0/3.0\n前端安全，CSRF 如何防护？\n算法题：\n假设一共有 n 个人，给出一个数组指出哪些人可以把东西传给哪些人？最大传递次数为k。计算传给第 n-1 个人一共有几种方式，传不到返回0\nExample: n = 5, arr = [[0, 2], [0, 4], [2, 1], [1, 3], [4, 1], [2, 3], [3, 4]], k = 3\n二面 (3.02 55min)\n自我介绍\n项目介绍，挑战、难点、解决方案\n设计一个微前端框架需要注意哪些方面？隔离，子应用资源加载分别怎么做？\n服务器端渲染，解决了哪些问题\n自动化测试有了解吗？\nReact diff算法，为什么需要hooks？\n有了解过哪些新技术？跳坑了，我瞎说webpack5和pnpm结果都啥也不知道.......\nwebassembly和node这些有了解过吗？有没有实际开发经验？\n做题：一道闭包，一道promise，一道二叉树求路径和\n3号上午约了下午的HR面，面试完说是会给实习offer。我很迷惑为啥我只有两次技术面，别人都是三次，HR告诉我日常实习都是两次？真假？"
				}
			]
		},
		{
			"ID": "20220324215530-ollw8cs",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220324215530-ollw8cs",
				"updated": "20220324215530"
			}
		},
		{
			"ID": "20220324215532-rwkduwa",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220324215532-rwkduwa",
				"updated": "20220324220158"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小黑盒：蒋小舟"
				}
			]
		},
		{
			"ID": "20220324220140-sz8d93n",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220324220140-sz8d93n",
				"updated": "20220324220140"
			},
			"Children": [
				{
					"ID": "20220324220140-5vkgrxb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220324220140-5vkgrxb"
					},
					"Children": [
						{
							"ID": "20220324220140-3bxent0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324220140-3bxent0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自我介绍"
								}
							]
						}
					]
				},
				{
					"ID": "20220324220140-jnoosqb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220324220140-jnoosqb"
					},
					"Children": [
						{
							"ID": "20220324220140-v6opvlo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324220140-v6opvlo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题, 实现一个正方形，边长是父元素宽度的一半，父元素宽高不固定"
								}
							]
						}
					]
				},
				{
					"ID": "20220324220140-rycuxpm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220324220140-rycuxpm"
					},
					"Children": [
						{
							"ID": "20220324220140-opp8zp9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324220140-opp8zp9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题, 用三种方式实现 li 标签中的元素水平垂直居中"
								}
							]
						}
					]
				},
				{
					"ID": "20220324220140-czf8txa",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220324220140-czf8txa"
					},
					"Children": [
						{
							"ID": "20220324220140-8nez5y2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220324220140-8nez5y2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手写题，获取 url 中的参数\n(1) 指定参数名称，返回该参数的值 或者 空字符串\n(2) 不指定参数名称，返回全部的参数对象 或者 {}\n(3) 如果存在多个同名参数，则返回数组\n(4) 不支持URLSearchParams方法"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220324220140-htyzhfl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324220140-htyzhfl",
				"updated": "20220324220140"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "示例\n输入"
				}
			]
		},
		{
			"ID": "20220324220140-edvsxv1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324220140-edvsxv1",
				"updated": "20220324220140"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "http://www.nowcoder.com?key=1\u0026key=2\u0026key=3\u0026test=4#hehe key\n输出"
				}
			]
		},
		{
			"ID": "20220324220140-jd9e2av",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324220140-jd9e2av",
				"updated": "20220324220140"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[1, 2, 3]\n5. let, var, const 的区别\n6. for in 和 for of 的区别\n7. 手写题\n有两个对象, 例如"
				}
			]
		},
		{
			"ID": "20220324220140-jjhha24",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220324220140-jjhha24",
				"updated": "20220324220302"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var obj1 = {\n    a: 1,\n    b: {\n        c: 2,\n        d: 3\n    },\n    e: 4\n    h: {\n        i: 5\n    }\n}\nvar obj2 = {\n    a: 111,\n    b: {\n        c: 222,\n        f: 333\n    },\n    g: 444,\n    h: 666\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220324220140-svgfest",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220324220140-svgfest",
				"updated": "20220324220220"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var obj = {\n    a: 111,\n    b: {\n        c: 222,\n        d: 3,\n        f: 333\n    },\n    e: 4,\n    g: 444,\n    h: 666\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220324220211-l40le9f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220324220211-l40le9f",
				"updated": "20220324220211"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8. 原型与原型链\n9. 算法题, 链表内指定区间反转"
				}
			]
		}
	]
}