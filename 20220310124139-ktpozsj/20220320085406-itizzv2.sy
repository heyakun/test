{
	"ID": "20220320085406-itizzv2",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220320085406-itizzv2",
		"title": "simpread-实践这一次, 彻底搞懂浏览器缓存机制",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20220320085406-wn72vix",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220320085406-wn72vix"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20220320085406-cu4eurm",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220320085406-cu4eurm"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "本文由 "
						},
						{
							"Type": "NodeLink",
							"Children": [
								{
									"Type": "NodeOpenBracket",
									"Data": "["
								},
								{
									"Type": "NodeLinkText",
									"Data": "简悦 SimpRead"
								},
								{
									"Type": "NodeCloseBracket",
									"Data": "]"
								},
								{
									"Type": "NodeOpenParen",
									"Data": "("
								},
								{
									"Type": "NodeLinkDest",
									"Data": "http://ksria.com/simpread/"
								},
								{
									"Type": "NodeCloseParen",
									"Data": ")"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 转码， 原文地址 "
						},
						{
							"Type": "NodeLink",
							"Children": [
								{
									"Type": "NodeOpenBracket",
									"Data": "["
								},
								{
									"Type": "NodeLinkText",
									"Data": "juejin.cn"
								},
								{
									"Type": "NodeCloseBracket",
									"Data": "]"
								},
								{
									"Type": "NodeOpenParen",
									"Data": "("
								},
								{
									"Type": "NodeLinkDest",
									"Data": "https://juejin.cn/post/6844903764566999054"
								},
								{
									"Type": "NodeCloseParen",
									"Data": ")"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 1. DNS 缓存 // 虽说跟标题关系不大,了解一下也不错 2. CDN 缓存 // 虽说跟标题关系不大,了解一下也不错 3. 浏览器缓存 // 本文将重点介绍并实践 复制代码"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-eb4c0vf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-eb4c0vf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "DNS 缓存"
				}
			]
		},
		{
			"ID": "20220320085406-qeh01u4",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220320085406-qeh01u4"
			}
		},
		{
			"ID": "20220320085406-b3wz62t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-b3wz62t"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "什么是 DNS"
				}
			]
		},
		{
			"ID": "20220320085406-xyama0z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-xyama0z"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全称 Domain Name System , 即域名系统。"
				}
			]
		},
		{
			"ID": "20220320085406-77ssvqa",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220320085406-77ssvqa"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20220320085406-vk8n5rg",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220320085406-vk8n5rg"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "万维网上作为域名和 IP 地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的 IP 数串。DNS 协议运行在 UDP 协议之上，使用端口号 53。"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-3i71rsr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-3i71rsr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "DNS 解析"
				}
			]
		},
		{
			"ID": "20220320085406-ycu7o8e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-ycu7o8e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单的说, 通过域名, 最终得到该域名对应的 IP 地址的过程叫做域名解析（或主机名解析）。"
				}
			]
		},
		{
			"ID": "20220320085406-vybik5n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-vybik5n"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "www.dnscache.com (域名)  - DNS解析 -\u003e 11.222.33.444 (IP地址)\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-m6w0acc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-m6w0acc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "DNS 缓存"
				}
			]
		},
		{
			"ID": "20220320085406-alby98c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-alby98c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有 dns 的地方, 就有缓存。浏览器、操作系统、Local DNS、根域名服务器，它们都会对 DNS 结果做一定程度的缓存。"
				}
			]
		},
		{
			"ID": "20220320085406-fo4e1l7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-fo4e1l7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "DNS 查询过程如下:"
				}
			]
		},
		{
			"ID": "20220320085406-ohawz26",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220320085406-ohawz26"
			},
			"Children": [
				{
					"ID": "20220320085406-tjalfar",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220320085406-tjalfar"
					},
					"Children": [
						{
							"ID": "20220320085406-o9zr8zs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-o9zr8zs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先搜索浏览器自身的 DNS 缓存, 如果存在，则域名解析到此完成。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-q4lmp2m",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220320085406-q4lmp2m"
					},
					"Children": [
						{
							"ID": "20220320085406-s9784l4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-s9784l4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果浏览器自身的缓存里面没有找到对应的条目，那么会尝试读取操作系统的 hosts 文件看是否存在对应的映射关系, 如果存在，则域名解析到此完成。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-d7e8n94",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220320085406-d7e8n94"
					},
					"Children": [
						{
							"ID": "20220320085406-rhakfl7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-rhakfl7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果本地 hosts 文件不存在映射关系，则查找本地 DNS 服务器 (ISP 服务器, 或者自己手动设置的 DNS 服务器), 如果存在, 域名到此解析完成。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-mdztvzi",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220320085406-mdztvzi"
					},
					"Children": [
						{
							"ID": "20220320085406-0qychbu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-0qychbu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果本地 DNS 服务器还没找到的话, 它就会向根服务器发出请求, 进行递归查询。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-wra9udo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-wra9udo"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "戳此处详细了解 DNS 解析过程"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fcat_foursi%2Farticle%2Fdetails%2F71194397"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://blog.csdn.net/cat_foursi/article/details/71194397"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-kopqfv9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-kopqfv9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CDN 缓存"
				}
			]
		},
		{
			"ID": "20220320085406-h2q23oh",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220320085406-h2q23oh"
			}
		},
		{
			"ID": "20220320085406-kp9x5wc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-kp9x5wc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "什么是 CDN"
				}
			]
		},
		{
			"ID": "20220320085406-jqmiyyz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-jqmiyyz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全称 Content Delivery Network, 即内容分发网络。"
				}
			]
		},
		{
			"ID": "20220320085406-5gt0x4z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-5gt0x4z"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "摘录一个形象的比喻, 来理解 CDN 是什么。"
				}
			]
		},
		{
			"ID": "20220320085406-61xdfnr",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220320085406-61xdfnr"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20220320085406-7ov1nqu",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220320085406-7ov1nqu"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "10 年前，还没有火车票代售点一说，12306.cn 更是无从说起。那时候火车票还只能在火车站的售票大厅购买，而我所在的小县城并不通火车，火车票都要去市里的火车站购买，而从我家到县城再到市里，来回就是 4 个小时车程，简直就是浪费生命。后来就好了，小县城里出现了火车票代售点，甚至乡镇上也有了代售点，可以直接在代售点购买火车票，方便了不少，全市人民再也不用在一个点苦逼的排队买票了。"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-qufl4rr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-qufl4rr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单的理解 CDN 就是这些代售点 (缓存服务器) 的承包商, 他为买票者提供了便利, 帮助他们在最近的地方 (最近的 CDN 节点) 用最短的时间 (最短的请求时间) 买到票(拿到资源), 这样去火车站售票大厅排队的人也就少了。也就减轻了售票大厅的压力(起到分流作用, 减轻服务器负载压力)。"
				}
			]
		},
		{
			"ID": "20220320085406-rgqazn0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-rgqazn0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用户在浏览网站的时候，CDN 会选择一个离用户最近的 CDN 边缘节点来响应用户的请求，这样海南移动用户的请求就不会千里迢迢跑到北京电信机房的服务器（假设源站部署在北京电信机房）上了。"
				}
			]
		},
		{
			"ID": "20220320085406-74192w9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-74192w9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "CDN 缓存"
				}
			]
		},
		{
			"ID": "20220320085406-0ttj5re",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-0ttj5re"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于 CDN 缓存, 在浏览器本地缓存失效后, 浏览器会向 CDN 边缘节点发起请求。类似浏览器缓存, CDN 边缘节点也存在着一套缓存机制。CDN 边缘节点缓存策略因服务商不同而不同，但一般都会遵循 http 标准协议，通过 http 响应头中的"
				}
			]
		},
		{
			"ID": "20220320085406-xma4myp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-xma4myp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Cache-control: max-age   //后面会提到\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-xqpdcsx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-xqpdcsx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "的字段来设置 CDN 边缘节点数据缓存时间。"
				}
			]
		},
		{
			"ID": "20220320085406-vr7tdd9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-vr7tdd9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当浏览器向 CDN 节点请求数据时，CDN 节点会判断缓存数据是否过期，若缓存数据并没有过期，则直接将缓存数据返回给客户端；否则，CDN 节点就会向服务器发出回源请求，从服务器拉取最新数据，更新本地缓存，并将最新数据返回给客户端。 CDN 服务商一般会提供基于文件后缀、目录多个维度来指定 CDN 缓存时间，为用户提供更精细化的缓存管理。"
				}
			]
		},
		{
			"ID": "20220320085406-caud5wg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-caud5wg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "CDN 优势"
				}
			]
		},
		{
			"ID": "20220320085406-1g81qry",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220320085406-1g81qry"
			},
			"Children": [
				{
					"ID": "20220320085406-55crk3s",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220320085406-55crk3s"
					},
					"Children": [
						{
							"ID": "20220320085406-hkxl03j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-hkxl03j"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "CDN 节点解决了跨运营商和跨地域访问的问题，访问延时大大降低。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-9jep85t",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220320085406-9jep85t"
					},
					"Children": [
						{
							"ID": "20220320085406-crn1lb7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-crn1lb7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "大部分请求在 CDN 边缘节点完成，CDN 起到了分流作用，减轻了源服务器的负载。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-jswn7d0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-jswn7d0"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "戳此处详细了解 CDN 工作过程"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=http%3A%2F%2Fbook.51cto.com%2Fart%2F201205%2F338756.htm"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "http://book.51cto.com/art/201205/338756.htm"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-9pz1hnz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-9pz1hnz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器缓存 (http 缓存)"
				}
			]
		},
		{
			"ID": "20220320085406-8vutzgi",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220320085406-8vutzgi"
			}
		},
		{
			"ID": "20220320085406-xtj7dh8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-xtj7dh8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对着这张图先发呆 30 秒~"
				}
			]
		},
		{
			"ID": "20220320085406-d5fw80c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-d5fw80c"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e2735297a596~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-suup3le",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-suup3le"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "什么是浏览器缓存"
				}
			]
		},
		{
			"ID": "20220320085406-guzyaz6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-guzyaz6"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e2735267bebb~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-kn5vny8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-kn5vny8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单来说, 浏览器缓存其实就是浏览器保存通过 HTTP 获取的所有资源, 是浏览器将网络资源存储在本地的一种行为。"
				}
			]
		},
		{
			"ID": "20220320085406-p50udox",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-p50udox"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "缓存的资源去哪里了?"
				}
			]
		},
		{
			"ID": "20220320085406-6twcs85",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-6twcs85"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "你可能会有疑问, 浏览器存储了资源, 那它把资源存储在哪里呢？"
				}
			]
		},
		{
			"ID": "20220320085406-a29lxzk",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-a29lxzk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "memory cache"
				}
			]
		},
		{
			"ID": "20220320085406-a4zhlpq",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220320085406-a4zhlpq"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20220320085406-31ogt92",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220320085406-31ogt92"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "MemoryCache 顾名思义，就是将资源缓存到内存中，等待下次访问时不需要重新下载资源，而直接从内存中获取。Webkit 早已支持 memoryCache。 目前 Webkit 资源分成两类，一类是主资源，比如 HTML 页面，或者下载项，一类是派生资源，比如 HTML 页面中内嵌的图片或者脚本链接，分别对应代码中两个类：MainResourceLoader 和 SubresourceLoader。虽然 Webkit 支持 memoryCache，但是也只是针对派生资源，它对应的类为 CachedResource，用于保存原始数据（比如 CSS，JS 等），以及解码过的图片数据。"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-smutdiu",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-smutdiu"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "disk cache"
				}
			]
		},
		{
			"ID": "20220320085406-xvjgr3u",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220320085406-xvjgr3u"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20220320085406-ct15jhy",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220320085406-ct15jhy"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "DiskCache 顾名思义，就是将资源缓存到磁盘中，等待下次访问时不需要重新下载资源，而直接从磁盘中获取，它的直接操作对象为 CurlCacheManager。"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-cqen81a",
			"Type": "NodeHTMLBlock",
			"Data": "\u003ctable\u003e\u003cthead\u003e\u003ctr\u003e\u003cth\u003e-\u003c/th\u003e\u003cth\u003ememory cache\u003c/th\u003e\u003cth\u003edisk cache\u003c/th\u003e\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd\u003e相同点\u003c/td\u003e\u003ctd\u003e只能存储一些派生类资源文件\u003c/td\u003e\u003ctd\u003e只能存储一些派生类资源文件\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e不同点\u003c/td\u003e\u003ctd\u003e退出进程时数据会被清除\u003c/td\u003e\u003ctd\u003e退出进程时数据不会被清除\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e存储资源\u003c/td\u003e\u003ctd\u003e一般脚本、字体、图片会存在内存当中\u003c/td\u003e\u003ctd\u003e一般非脚本会存在内存当中，如 css 等\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e",
			"HtmlBlockType": 6,
			"Properties": {
				"id": "20220320085406-cqen81a"
			}
		},
		{
			"ID": "20220320085406-l5ky3td",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-l5ky3td"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "因为 CSS 文件加载一次就可渲染出来, 我们不会频繁读取它, 所以它不适合缓存到内存中, 但是 js 之类的脚本却随时可能会执行, 如果脚本在磁盘当中, 我们在执行脚本的时候需要从磁盘取到内存中来, 这样 IO 开销就很大了, 有可能导致浏览器失去响应。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-sozteb9",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-sozteb9"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "三级缓存原理 (访问缓存优先级)"
				}
			]
		},
		{
			"ID": "20220320085406-ml1rc6d",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220320085406-ml1rc6d"
			},
			"Children": [
				{
					"ID": "20220320085406-i3mig7e",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220320085406-i3mig7e"
					},
					"Children": [
						{
							"ID": "20220320085406-e4y4mtz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-e4y4mtz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "先在内存中查找, 如果有, 直接加载。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-2b5gfkd",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220320085406-2b5gfkd"
					},
					"Children": [
						{
							"ID": "20220320085406-fqo76du",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-fqo76du"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果内存中不存在, 则在硬盘中查找, 如果有直接加载。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-2vwsqu0",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220320085406-2vwsqu0"
					},
					"Children": [
						{
							"ID": "20220320085406-n87bzz3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-n87bzz3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果硬盘中也没有, 那么就进行网络请求。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-ixsip25",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220320085406-ixsip25"
					},
					"Children": [
						{
							"ID": "20220320085406-c1k14o8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-c1k14o8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "请求获取的资源缓存到硬盘和内存。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-u5x97o0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-u5x97o0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "浏览器缓存的分类"
				}
			]
		},
		{
			"ID": "20220320085406-emjcwu6",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220320085406-emjcwu6"
			},
			"Children": [
				{
					"ID": "20220320085406-heoj9mf",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220320085406-heoj9mf"
					},
					"Children": [
						{
							"ID": "20220320085406-x5ud6hx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-x5ud6hx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "强缓存"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-k5tuc3i",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220320085406-k5tuc3i"
					},
					"Children": [
						{
							"ID": "20220320085406-9t8xlet",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-9t8xlet"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "协商缓存"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-f0lmdr1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-f0lmdr1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器再向服务器请求资源时, 首先判断是否命中强缓存, 再判断是否命中协商缓存!"
				}
			]
		},
		{
			"ID": "20220320085406-78cbh3a",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-78cbh3a"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "浏览器缓存的优点"
				}
			]
		},
		{
			"ID": "20220320085406-ihw2fgn",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220320085406-ihw2fgn"
			},
			"Children": [
				{
					"ID": "20220320085406-qkkhytv",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220320085406-qkkhytv"
					},
					"Children": [
						{
							"ID": "20220320085406-k87izki",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-k87izki"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "减少了冗余的数据传输"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-w8iv6ti",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220320085406-w8iv6ti"
					},
					"Children": [
						{
							"ID": "20220320085406-nmc9bt1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-nmc9bt1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "减少了服务器的负担，大大提升了网站的性能"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-tlqosbu",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220320085406-tlqosbu"
					},
					"Children": [
						{
							"ID": "20220320085406-08z7u87",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-08z7u87"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "加快了客户端加载网页的速度"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-fn55xm2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-fn55xm2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "强缓存"
				}
			]
		},
		{
			"ID": "20220320085406-4zhra4i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-4zhra4i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器在加载资源时，会先根据本地缓存资源的 header 中的信息判断是否命中强缓存，如果命中则直接使用缓存中的资源不会再向服务器发送请求。"
				}
			]
		},
		{
			"ID": "20220320085406-cmtr9jj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-cmtr9jj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里的 header 中的信息指的是 expires 和 cahe-control."
				}
			]
		},
		{
			"ID": "20220320085406-kju6qc7",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-kju6qc7"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "Expires"
				}
			]
		},
		{
			"ID": "20220320085406-vg29gic",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-vg29gic"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "该字段是 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "http1.0"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 时的规范，它的值为一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "绝对时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的 GMT 格式的时间字符串，比如 Expires:Mon,18 Oct 2066 23:59:59 GMT。这个时间代表着这个资源的失效时间，在此时间之前，即命中缓存。这种方式有一个明显的缺点，由于失效时间是一个绝对时间，所以当服务器与客户端时间偏差较大时，就会导致缓存混乱。"
				}
			]
		},
		{
			"ID": "20220320085406-y1bgt3c",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-y1bgt3c"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "Cache-Control"
				}
			]
		},
		{
			"ID": "20220320085406-89hv63q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-89hv63q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Cache-Control 是 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "http1.1"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 时出现的 header 信息，主要是利用该字段的 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "max-age"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 值来进行判断，它是一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "相对时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，例如 Cache-Control:max-age=3600，代表着资源的有效期是 3600 秒。cache-control 除了该字段外，还有下面几个比较常用的设置值："
				}
			]
		},
		{
			"ID": "20220320085406-jjiskix",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-jjiskix"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "no-cache"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：需要进行协商缓存，发送请求到服务器确认是否使用缓存。"
				}
			]
		},
		{
			"ID": "20220320085406-6uv71gz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-6uv71gz"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "no-store"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：禁止使用缓存，每一次都要重新请求数据。"
				}
			]
		},
		{
			"ID": "20220320085406-uzxdsxj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-uzxdsxj"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "public"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：可以被所有的用户缓存，包括终端用户和 CDN 等中间代理服务器。"
				}
			]
		},
		{
			"ID": "20220320085406-pdu4tqj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-pdu4tqj"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "private"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：只能被终端用户的浏览器缓存，不允许 CDN 等中继缓存服务器对其缓存。"
				}
			]
		},
		{
			"ID": "20220320085406-hasmpef",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-hasmpef"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Cache-Control 与 Expires 可以在服务端配置同时启用，同时启用的时候 Cache-Control 优先级高。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-95keuhs",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-95keuhs"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "协商缓存"
				}
			]
		},
		{
			"ID": "20220320085406-ohp98v6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-ohp98v6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当强缓存没有命中的时候，浏览器会发送一个请求到服务器，服务器根据 header 中的部分信息来判断是否命中缓存。如果命中，则返回 304 ，告诉浏览器资源未更新，可使用本地的缓存。"
				}
			]
		},
		{
			"ID": "20220320085406-q5jzubz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-q5jzubz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里的 header 中的信息指的是 Last-Modify/If-Modify-Since 和 ETag/If-None-Match."
				}
			]
		},
		{
			"ID": "20220320085406-7uvu1ik",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-7uvu1ik"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "Last-Modify/If-Modify-Since"
				}
			]
		},
		{
			"ID": "20220320085406-5pkyeu7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-5pkyeu7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器第一次请求一个资源的时候，服务器返回的 header 中会加上 Last-Modify，Last-modify 是一个时间标识该资源的最后修改时间。"
				}
			]
		},
		{
			"ID": "20220320085406-dkvie5n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-dkvie5n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当浏览器再次请求该资源时，request 的请求头中会包含 If-Modify-Since，该值为缓存之前返回的 Last-Modify。服务器收到 If-Modify-Since 后，根据资源的最后修改时间判断是否命中缓存。"
				}
			]
		},
		{
			"ID": "20220320085406-fd2uok3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-fd2uok3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果命中缓存，则返回 304，并且不会返回资源内容，并且不会返回 Last-Modify。"
				}
			]
		},
		{
			"ID": "20220320085406-zlw8bqz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-zlw8bqz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "缺点:"
				}
			]
		},
		{
			"ID": "20220320085406-t5hvpec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-t5hvpec"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "短时间内资源发生了改变，Last-Modified 并不会发生变化。"
				}
			]
		},
		{
			"ID": "20220320085406-apg3pn1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-apg3pn1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "周期性变化。如果这个资源在一个周期内修改回原来的样子了，我们认为是可以使用缓存的，但是 Last-Modified 可不这样认为, 因此便有了 ETag。"
				}
			]
		},
		{
			"ID": "20220320085406-zzvvq2m",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-zzvvq2m"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "ETag/If-None-Match"
				}
			]
		},
		{
			"ID": "20220320085406-6ggbcgr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-6ggbcgr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与 Last-Modify/If-Modify-Since 不同的是，Etag/If-None-Match 返回的是一个校验码。ETag 可以保证每一个资源是唯一的，资源变化都会导致 ETag 变化。服务器根据浏览器上送的 If-None-Match 值来判断是否命中缓存。"
				}
			]
		},
		{
			"ID": "20220320085406-mzgqw71",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-mzgqw71"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与 Last-Modified 不一样的是，当服务器返回 304 Not Modified 的响应时，由于 ETag 重新生成过，response header 中还会把这个 ETag 返回，即使这个 ETag 跟之前的没有变化。"
				}
			]
		},
		{
			"ID": "20220320085406-gspgzmb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-gspgzmb"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Last-Modified 与 ETag 是可以一起使用的，服务器会优先验证 ETag，一致的情况下，才会继续比对 Last-Modified，最后才决定是否返回 304。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-ih5q8u5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-ih5q8u5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220320085406-pc79hki",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-pc79hki"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当浏览器再次访问一个已经访问过的资源时，它会这样做："
				}
			]
		},
		{
			"ID": "20220320085406-6lbs13g",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220320085406-6lbs13g"
			},
			"Children": [
				{
					"ID": "20220320085406-70rdu9j",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220320085406-70rdu9j"
					},
					"Children": [
						{
							"ID": "20220320085406-v82233f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-v82233f"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "看看是否命中强缓存，如果命中，就直接使用缓存了。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-zfu9nyp",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220320085406-zfu9nyp"
					},
					"Children": [
						{
							"ID": "20220320085406-jjxhvtl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-jjxhvtl"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果没有命中强缓存，就发请求到服务器检查是否命中协商缓存。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-pjyr9s0",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220320085406-pjyr9s0"
					},
					"Children": [
						{
							"ID": "20220320085406-v4op1f4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-v4op1f4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果命中协商缓存，服务器会返回 304 告诉浏览器使用本地缓存。"
								}
							]
						}
					]
				},
				{
					"ID": "20220320085406-stt5j8p",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220320085406-stt5j8p"
					},
					"Children": [
						{
							"ID": "20220320085406-9kt9j4a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220320085406-9kt9j4a"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否则，返回最新的资源。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-32sodty",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-32sodty"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实践加深理解"
				}
			]
		},
		{
			"ID": "20220320085406-7owebt5",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220320085406-7owebt5"
			}
		},
		{
			"ID": "20220320085406-ye2nunv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-ye2nunv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "talk is cheap , show me the code 。让我们通过实践得真知~"
				}
			]
		},
		{
			"ID": "20220320085406-100dmux",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-100dmux"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "在实践时, 注意浏览器控制台 Network 的"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-2a7vd2h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-2a7vd2h"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeImage",
							"Children": [
								{
									"Type": "NodeBang",
									"Data": "!"
								},
								{
									"Type": "NodeOpenBracket",
									"Data": "["
								},
								{
									"Type": "NodeCloseBracket",
									"Data": "]"
								},
								{
									"Type": "NodeOpenParen",
									"Data": "("
								},
								{
									"Type": "NodeLinkDest",
									"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e27352852e4e~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
								},
								{
									"Type": "NodeCloseParen",
									"Data": ")"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "****按钮不要打钩。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-cw4c03u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-cw4c03u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以下我们只对强缓存的 Cache-Control 和协商缓存的 ETag 进行实践, 其他小伙伴们可以自己实践~"
				}
			]
		},
		{
			"ID": "20220320085406-ye9z2zu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-ye9z2zu"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "package.json"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-r3ml8hd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-r3ml8hd"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "{\n \"name\": \"webcache\",\n \"version\": \"1.0.0\",\n \"description\": \"\",\n \"main\": \"index.js\",\n \"scripts\": {\n   \"cache\": \"nodemon ./index.js\"\n },\n \"author\": \"webfansplz\",\n \"license\": \"MIT\",\n \"devDependencies\": {\n   \"@babel/core\": \"^7.2.2\",\n   \"@babel/preset-env\": \"^7.2.3\",\n   \"@babel/register\": \"^7.0.0\",\n   \"koa\": \"^2.6.2\",\n   \"koa-static\": \"^5.0.0\"\n },\n \"dependencies\": {\n   \"nodemon\": \"^1.18.9\"\n }\n}\n\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-xu679gk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-xu679gk"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": ".babelrc"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-5u438at",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-5u438at"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "{\n \"presets\": [\n   [\n     \"@babel/preset-env\",\n     {\n       \"targets\": {\n         \"node\": \"current\"\n       }\n     }\n   ]\n ]\n}\n\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-cgs3mg7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-cgs3mg7"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "index.js"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-q14i8tv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-q14i8tv"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "require('@babel/register');\nrequire('./webcache.js');\n\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-sjssar2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-sjssar2"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "webcache.js"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-jduhglt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-jduhglt"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import Koa from 'koa';\nimport path from 'path';\n//静态资源中间件\nimport resource from 'koa-static';\nconst app = new Koa();\nconst host = 'localhost';\nconst port = 4396;\napp.use(resource(path.join(__dirname, './static')));\n\napp.listen(port, () =\u003e {\n  console.log(`server is listen in ${host}:${port}`);\n});\n\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-myxp52x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-myxp52x"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "index.html"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-rz1hsgk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-rz1hsgk"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n    \u003cmeta  /\u003e\n    \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /\u003e\n    \u003ctitle\u003e前端缓存\u003c/title\u003e\n    \u003cstyle\u003e\n      .web-cache img {\n        display: block;\n        width: 100%;\n      }\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003cdiv class=\"web-cache\"\u003e\u003cimg src=\"./web.png\" /\u003e\u003c/div\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-qxqq0xq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-qxqq0xq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们用 koa 先起个 web 服务器, 然后用 koa-static 这个中间件做静态资源配置, 并在 static 文件夹下放了 index.html 和 web.png。"
				}
			]
		},
		{
			"ID": "20220320085406-v293d26",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-v293d26"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Ok, 接下来我们来启动服务。"
				}
			]
		},
		{
			"ID": "20220320085406-cwa830q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-cwa830q"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "npm run cache\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-1o0a64o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-1o0a64o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "server is listen in localhost:4396。"
				}
			]
		},
		{
			"ID": "20220320085406-tzw20qe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-tzw20qe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来我们打开浏览器输入地址:"
				}
			]
		},
		{
			"ID": "20220320085406-d2in7h6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-d2in7h6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "localhost:4396\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-5ppk2xr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-5ppk2xr"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e273525407c1~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-nie5t8i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-nie5t8i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完美~(哈哈, 猪仔别喷我, 纯属娱乐效果)"
				}
			]
		},
		{
			"ID": "20220320085406-kfg06jo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-kfg06jo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Ok!!! 接下来我们来实践下"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "强缓存"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。~"
				}
			]
		},
		{
			"ID": "20220320085406-jgqzvdz",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-jgqzvdz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "Cache-Control"
				}
			]
		},
		{
			"ID": "20220320085406-yuhllpq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-yuhllpq"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "webcache.js"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-lb9roic",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-lb9roic"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import Koa from 'koa';\nimport path from 'path';\n//静态资源中间件\nimport resource from 'koa-static';\nconst app = new Koa();\nconst host = 'localhost';\nconst port = 4396;\n\napp.use(async (ctx, next) =\u003e {\n // 设置响应头Cache-Control 设置资源有效期为300秒\n  ctx.set({\n    'Cache-Control': 'max-age=300'  \n  });\n  await next();\n});\napp.use(resource(path.join(__dirname, './static')));\n\napp.listen(port, () =\u003e {\n  console.log(`server is listen in ${host}:${port}`);\n});\n\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-6jzauzl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-6jzauzl"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e273542857dd~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-tyfq7gj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-tyfq7gj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们刷新页面可以看到响应头的 Cache-Control 变成了 max-age=300。"
				}
			]
		},
		{
			"ID": "20220320085406-makwn8v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-makwn8v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们顺便来验证下"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "三级缓存原理"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-6zgcww3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-6zgcww3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们刚进行了网络请求, 浏览器把 web.png 存进了磁盘和内存中。"
				}
			]
		},
		{
			"ID": "20220320085406-x4p5hdi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-x4p5hdi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "根据三级缓存原理, 我们会先在内存中找资源，我们来刷新页面。"
				}
			]
		},
		{
			"ID": "20220320085406-awqyi7j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-awqyi7j"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e2734fef977d~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-wstl2lz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-wstl2lz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在红线部分看到了, from memory cache。nice~"
				}
			]
		},
		{
			"ID": "20220320085406-24bp8lv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-24bp8lv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ok, 接下来, 我们关掉该页面，再重新打开。因为内存是存在进程中的, 所以关闭该页面, 内存中的资源也被释放掉了, 磁盘中的资源是永久性的, 所以还存在。"
				}
			]
		},
		{
			"ID": "20220320085406-nxv9v4x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-nxv9v4x"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "根据三级缓存原理, 如果在内存中没找到资源, 便会去磁盘中寻找!"
				}
			]
		},
		{
			"ID": "20220320085406-68yoldj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-68yoldj"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e2739ee78a91~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-y3yryw1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-y3yryw1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "from disk cache !!! ok，以上也就验证了三级缓存原理, 相信你对缓存资源的存储也有了更深的理解了。"
				}
			]
		},
		{
			"ID": "20220320085406-v0b0hy8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-v0b0hy8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们刚对资源设置的有效期是 300 秒, 我们接下来来验证缓存是否失效。"
				}
			]
		},
		{
			"ID": "20220320085406-cipe0zm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-cipe0zm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "300 秒后。。。"
				}
			]
		},
		{
			"ID": "20220320085406-sce6e19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-sce6e19"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e273a98a26a7~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-z263gc4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-z263gc4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们通过返回值可以看到, 缓存失效了。"
				}
			]
		},
		{
			"ID": "20220320085406-ch2abnt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-ch2abnt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过以上实践, 你是否对强缓存有了更深入的理解了呢?"
				}
			]
		},
		{
			"ID": "20220320085406-fw1qqnm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-fw1qqnm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Ok!!! 接下来我们来实践下"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "协商缓存"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。~"
				}
			]
		},
		{
			"ID": "20220320085406-nwbken6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-nwbken6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于 Cache-Control 的默认值就是 no-cache(需要进行协商缓存，发送请求到服务器确认是否使用缓存。), 所以我们这里不用对 Cache-Control 进行设置!"
				}
			]
		},
		{
			"ID": "20220320085406-r7z8vhc",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220320085406-r7z8vhc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "ETag"
				}
			]
		},
		{
			"ID": "20220320085406-byictla",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-byictla"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//ETag support for Koa responses using etag.\nnpm install koa-etag -D\n// etag works together with conditional-get\nnpm install koa-conditional-get -D\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-gnnlf78",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-gnnlf78"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们这里直接使用现成的插件帮我们计算文件的 ETag 值, 站在巨人的肩膀上！"
				}
			]
		},
		{
			"ID": "20220320085406-fxgwnov",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-fxgwnov"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "webcache.js"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-s99o139",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220320085406-s99o139"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import Koa from 'koa';\nimport path from 'path';\n//静态资源中间件\nimport resource from 'koa-static';\nimport conditional from 'koa-conditional-get';\nimport etag from 'koa-etag';\nconst app = new Koa();\nconst host = 'localhost';\nconst port = 4396;\n\n// etag works together with conditional-get\napp.use(conditional());\napp.use(etag());\napp.use(resource(path.join(__dirname, './static')));\n\napp.listen(port, () =\u003e {\n console.log(`server is listen in ${host}:${port}`);\n});\n\n复制代码\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220320085406-68hjzkv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-68hjzkv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ok。第一次请求."
				}
			]
		},
		{
			"ID": "20220320085406-mdbg8cs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-mdbg8cs"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e273b38476a6~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-rvy3jnq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-rvy3jnq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们发现返回值里面已经有了 Etag 值。"
				}
			]
		},
		{
			"ID": "20220320085406-2u4u1ap",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-2u4u1ap"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来再请求的时候, 浏览器将会带上 If-None-Match 请求头, 并赋值为上一次返回头的 Etag 值, 然后与 这次返回值的 Etag 值进行对比。如果一致则命中协商缓存。返回 304 Not Modified。接下来我们来验证一下~"
				}
			]
		},
		{
			"ID": "20220320085406-xfql9z3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-xfql9z3"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e2741887208e~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-f0od3cg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-f0od3cg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ok, 如图所示, 完美验证了上面的说法。"
				}
			]
		},
		{
			"ID": "20220320085406-wsrqglw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-wsrqglw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来我们修改 web.png , 来验证是否资源改变时 协商缓存策略也就失效呢？"
				}
			]
		},
		{
			"ID": "20220320085406-a4nyptv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-a4nyptv"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/1/21/1686e274305b25b0~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-v6wb2pe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-v6wb2pe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如图所示. 协商缓存的实践也验证了原理。"
				}
			]
		},
		{
			"ID": "20220320085406-k3vhnqv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-k3vhnqv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "大功告成"
				}
			]
		},
		{
			"ID": "20220320085406-d8095ub",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-d8095ub"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "写文章真的是件挺累的事, 如果觉得有帮助到你, 请给 star/follow 支持下作者~"
				}
			]
		},
		{
			"ID": "20220320085406-8fmciso",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-8fmciso"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "源码地址"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fwebfansplz%2Farticle%2Ftree%2Fmaster%2FwebCache"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://github.com/webfansplz/article/tree/master/webCache"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220320085406-8jfogzs",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220320085406-8jfogzs"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "参考文献"
				}
			]
		},
		{
			"ID": "20220320085406-4bpg50g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220320085406-4bpg50g"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "前端性能优化之缓存利用"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fwww.haorooms.com%2Fpost%2Fcache_huancunliyong"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://www.haorooms.com/post/cache_huancunliyong"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		}
	]
}