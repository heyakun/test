{
	"ID": "20220316082024-5r6vecm",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220316082024-5r6vecm",
		"title": "simpread-(1.6w 字) 浏览器灵魂之问，请问你能接得住几个？",
		"type": "doc"
	},
	"Children": [
		{
			"ID": "20220316082024-bpl00r0",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220316082024-bpl00r0"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20220316082024-rm71d88",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220316082024-rm71d88"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "本文由 "
						},
						{
							"Type": "NodeLink",
							"Children": [
								{
									"Type": "NodeOpenBracket",
									"Data": "["
								},
								{
									"Type": "NodeLinkText",
									"Data": "简悦 SimpRead"
								},
								{
									"Type": "NodeCloseBracket",
									"Data": "]"
								},
								{
									"Type": "NodeOpenParen",
									"Data": "("
								},
								{
									"Type": "NodeLinkDest",
									"Data": "http://ksria.com/simpread/"
								},
								{
									"Type": "NodeCloseParen",
									"Data": ")"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 转码， 原文地址 "
						},
						{
							"Type": "NodeLink",
							"Children": [
								{
									"Type": "NodeOpenBracket",
									"Data": "["
								},
								{
									"Type": "NodeLinkText",
									"Data": "juejin.cn"
								},
								{
									"Type": "NodeCloseBracket",
									"Data": "]"
								},
								{
									"Type": "NodeOpenParen",
									"Data": "("
								},
								{
									"Type": "NodeLinkDest",
									"Data": "https://juejin.cn/post/6844904021308735502#heading-24"
								},
								{
									"Type": "NodeCloseParen",
									"Data": ")"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "*   强缓存"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-u1lam6m",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-u1lam6m"
			},
			"Children": [
				{
					"ID": "20220316082024-wnt7897",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-wnt7897"
					},
					"Children": [
						{
							"ID": "20220316082024-ndobw6p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-ndobw6p"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "协商缓存"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-5e1lmxq",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-5e1lmxq"
					},
					"Children": [
						{
							"ID": "20220316082024-wb1a4k4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-wb1a4k4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "缓存位置"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-xngoa2l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-xngoa2l"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "强缓存"
				}
			]
		},
		{
			"ID": "20220316082024-6hacexz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6hacexz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器中的缓存作用分为两种情况，一种是需要发送"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "请求，一种是不需要发送。"
				}
			]
		},
		{
			"ID": "20220316082024-7rtpmmn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-7rtpmmn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先是检查强缓存，这个阶段"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "不需要"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "发送 HTTP 请求。"
				}
			]
		},
		{
			"ID": "20220316082024-aw7zo60",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-aw7zo60"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何来检查呢？通过相应的字段来进行，但是说起这个字段就有点门道了。"
				}
			]
		},
		{
			"ID": "20220316082024-6vxbrap",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6vxbrap"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP/1.0"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP/1.1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "当中，这个字段是不一样的。在早期，也就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP/1.0"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "时期，使用的是 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Expires"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，而"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP/1.1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "使用的是 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Cache-Control"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。让我们首先来看看 Expires。"
				}
			]
		},
		{
			"ID": "20220316082024-ojc58ln",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-ojc58ln"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "Expires"
				}
			]
		},
		{
			"ID": "20220316082024-al48h2x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-al48h2x"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Expires"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "即过期时间，存在于服务端返回的响应头中，告诉浏览器在这个过期时间之前可以直接从缓存里面获取数据，无需再次请求。比如下面这样:"
				}
			]
		},
		{
			"ID": "20220316082024-otlqsy3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-otlqsy3"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Expires: Wed, 22 Nov 2019 08:41:00 GMT\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-hy2bewd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-hy2bewd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "表示资源在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "2019年11月22号8点41分"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "过期，过期了就得向服务端发请求。"
				}
			]
		},
		{
			"ID": "20220316082024-v69gdgl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-v69gdgl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个方式看上去没什么问题，合情合理，但其实潜藏了一个坑，那就是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "服务器的时间和浏览器的时间可能并不一致"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，那服务器返回的这个过期时间可能就是不准确的。因此这种方式很快在后来的 HTTP1.1 版本中被抛弃了。"
				}
			]
		},
		{
			"ID": "20220316082024-qmwch25",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-qmwch25"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "Cache-Control"
				}
			]
		},
		{
			"ID": "20220316082024-hvvk3y1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-hvvk3y1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 HTTP1.1 中，采用了一个非常关键的字段："
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cache-Control"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这个字段也是存在于"
				}
			]
		},
		{
			"ID": "20220316082024-vluplxj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vluplxj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Expires"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "本质的不同在于它并没有采用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "具体的过期时间点"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这个方式，而是采用过期时长来控制缓存，对应的字段是 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "max-age"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。比如这个例子:"
				}
			]
		},
		{
			"ID": "20220316082024-rn09nh4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-rn09nh4"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Cache-Control:max-age=3600\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-zzvy87e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zzvy87e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代表这个响应返回后在 3600 秒，也就是一个小时之内可以直接使用缓存。"
				}
			]
		},
		{
			"ID": "20220316082024-nfqvief",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-nfqvief"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你觉得它只有"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "max-age"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一个属性的话，那就大错特错了。"
				}
			]
		},
		{
			"ID": "20220316082024-u4cvhd7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-u4cvhd7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它其实可以组合非常多的指令，完成更多场景的缓存判断, 将一些关键的属性列举如下: "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "public"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": 客户端和代理服务器都可以缓存。因为一个请求可能要经过不同的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "代理服务器"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "最后才到达目标服务器，那么结果就是不仅仅浏览器可以缓存数据，中间的任何代理节点都可以进行缓存。"
				}
			]
		},
		{
			"ID": "20220316082024-mc4soxh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-mc4soxh"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "private"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "： 这种情况就是只有浏览器能缓存了，中间的代理服务器不能缓存。"
				}
			]
		},
		{
			"ID": "20220316082024-6xu42tq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6xu42tq"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "no-cache"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": 跳过当前的强缓存，发送 HTTP 请求，即直接进入"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "协商缓存阶段"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-wqnxb95",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wqnxb95"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "no-store"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：非常粗暴，不进行任何形式的缓存。"
				}
			]
		},
		{
			"ID": "20220316082024-0jypihw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-0jypihw"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "s-maxage"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：这和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "max-age"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "长得比较像，但是区别在于 s-maxage 是针对代理服务器的缓存时间。"
				}
			]
		},
		{
			"ID": "20220316082024-rd4p7ki",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-rd4p7ki"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "值得注意的是，当 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Expires"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Cache-Control"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 同时存在的时候，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Cache-Control"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 会优先考虑。"
				}
			]
		},
		{
			"ID": "20220316082024-9gkuwm4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-9gkuwm4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，还存在一种情况，当资源缓存时间超时了，也就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "强缓存"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "失效了，接下来怎么办？没错，这样就进入到第二级屏障——"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "协商缓存"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "了。"
				}
			]
		},
		{
			"ID": "20220316082024-w4n5a3s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-w4n5a3s"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "协商缓存"
				}
			]
		},
		{
			"ID": "20220316082024-n25ltf2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-n25ltf2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "强缓存失效之后，浏览器在请求头中携带相应的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "缓存tag"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来向服务器发请求，由服务器根据这个 tag，来决定是否使用缓存，这就是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "协商缓存"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-y9oeh9s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-y9oeh9s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体来说，这样的缓存 tag 分为两种: "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Last-Modified"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "ETag"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这两者各有优劣，并不存在谁对谁有"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "绝对的优势"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，跟上面强缓存的两个 tag 不一样。"
				}
			]
		},
		{
			"ID": "20220316082024-afvh2im",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-afvh2im"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "Last-Modified"
				}
			]
		},
		{
			"ID": "20220316082024-ixgdfib",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ixgdfib"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "即最后修改时间。在浏览器第一次给服务器发送请求后，服务器会在响应头中加上这个字段。"
				}
			]
		},
		{
			"ID": "20220316082024-fha15hp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-fha15hp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器接收到后，如果再次请求，会在请求头中携带"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "If-Modified-Since"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "字段，这个字段的值也就是服务器传来的最后修改时间。"
				}
			]
		},
		{
			"ID": "20220316082024-dxpiyvh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-dxpiyvh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "服务器拿到请求头中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "If-Modified-Since"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的字段后，其实会和这个服务器中"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "该资源的最后修改时间"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "对比:"
				}
			]
		},
		{
			"ID": "20220316082024-k7c9fme",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-k7c9fme"
			},
			"Children": [
				{
					"ID": "20220316082024-r5r3r4f",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-r5r3r4f"
					},
					"Children": [
						{
							"ID": "20220316082024-bbu0xtg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-bbu0xtg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果请求头中的这个值小于最后修改时间，说明是时候更新了。返回新的资源，跟常规的 HTTP 请求响应的流程一样。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-51b4ugi",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-51b4ugi"
					},
					"Children": [
						{
							"ID": "20220316082024-4n29xfd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-4n29xfd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否则返回 304，告诉浏览器直接用缓存。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-np64nc6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-np64nc6"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "ETag"
				}
			]
		},
		{
			"ID": "20220316082024-ky56j6q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ky56j6q"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "ETag"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 是服务器根据当前文件的内容，给文件生成的唯一标识，只要里面的内容有改动，这个值就会变。服务器通过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "响应头"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "把这个值给浏览器。"
				}
			]
		},
		{
			"ID": "20220316082024-8xzbr7t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-8xzbr7t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器接收到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "ETag"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的值，会在下次请求时，将这个值作为 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "If-None-Match"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 这个字段的内容，并放到请求头中，然后发给服务器。"
				}
			]
		},
		{
			"ID": "20220316082024-yuy6d20",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yuy6d20"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "服务器接收到 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "If-None-Match"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 后，会跟服务器上该资源的 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "ETag"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 进行比对:"
				}
			]
		},
		{
			"ID": "20220316082024-sqe080h",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-sqe080h"
			},
			"Children": [
				{
					"ID": "20220316082024-bw9v4l4",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-bw9v4l4"
					},
					"Children": [
						{
							"ID": "20220316082024-ukmgl0k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-ukmgl0k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果两者不一样，说明要更新了。返回新的资源，跟常规的 HTTP 请求响应的流程一样。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-14q5ylw",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-14q5ylw"
					},
					"Children": [
						{
							"ID": "20220316082024-1i08j6p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-1i08j6p"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否则返回 304，告诉浏览器直接用缓存。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-bnt3ei2",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-bnt3ei2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "两者对比"
				}
			]
		},
		{
			"ID": "20220316082024-zekgqaa",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-zekgqaa"
			},
			"Children": [
				{
					"ID": "20220316082024-m12s323",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-m12s323"
					},
					"Children": [
						{
							"ID": "20220316082024-c1mx9zz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-c1mx9zz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "精准度"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "上，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ETag"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "优于"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Last-Modified"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。优于 ETag 是按照内容给资源上标识，因此能准确感知资源的变化。而 Last-Modified 就不一样了，它在一些特殊的情况并不能准确感知资源变化，主要有两种情况:"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-spwens3",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-spwens3"
			},
			"Children": [
				{
					"ID": "20220316082024-rjncb9l",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-rjncb9l"
					},
					"Children": [
						{
							"ID": "20220316082024-m6a1eun",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-m6a1eun"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "编辑了资源文件，但是文件内容并没有更改，这样也会造成缓存失效。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-za2ntz3",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-za2ntz3"
					},
					"Children": [
						{
							"ID": "20220316082024-bmz4n83",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-bmz4n83"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Last-Modified 能够感知的单位时间是秒，如果文件在 1 秒内改变了多次，那么这时候的 Last-Modified 并没有体现出修改了。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-jjiyc8y",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 2,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "Mg==",
				"Num": 2
			},
			"Properties": {
				"id": "20220316082024-jjiyc8y"
			},
			"Children": [
				{
					"ID": "20220316082024-im33w0r",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-im33w0r"
					},
					"Children": [
						{
							"ID": "20220316082024-a0wdcke",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-a0wdcke"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在性能上，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Last-Modified"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "优于"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "ETag"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，也很简单理解，"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Last-Modified"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "仅仅只是记录一个时间点，而 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Etag"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "需要根据文件的具体内容生成哈希值。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-gg139q4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-gg139q4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外，如果两种方式都支持的话，服务器会优先考虑"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "ETag"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-pxzsfbz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-pxzsfbz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "缓存位置"
				}
			]
		},
		{
			"ID": "20220316082024-8v7l2yg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-8v7l2yg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "前面我们已经提到，当"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "强缓存"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "命中或者协商缓存中服务器返回 304 的时候，我们直接从缓存中获取资源。那这些资源究竟缓存在什么位置呢？"
				}
			]
		},
		{
			"ID": "20220316082024-sxuz0rd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-sxuz0rd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器中的缓存位置一共有四种，按优先级从高到低排列分别是："
				}
			]
		},
		{
			"ID": "20220316082024-x1mdlm1",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-x1mdlm1"
			},
			"Children": [
				{
					"ID": "20220316082024-2j6q1hq",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-2j6q1hq"
					},
					"Children": [
						{
							"ID": "20220316082024-0mxrr42",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-0mxrr42"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Service Worker"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-4kbt2oa",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-4kbt2oa"
					},
					"Children": [
						{
							"ID": "20220316082024-bom1q6i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-bom1q6i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Memory Cache"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-mrh6z60",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-mrh6z60"
					},
					"Children": [
						{
							"ID": "20220316082024-u74eip4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-u74eip4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Disk Cache"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-oo9o8eg",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-oo9o8eg"
					},
					"Children": [
						{
							"ID": "20220316082024-bq12whe",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-bq12whe"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Push Cache"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-jy8heyf",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-jy8heyf"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Service Worker"
				}
			]
		},
		{
			"ID": "20220316082024-zmze48g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zmze48g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Service Worker 借鉴了 Web Worker 的 思路，即让 JS 运行在主线程之外，由于它脱离了浏览器的窗体，因此无法直接访问"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。虽然如此，但它仍然能帮助我们完成很多有用的功能，比如"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "离线缓存"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "消息推送"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "网络代理"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "等功能。其中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "离线缓存"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就是 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Service Worker Cache"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-ctvchu9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ctvchu9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Service Worker 同时也是 PWA 的重要实现机制，关于它的细节和特性，我们将会在后面的 PWA 的分享中详细介绍。"
				}
			]
		},
		{
			"ID": "20220316082024-r3tzd3x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-r3tzd3x"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Memory Cache 和 Disk Cache"
				}
			]
		},
		{
			"ID": "20220316082024-rlrnz1q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-rlrnz1q"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Memory Cache"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 指的是内存缓存，从效率上讲它是最快的。但是从存活时间来讲又是最短的，当渲染进程结束后，内存缓存也就不存在了。"
				}
			]
		},
		{
			"ID": "20220316082024-249ymn5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-249ymn5"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Disk Cache"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 就是存储在磁盘中的缓存，从存取效率上讲是比内存缓存慢的，但是他的优势在于存储容量和存储时长。稍微有些计算机基础的应该很好理解，就不展开了。"
				}
			]
		},
		{
			"ID": "20220316082024-yrkpgff",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yrkpgff"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "好，现在问题来了，既然两者各有优劣，那浏览器如何决定将资源放进内存还是硬盘呢？主要策略如下："
				}
			]
		},
		{
			"ID": "20220316082024-w0powi6",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-w0powi6"
			},
			"Children": [
				{
					"ID": "20220316082024-shllk9s",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-shllk9s"
					},
					"Children": [
						{
							"ID": "20220316082024-ouayzjv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-ouayzjv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比较大的 JS、CSS 文件会直接被丢进磁盘，反之丢进内存"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-bgg8t1z",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-bgg8t1z"
					},
					"Children": [
						{
							"ID": "20220316082024-jmpk578",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-jmpk578"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "内存使用率比较高的时候，文件优先进入磁盘"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-q4z9ao1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-q4z9ao1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Push Cache"
				}
			]
		},
		{
			"ID": "20220316082024-bnmdpho",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-bnmdpho"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "即推送缓存，这是浏览器缓存的最后一道防线。它是 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP/2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 中的内容，虽然现在应用的并不广泛，但随着 HTTP/2 的推广，它的应用越来越广泛。关于 Push Cache，有非常多的内容可以挖掘，不过这已经不是本文的重点，大家可以参考这篇"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "扩展文章"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fjakearchibald.com%2F2017%2Fh2-push-tougher-than-i-thought%2F"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://jakearchibald.com/2017/h2-push-tougher-than-i-thought/"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")。"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-8b3qj8q",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-8b3qj8q"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220316082024-tf27p3o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-tf27p3o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对浏览器的缓存机制来做个简要的总结:"
				}
			]
		},
		{
			"ID": "20220316082024-pk8vogw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-pk8vogw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先通过 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cache-Control"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 验证强缓存是否可用"
				}
			]
		},
		{
			"ID": "20220316082024-99cvd1r",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-99cvd1r"
			},
			"Children": [
				{
					"ID": "20220316082024-eowxbkr",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-eowxbkr"
					},
					"Children": [
						{
							"ID": "20220316082024-udyfoki",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-udyfoki"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果强缓存可用，直接使用"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-x0jdi5a",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-x0jdi5a"
					},
					"Children": [
						{
							"ID": "20220316082024-j0ntgma",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-j0ntgma"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "否则进入协商缓存，即发送 HTTP 请求，服务器通过请求头中的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "If-Modified-Since"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或者"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "If-None-Match"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "字段检查资源是否更新"
								}
							]
						},
						{
							"ID": "20220316082024-8yyevqx",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 42,
								"Padding": 4,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20220316082024-8yyevqx"
							},
							"Children": [
								{
									"ID": "20220316082024-x5mg88a",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20220316082024-x5mg88a"
									},
									"Children": [
										{
											"ID": "20220316082024-6cxmu3b",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220316082024-6cxmu3b"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "若资源更新，返回资源和 200 状态码"
												}
											]
										}
									]
								},
								{
									"ID": "20220316082024-jmo5wdi",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 4,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20220316082024-jmo5wdi"
									},
									"Children": [
										{
											"ID": "20220316082024-dt2snox",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220316082024-dt2snox"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "否则，返回 304，告诉浏览器直接从缓存获取资源"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-6yfx442",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6yfx442"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 2 篇: 能不能说一说浏览器的本地存储？各自优劣如何？"
				}
			]
		},
		{
			"ID": "20220316082024-nzt3oz1",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-nzt3oz1"
			}
		},
		{
			"ID": "20220316082024-x8r2lzd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-x8r2lzd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器的本地存储主要分为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cookie"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "WebStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IndexedDB"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 其中"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "WebStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "又可以分为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "sessionStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。接下来我们就来一一分析这些本地存储方案。"
				}
			]
		},
		{
			"ID": "20220316082024-nghrv0v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-nghrv0v"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "Cookie"
				}
			]
		},
		{
			"ID": "20220316082024-jvnweqw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-jvnweqw"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cookie"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 最开始被设计出来其实并不是来做本地存储的，而是为了弥补"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "状态管理上的不足"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-zeegtee",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zeegtee"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 协议是一个无状态协议，客户端向服务器发请求，服务器返回响应，故事就这样结束了，但是下次发请求如何让服务端知道客户端是谁呢？"
				}
			]
		},
		{
			"ID": "20220316082024-mnshzl6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-mnshzl6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这种背景下，就产生了 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cookie"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "."
				}
			]
		},
		{
			"ID": "20220316082024-eklvrvz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-eklvrvz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Cookie 本质上就是浏览器里面存储的一个很小的文本文件，内部以键值对的方式来存储 (在 chrome 开发者面板的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Application"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这一栏可以看到)。向同一个域名下发送请求，都会携带相同的 Cookie，服务器拿到 Cookie 进行解析，便能拿到客户端的状态。"
				}
			]
		},
		{
			"ID": "20220316082024-2063m7r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-2063m7r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Cookie 的作用很好理解，就是用来做"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "状态存储"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的，但它也是有诸多致命的缺陷的："
				}
			]
		},
		{
			"ID": "20220316082024-nv2b1nr",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-nv2b1nr"
			},
			"Children": [
				{
					"ID": "20220316082024-149hbno",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-149hbno"
					},
					"Children": [
						{
							"ID": "20220316082024-qzjvkpw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-qzjvkpw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "容量缺陷。Cookie 的体积上限只有"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "4KB"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，只能用来存储少量的信息。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-w1c1qc5",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-w1c1qc5"
					},
					"Children": [
						{
							"ID": "20220316082024-7a0evzj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-7a0evzj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "性能缺陷。Cookie 紧跟域名，不管域名下面的某一个地址需不需要这个 Cookie ，请求都会携带上完整的 Cookie，这样随着请求数的增多，其实会造成巨大的性能浪费的，因为请求携带了很多不必要的内容。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-m7z1vil",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-m7z1vil"
					},
					"Children": [
						{
							"ID": "20220316082024-52ov7of",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-52ov7of"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "安全缺陷。由于 Cookie 以纯文本的形式在浏览器和服务器中传递，很容易被非法用户截获，然后进行一系列的篡改，在 Cookie 的有效期内重新发送给服务器，这是相当危险的。另外，在"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpOnly"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "为 false 的情况下，Cookie 信息能直接通过 JS 脚本来读取。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-0i4e10r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-0i4e10r"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "localStorage"
				}
			]
		},
		{
			"ID": "20220316082024-ihbj55t",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-ihbj55t"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "和 Cookie 异同"
				}
			]
		},
		{
			"ID": "20220316082024-6maatkh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6maatkh"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "有一点跟"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cookie"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一样，就是针对一个域名，即在同一个域名下，会存储相同的一段 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "localStorage"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-lo3jcx8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-lo3jcx8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不过它相对"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cookie"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "还是有相当多的区别的:"
				}
			]
		},
		{
			"ID": "20220316082024-k7m5zjq",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-k7m5zjq"
			},
			"Children": [
				{
					"ID": "20220316082024-8odd001",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-8odd001"
					},
					"Children": [
						{
							"ID": "20220316082024-z4bn5fr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-z4bn5fr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "容量。localStorage 的容量上限为 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "5M"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，相比于"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Cookie"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的 4K 大大增加。当然这个 5M 是针对一个域名的，因此对于一个域名是持久存储的。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-vov613g",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-vov613g"
					},
					"Children": [
						{
							"ID": "20220316082024-l466gwi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-l466gwi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "只存在客户端，默认不参与与服务端的通信。这样就很好地避免了 Cookie 带来的"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "性能问题"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "安全问题"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-zm5ldyh",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-zm5ldyh"
					},
					"Children": [
						{
							"ID": "20220316082024-yj509w0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-yj509w0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "接口封装。通过"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "localStorage"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "暴露在全局，并通过它的 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "setItem"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 和 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getItem"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "等方法进行操作，非常方便。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-bj42m0q",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-bj42m0q"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "操作方式"
				}
			]
		},
		{
			"ID": "20220316082024-hkkbarw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-hkkbarw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来我们来具体看看如何来操作"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-39oc6hb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-39oc6hb"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "let obj = { name: \"sanyuan\", age: 18 };\nlocalStorage.setItem(\"name\", \"sanyuan\"); \nlocalStorage.setItem(\"info\", JSON.stringify(obj));\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-vcsu2fp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vcsu2fp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着进入相同的域名时就能拿到相应的值:"
				}
			]
		},
		{
			"ID": "20220316082024-ylcsuao",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-ylcsuao"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "let name = localStorage.getItem(\"name\");\nlet info = JSON.parse(localStorage.getItem(\"info\"));\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-jdp16gi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-jdp16gi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从这里可以看出，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "其实存储的都是字符串，如果是存储对象需要调用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "JSON"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "stringify"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "方法，并且用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "JSON.parse"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来解析成对象。"
				}
			]
		},
		{
			"ID": "20220316082024-jwikma4",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-jwikma4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "应用场景"
				}
			]
		},
		{
			"ID": "20220316082024-k8g9meb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-k8g9meb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "利用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的较大容量和持久特性，可以利用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "存储一些内容稳定的资源，比如官网的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "logo"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，存储"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Base64"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "格式的图片资源，因此利用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-gjblrz7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-gjblrz7"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "sessionStorage"
				}
			]
		},
		{
			"ID": "20220316082024-3q1187x",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-3q1187x"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "特点"
				}
			]
		},
		{
			"ID": "20220316082024-4zo00qy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-4zo00qy"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "sessionStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "以下方面和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一致:"
				}
			]
		},
		{
			"ID": "20220316082024-jw846to",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-jw846to"
			},
			"Children": [
				{
					"ID": "20220316082024-m5b9vyy",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-m5b9vyy"
					},
					"Children": [
						{
							"ID": "20220316082024-51v0666",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-51v0666"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "容量。容量上限也为 5M。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-nqlhtw5",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-nqlhtw5"
					},
					"Children": [
						{
							"ID": "20220316082024-px5e613",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-px5e613"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "只存在客户端，默认不参与与服务端的通信。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-lrjl3p7",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-lrjl3p7"
					},
					"Children": [
						{
							"ID": "20220316082024-4ovhtue",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-4ovhtue"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "接口封装。除了"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "sessionStorage"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "名字有所变化，存储方式、操作方式均和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "localStorage"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "一样。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-vik3cwk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vik3cwk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "sessionStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "localStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "有一个本质的区别，那就是前者只是会话级别的存储，并不是持久化存储。会话结束，也就是页面关闭，这部分"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "sessionStorage"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就不复存在了。"
				}
			]
		},
		{
			"ID": "20220316082024-njsupnz",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-njsupnz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "应用场景"
				}
			]
		},
		{
			"ID": "20220316082024-92rtbfb",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-92rtbfb"
			},
			"Children": [
				{
					"ID": "20220316082024-b328vzw",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-b328vzw"
					},
					"Children": [
						{
							"ID": "20220316082024-oxk9omj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-oxk9omj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以用它对表单信息进行维护，将表单信息存储在里面，可以保证页面即使刷新也不会让之前的表单信息丢失。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-mt88h4g",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-mt88h4g"
					},
					"Children": [
						{
							"ID": "20220316082024-86xnb9v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-86xnb9v"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以用它存储本次浏览记录。如果关闭页面后不需要这些记录，用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "sessionStorage"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "就再合适不过了。事实上微博就采取了这样的存储方式。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-67u7pts",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-67u7pts"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "IndexedDB"
				}
			]
		},
		{
			"ID": "20220316082024-zab98bj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zab98bj"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IndexedDB"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "是运行在浏览器中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非关系型数据库"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 本质上是数据库，绝不是和刚才 WebStorage 的 5M 一个量级，理论上这个容量是没有上限的。"
				}
			]
		},
		{
			"ID": "20220316082024-fswtuoj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-fswtuoj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于它的使用，本文侧重原理，而且 MDN 上的教程文档已经非常详尽，这里就不做赘述了，感兴趣可以看一下"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "使用文档"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FIndexedDB_API%2FUsing_IndexedDB"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API/Using_IndexedDB"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")。"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-pgcdc3f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-pgcdc3f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着我们来分析一下"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IndexedDB"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的一些重要特性，除了拥有数据库本身的特性，比如"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "支持事务"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "存储二进制数据"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，还有这样一些特性需要格外注意："
				}
			]
		},
		{
			"ID": "20220316082024-rkb9qjn",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-rkb9qjn"
			},
			"Children": [
				{
					"ID": "20220316082024-p1jy9dm",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-p1jy9dm"
					},
					"Children": [
						{
							"ID": "20220316082024-iqj1eg9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-iqj1eg9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "键值对存储。内部采用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "对象仓库"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "存放数据，在这个对象仓库中数据采用"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "键值对"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的方式来存储。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-ei31f62",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-ei31f62"
					},
					"Children": [
						{
							"ID": "20220316082024-enitwfg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-enitwfg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "异步操作。数据库的读写属于 I/O 操作, 浏览器中对异步 I/O 提供了支持。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-qrusu3g",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-qrusu3g"
					},
					"Children": [
						{
							"ID": "20220316082024-etbowpl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-etbowpl"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "受同源策略限制，即无法访问跨域的数据库。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-q9o3ce1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-q9o3ce1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220316082024-iwhvb1q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-iwhvb1q"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器中各种本地存储和缓存技术的发展，给前端应用带来了大量的机会，PWA 也正是依托了这些优秀的存储方案才得以发展起来。重新梳理一下这些本地存储方案:"
				}
			]
		},
		{
			"ID": "20220316082024-iqnkdma",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-iqnkdma"
			},
			"Children": [
				{
					"ID": "20220316082024-3sxy6x9",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-3sxy6x9"
					},
					"Children": [
						{
							"ID": "20220316082024-nnidatn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-nnidatn"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "cookie"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "并不适合存储，而且存在非常多的缺陷。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-gklodga",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-gklodga"
					},
					"Children": [
						{
							"ID": "20220316082024-jpg4z66",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-jpg4z66"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Web Storage"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "包括"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "localStorage"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "sessionStorage"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 默认不会参与和服务器的通信。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-m078cq3",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-m078cq3"
					},
					"Children": [
						{
							"ID": "20220316082024-bxnom9q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-bxnom9q"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "IndexedDB"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "为运行在浏览器上的非关系型数据库，为大型数据的存储提供了接口。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-ad5i0yy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ad5i0yy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 3 篇: 说一说从输入 URL 到页面呈现发生了什么？——网络篇"
				}
			]
		},
		{
			"ID": "20220316082024-6qof45x",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-6qof45x"
			}
		},
		{
			"ID": "20220316082024-qer30bu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-qer30bu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这是一个可以无限难的问题。出这个题目的目的就是为了考察你的 web 基础深入到什么程度。由于水平和篇幅有限，在这里我将把其中一些重要的过程给大家梳理一遍，相信能在绝大部分的情况下给出一个比较惊艳的答案。"
				}
			]
		},
		{
			"ID": "20220316082024-qnso5v3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-qnso5v3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里我提前声明，由于是一个综合性非常强的问题，可能会在某一个点上深挖出非常多的细节，我个人觉得学习是一个循序渐进的过程，在明白了整体过程后再去自己研究这些细节，会对整个知识体系有更深的理解。同时，关于延申出来的细节点我都有参考资料，看完这篇之后不妨再去深入学习一下，扩展知识面。"
				}
			]
		},
		{
			"ID": "20220316082024-wvepwun",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wvepwun"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "好，正题开始。"
				}
			]
		},
		{
			"ID": "20220316082024-vpv0q3i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vpv0q3i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时此刻，你在浏览器地址栏输入了百度的网址:"
				}
			]
		},
		{
			"ID": "20220316082024-uown2x8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-uown2x8"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "https://www.baidu.com/\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-qr66yip",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-qr66yip"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "网络请求"
				}
			]
		},
		{
			"ID": "20220316082024-okp6a0n",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-okp6a0n"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "1. 构建请求"
				}
			]
		},
		{
			"ID": "20220316082024-tp1o5ck",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-tp1o5ck"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器会构建请求行:"
				}
			]
		},
		{
			"ID": "20220316082024-rmc8q67",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-rmc8q67"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 请求方法是GET，路径为根路径，HTTP协议版本为1.1\nGET / HTTP/1.1\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-i3m87zg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-i3m87zg"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "2. 查找强缓存"
				}
			]
		},
		{
			"ID": "20220316082024-acbnshb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-acbnshb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先检查强缓存，如果命中直接使用，否则进入下一步。关于强缓存，如果不清楚可以参考上一篇文章。"
				}
			]
		},
		{
			"ID": "20220316082024-ililqw1",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-ililqw1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "3. DNS 解析"
				}
			]
		},
		{
			"ID": "20220316082024-mv4awp8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-mv4awp8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于我们输入的是域名，而数据包是通过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IP地址"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "传给对方的。因此我们需要得到域名对应的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IP地址"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这个过程需要依赖一个服务系统，这个系统将域名和 IP 一一映射，我们将这个系统就叫做 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "DNS"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "（域名系统）。得到具体 IP 的过程就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DNS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "解析。"
				}
			]
		},
		{
			"ID": "20220316082024-2terwyt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-2terwyt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，值得注意的是，浏览器提供了 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "DNS 数据缓存功能"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。即如果一个域名已经解析过，那会把解析的结果缓存下来，下次处理直接走缓存，不需要经过 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DNS解析"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-j0ky2y5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-j0ky2y5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外，如果不指定端口的话，默认采用对应的 IP 的 80 端口。"
				}
			]
		},
		{
			"ID": "20220316082024-ggilrtx",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-ggilrtx"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "4. 建立 TCP 连接"
				}
			]
		},
		{
			"ID": "20220316082024-kcs2jfo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-kcs2jfo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里要提醒一点，Chrome 在同一个域名下要求同时最多只能有 6 个 TCP 连接，超过 6 个的话剩下的请求就得等待。"
				}
			]
		},
		{
			"ID": "20220316082024-ld0rejq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ld0rejq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假设现在不需要等待，我们进入了 TCP 连接的建立阶段。首先解释一下什么是 TCP:"
				}
			]
		},
		{
			"ID": "20220316082024-a9f1asf",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220316082024-a9f1asf"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20220316082024-dz99hos",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220316082024-dz99hos"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "TCP（Transmission Control Protocol，传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议。"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-1lm05dc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-1lm05dc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建立 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP连接"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "经历了下面三个阶段:"
				}
			]
		},
		{
			"ID": "20220316082024-iu985l4",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-iu985l4"
			},
			"Children": [
				{
					"ID": "20220316082024-1ktngjl",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-1ktngjl"
					},
					"Children": [
						{
							"ID": "20220316082024-03sw5p5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-03sw5p5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "三次握手"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " (即总共发送 3 个数据包确认已经建立连接) 建立客户端和服务器之间的连接。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-m6p6h1w",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-m6p6h1w"
					},
					"Children": [
						{
							"ID": "20220316082024-488drs7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-488drs7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "进行数据传输。这里有一个重要的机制，就是接收方接收到数据包后必须要向发送方"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "确认"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 如果发送方没有接到这个"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "确认"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的消息，就判定为数据包丢失，并重新发送该数据包。当然，发送的过程中还有一个优化策略，就是把"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "大的数据包拆成一个个小包"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，依次传输到接收方，接收方按照这个小包的顺序把它们"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "组装"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "成完整数据包。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-je642rp",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-je642rp"
					},
					"Children": [
						{
							"ID": "20220316082024-1wf16c3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-1wf16c3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "断开连接的阶段。数据传输完成，现在要断开连接了，通过"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "四次挥手"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "来断开连接。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-3xrjjxq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-3xrjjxq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "读到这里，你应该明白 TCP 连接通过什么手段来保证数据传输的可靠性，一是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "三次握手"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "确认连接，二是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "数据包校验"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "保证数据到达接收方，三是通过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "四次挥手"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "断开连接。"
				}
			]
		},
		{
			"ID": "20220316082024-ify6dhk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ify6dhk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，如果再深入地问，比如"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "为什么要三次握手，两次不行吗？第三次握手失败了怎么办？为什么要四次挥手"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "等等这一系列的问题，涉及计算机网络的基础知识，比较底层，但是也是非常重要的细节，希望你能好好研究一下，另外这里有一篇不错的文章，"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "点击进入相应的推荐文章"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F86426969"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://zhuanlan.zhihu.com/p/86426969"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")，相信这篇文章能给你启发。"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，相信这篇文章能给你启发。"
				}
			]
		},
		{
			"ID": "20220316082024-v4cqtw6",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-v4cqtw6"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "5. 发送 HTTP 请求"
				}
			]
		},
		{
			"ID": "20220316082024-l3kuf0t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-l3kuf0t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP连接"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "建立完毕，浏览器可以和服务器开始通信，即开始发送 HTTP 请求。浏览器发 HTTP 请求要携带三样东西: "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "请求行"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "请求头"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "请求体"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-mlbo0r4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-mlbo0r4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，浏览器会向服务器发送"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "请求行"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 关于"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "请求行"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "， 我们在这一部分的第一步就构建完了，贴一下内容:"
				}
			]
		},
		{
			"ID": "20220316082024-zxmj4ia",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-zxmj4ia"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 请求方法是GET，路径为根路径，HTTP协议版本为1.1\nGET / HTTP/1.1\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-p3i94ig",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-p3i94ig"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结构很简单，由"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "请求方法"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "请求 URI"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "HTTP 版本协议"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "组成。"
				}
			]
		},
		{
			"ID": "20220316082024-fo8keuw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-fo8keuw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同时也要带上"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "请求头"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，比如我们之前说的 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Cache-Control"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "If-Modified-Since"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "If-None-Match"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 都由可能被放入请求头中作为缓存的标识信息。当然了还有一些其他的属性，列举如下:"
				}
			]
		},
		{
			"ID": "20220316082024-67pbyvw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-67pbyvw"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.9\nCache-Control: no-cache\nConnection: keep-alive\nCookie: /* 省略cookie信息 */\nHost: www.baidu.com\nPragma: no-cache\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-h9m9wis",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-h9m9wis"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "最后是请求体，请求体只有在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "POST"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "方法下存在，常见的场景是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "表单提交"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-4vfokzj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-4vfokzj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "网络响应"
				}
			]
		},
		{
			"ID": "20220316082024-94d0juh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-94d0juh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HTTP 请求到达服务器，服务器进行对应的处理。最后要把数据传给浏览器，也就是返回网络响应。"
				}
			]
		},
		{
			"ID": "20220316082024-lym36qp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-lym36qp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "跟请求部分类似，网络响应具有三个部分: "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "响应行"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "响应头"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "响应体"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-ik0t2ji",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ik0t2ji"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "响应行类似下面这样:"
				}
			]
		},
		{
			"ID": "20220316082024-ywiwy70",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-ywiwy70"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "HTTP/1.1 200 OK\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-zoj3s9j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zoj3s9j"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP协议版本"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "状态码"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "状态描述"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "组成。"
				}
			]
		},
		{
			"ID": "20220316082024-2gze5pg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-2gze5pg"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "响应头包含了服务器及其返回数据的一些信息, 服务器生成数据的时间、返回的数据类型以及对即将写入的 Cookie 信息。"
				}
			]
		},
		{
			"ID": "20220316082024-aatevur",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-aatevur"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "举例如下:"
				}
			]
		},
		{
			"ID": "20220316082024-483tj6w",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-483tj6w"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Cache-Control: no-cache\nConnection: keep-alive\nContent-Encoding: gzip\nContent-Type: text/html;charset=utf-8\nDate: Wed, 04 Dec 2019 12:29:13 GMT\nServer: apache\nSet-Cookie: rsv_i=f9a0SIItKqzv7kqgAAgphbGyRts3RwTg%2FLyU3Y5Eh5LwyfOOrAsvdezbay0QqkDqFZ0DfQXby4wXKT8Au8O7ZT9UuMsBq2k; path=/; domain=.baidu.com\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-8hhiivi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-8hhiivi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "响应完成之后怎么办？TCP 连接就断开了吗？"
				}
			]
		},
		{
			"ID": "20220316082024-o08xish",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-o08xish"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不一定。这时候要判断"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Connection"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "字段, 如果请求头或响应头中包含 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Connection: Keep-Alive"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，表示建立了持久连接，这样"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "连接会一直保持，之后请求统一站点的资源会复用这个连接。"
				}
			]
		},
		{
			"ID": "20220316082024-2fjb3mi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-2fjb3mi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "否则断开"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "连接, 请求 - 响应流程结束。"
				}
			]
		},
		{
			"ID": "20220316082024-jhix7vi",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-jhix7vi"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220316082024-0xit5qr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-0xit5qr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "到此，我们来总结一下主要内容，也就是浏览器端的网络请求过程："
				}
			]
		},
		{
			"ID": "20220316082024-n9hqgml",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-n9hqgml"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f080b095268038~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-tcynhyr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-tcynhyr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 4 篇: 说一说从输入 URL 到页面呈现发生了什么？——解析算法篇"
				}
			]
		},
		{
			"ID": "20220316082024-x4wgcdz",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-x4wgcdz"
			}
		},
		{
			"ID": "20220316082024-due9j79",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-due9j79"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完成了网络请求和响应，如果响应头中"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Content-Type"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的值是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "text/html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，那么接下来就是浏览器的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "解析"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "渲染"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "工作了。"
				}
			]
		},
		{
			"ID": "20220316082024-d2w5jko",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-d2w5jko"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先来介绍解析部分，主要分为以下几个步骤:"
				}
			]
		},
		{
			"ID": "20220316082024-fharnx8",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-fharnx8"
			},
			"Children": [
				{
					"ID": "20220316082024-vw6viok",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-vw6viok"
					},
					"Children": [
						{
							"ID": "20220316082024-mad3e58",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-mad3e58"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "构建 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "DOM"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "树"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-hhmjjim",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-hhmjjim"
					},
					"Children": [
						{
							"ID": "20220316082024-h4xe39d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-h4xe39d"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "样式"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "计算"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-odpouzo",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-odpouzo"
					},
					"Children": [
						{
							"ID": "20220316082024-jjs253d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-jjs253d"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "生成"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "布局树"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "("
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Layout Tree"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ")"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-jeluyu1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-jeluyu1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "构建 DOM 树"
				}
			]
		},
		{
			"ID": "20220316082024-3d463m8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-3d463m8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于浏览器无法直接理解"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTML字符串"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，因此将这一系列的字节流转换为一种有意义并且方便操作的数据结构，这种数据结构就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "本质上是一个以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "document"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "为根节点的多叉树。"
				}
			]
		},
		{
			"ID": "20220316082024-91868ga",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-91868ga"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那通过什么样的方式来进行解析呢？"
				}
			]
		},
		{
			"ID": "20220316082024-uujcuzr",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-uujcuzr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "HTML 文法的本质"
				}
			]
		},
		{
			"ID": "20220316082024-ij5x5oy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ij5x5oy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，我们应该清楚把握一点: HTML 的文法并不是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "上下文无关文法"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-n2cy2rr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-n2cy2rr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里，有必要讨论一下什么是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "上下文无关文法"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-zi4rd85",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zi4rd85"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在计算机科学的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "编译原理"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "学科中，有非常明确的定义:"
				}
			]
		},
		{
			"ID": "20220316082024-k3h7i29",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220316082024-k3h7i29"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e "
				},
				{
					"ID": "20220316082024-5yes4av",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220316082024-5yes4av"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "若一个形式文法 G = (N, Σ, P, S) 的产生式规则都取如下的形式：V-\u003ew，则叫上下文无关语法。其中 V∈N ，w∈(N∪Σ)* 。"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-4407lz1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-4407lz1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中把 G = (N, Σ, P, S) 中各个参量的意义解释一下:"
				}
			]
		},
		{
			"ID": "20220316082024-k4dt168",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-k4dt168"
			},
			"Children": [
				{
					"ID": "20220316082024-16g7kef",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-16g7kef"
					},
					"Children": [
						{
							"ID": "20220316082024-pw1bew6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-pw1bew6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "N 是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "非终结符"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " (顾名思义，就是说最后一个符号不是它, 下面同理) 集合。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-0y3w790",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-0y3w790"
					},
					"Children": [
						{
							"ID": "20220316082024-cgj8quu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-cgj8quu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Σ 是"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "终结符"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "集合。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-atrkwfm",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-atrkwfm"
					},
					"Children": [
						{
							"ID": "20220316082024-0m34dzx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-0m34dzx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "P 是开始符，它必须属于 N ，也就是非终结符。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-v39np92",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220316082024-v39np92"
					},
					"Children": [
						{
							"ID": "20220316082024-8nnso1f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-8nnso1f"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "S 就是不同的产生式的集合。如 S -\u003e aSb 等等。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-3snomye",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-3snomye"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通俗一点讲，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "上下文无关的文法"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就是说这个文法中所有产生式的左边都是一个非终结符。"
				}
			]
		},
		{
			"ID": "20220316082024-meyipga",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-meyipga"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "看到这里，如果还有一点懵圈，我举个例子你就明白了。"
				}
			]
		},
		{
			"ID": "20220316082024-qk9qdix",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-qk9qdix"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如:"
				}
			]
		},
		{
			"ID": "20220316082024-uprq6ai",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-uprq6ai"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "A -\u003e B\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-74nf83i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-74nf83i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个文法中，每个产生式左边都会有一个非终结符，这就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "上下文无关的文法"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。在这种情况下，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "xBy"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一定是可以规约出"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "xAy"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的。"
				}
			]
		},
		{
			"ID": "20220316082024-gals9n0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-gals9n0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们下面看看看一个反例："
				}
			]
		},
		{
			"ID": "20220316082024-dimnzh6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-dimnzh6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "aA -\u003e B\nAa -\u003e B\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-91hmmew",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-91hmmew"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这种情况就是不是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "上下文无关的文法"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，当遇到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "B"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的时候，我们不知道到底能不能规约出"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "A"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，取决于左边或者右边是否有"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "a"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "存在，也就是说和上下文有关。"
				}
			]
		},
		{
			"ID": "20220316082024-3lw6c84",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-3lw6c84"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于它为什么是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非上下文无关文法"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，首先需要让大家注意的是，规范的 HTML 语法，是符合"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "上下文无关文法"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的，能够体现它"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非上下文无关"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "不标准的语法"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。在此我仅举一个反例即可证明。"
				}
			]
		},
		{
			"ID": "20220316082024-cr4ddvr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-cr4ddvr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如解析器扫描到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "标签的时候，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "上下文无关文法"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的处理方式是直接创建对应 form 的 DOM 对象，而真实的 HTML5 场景中却不是这样，解析器会查看 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 的上下文，如果这个 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 标签的父标签也是 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 那么"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "直接跳过"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "当前的 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 标签，否则才创建 DOM 对象。"
				}
			]
		},
		{
			"ID": "20220316082024-er6fucl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-er6fucl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常规的编程语言都是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "上下文无关"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的，而 HTML 却相反，也正是它"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "非上下文无关"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的特性，决定了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTML Parser"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "并不能使用常规编程语言的解析器来完成，需要另辟蹊径。"
				}
			]
		},
		{
			"ID": "20220316082024-2flxesk",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-2flxesk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "解析算法"
				}
			]
		},
		{
			"ID": "20220316082024-yna0syz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yna0syz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HTML5 "
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "规范"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fhtml.spec.whatwg.org%2Fmultipage%2Fparsing.html"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://html.spec.whatwg.org/multipage/parsing.html"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")详细地介绍了解析算法。这个算法分为两个阶段:"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "详细地介绍了解析算法。这个算法分为两个阶段:"
				}
			]
		},
		{
			"ID": "20220316082024-x3s9uc2",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-x3s9uc2"
			},
			"Children": [
				{
					"ID": "20220316082024-jfce89k",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-jfce89k"
					},
					"Children": [
						{
							"ID": "20220316082024-y6paq7k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-y6paq7k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "标记化。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-wsdy34x",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-wsdy34x"
					},
					"Children": [
						{
							"ID": "20220316082024-lntrpom",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-lntrpom"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "建树。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-x8k8aj6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-x8k8aj6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对应的两个过程就是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "词法分析"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "语法分析"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-juta1dt",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220316082024-juta1dt"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "##### "
				},
				{
					"Type": "NodeText",
					"Data": "标记化算法"
				}
			]
		},
		{
			"ID": "20220316082024-0oncxo6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-0oncxo6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个算法输入为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTML文本"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，输出为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTML标记"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，也成为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "标记生成器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。其中运用"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "有限自动状态机"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来完成。即在当当前状态下，接收一个或多个字符，就会更新到下一个状态。"
				}
			]
		},
		{
			"ID": "20220316082024-pflufyy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-pflufyy"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003chtml\u003e\n  \u003cbody\u003e\n    Hello sanyuan\n  \u003c/body\u003e\n\u003c/html\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-ueqx1g4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ueqx1g4"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过一个简单的例子来演示一下"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "标记化"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的过程。"
				}
			]
		},
		{
			"ID": "20220316082024-epo5p20",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-epo5p20"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遇到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u003c"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 状态为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "标记打开"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-jitahin",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-jitahin"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接收"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "[a-z]"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的字符，会进入"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "标记名称状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-cyq8r3g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-cyq8r3g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个状态一直保持，直到遇到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u003e"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，表示标记名称记录完成，这时候变为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "数据状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-1sji02t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-1sji02t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来遇到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "body"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "标签做同样的处理。"
				}
			]
		},
		{
			"ID": "20220316082024-s50sufa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-s50sufa"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个时候"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "body"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的标记都记录好了。"
				}
			]
		},
		{
			"ID": "20220316082024-j1a27pu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-j1a27pu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在来到 \u003cbody\u003e 中的 \u003e，进入"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "数据状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，之后保持这样状态接收后面的字符 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "hello sanyuan"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-fs6huoy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-fs6huoy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着接收 \u003c/body\u003e 中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u003c"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，回到"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "标记打开"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 接收下一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "后，这时候会创建一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "end tag"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的 token。"
				}
			]
		},
		{
			"ID": "20220316082024-97emhul",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-97emhul"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "随后进入"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "标记名称状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 遇到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u003e"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "回到"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "数据状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-ve9x61t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ve9x61t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着以同样的样式处理 \u003c/body\u003e。"
				}
			]
		},
		{
			"ID": "20220316082024-yatx8ko",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220316082024-yatx8ko"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "##### "
				},
				{
					"Type": "NodeText",
					"Data": "建树算法"
				}
			]
		},
		{
			"ID": "20220316082024-a02wf38",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-a02wf38"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "之前提到过，DOM 树是一个以"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "document"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "为根节点的多叉树。因此解析器首先会创建一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "document"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "对象。标记生成器会把每个标记的信息发送给"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "建树器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "建树器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "接收到相应的标记时，会"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "创建对应的 DOM 对象"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。创建这个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM对象"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "后会做两件事情:"
				}
			]
		},
		{
			"ID": "20220316082024-bpebqtk",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-bpebqtk"
			},
			"Children": [
				{
					"ID": "20220316082024-t6m33eq",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-t6m33eq"
					},
					"Children": [
						{
							"ID": "20220316082024-33nmjrd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-33nmjrd"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "DOM对象"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "加入 DOM 树中。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-djy2vps",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-djy2vps"
					},
					"Children": [
						{
							"ID": "20220316082024-cbow3fs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-cbow3fs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将对应标记压入存放开放 (与"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "闭合标签"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "意思对应) 元素的栈中。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-5vw392g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-5vw392g"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还是拿下面这个例子说:"
				}
			]
		},
		{
			"ID": "20220316082024-v3v4258",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-v3v4258"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003chtml\u003e\n  \u003cbody\u003e\n    Hello sanyuan\n  \u003c/body\u003e\n\u003c/html\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-z5l2brz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-z5l2brz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，状态为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "初始化状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-euzuhui",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-euzuhui"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接收到标记生成器传来的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "标签，这时候状态变为 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "before html 状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。同时创建一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTMLHtmlElement"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的 DOM 元素, 将其加到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "document"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "根对象上，并进行压栈操作。"
				}
			]
		},
		{
			"ID": "20220316082024-0iws3nz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-0iws3nz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着状态自动变为 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "before head"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 此时从标记生成器那边传来"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "body"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，表示并没有"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "head"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 这时候"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "建树器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "会自动创建一个 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "HTMLHeadElement"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 并将其加入到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中。"
				}
			]
		},
		{
			"ID": "20220316082024-ab15f25",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ab15f25"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在进入到 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "in head"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 状态, 然后直接跳到 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "after head"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-sgtcptr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-sgtcptr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "标记生成器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "传来了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "body"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "标记，创建 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "HTMLBodyElement"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 插入到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "树中，同时压入开放标记栈。"
				}
			]
		},
		{
			"ID": "20220316082024-5pdgp3u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-5pdgp3u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着状态变为 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "in body"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，然后来接收后面一系列的字符: "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Hello sanyuan"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。接收到第一个字符的时候，会创建一个 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Text"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 节点并把字符插入其中，然后把 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Text"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 节点插入到 DOM 树中"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "body元素"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的下面。随着不断接收后面的字符，这些字符会附在 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Text"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 节点上。"
				}
			]
		},
		{
			"ID": "20220316082024-8yudj85",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-8yudj85"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "标记生成器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "传过来一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "body"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的结束标记，进入到 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "after body"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 状态。"
				}
			]
		},
		{
			"ID": "20220316082024-szf0a3t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-szf0a3t"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "标记生成器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "最后传过来一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的结束标记, 进入到 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "after after body"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 的状态，表示解析过程到此结束。"
				}
			]
		},
		{
			"ID": "20220316082024-2hwclm1",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220316082024-2hwclm1"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "##### "
				},
				{
					"Type": "NodeText",
					"Data": "容错机制"
				}
			]
		},
		{
			"ID": "20220316082024-ocmn8a9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ocmn8a9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "讲到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTML5"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "规范，就不得不说它强大的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "宽容策略"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 容错能力非常强，虽然大家褒贬不一，不过我想作为一名资深的前端工程师，有必要知道"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTML Parser"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "在容错方面做了哪些事情。"
				}
			]
		},
		{
			"ID": "20220316082024-i21szfk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-i21szfk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来是 WebKit 中一些经典的容错示例，发现有其他的也欢迎来补充。"
				}
			]
		},
		{
			"ID": "20220316082024-4qqlvpc",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-4qqlvpc"
			},
			"Children": [
				{
					"ID": "20220316082024-2kj2e0c",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-2kj2e0c"
					},
					"Children": [
						{
							"ID": "20220316082024-05g4krv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-05g4krv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 \u003c/br\u003e 而不是 \u003c br\u003e"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-mlaxm3o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-mlaxm3o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "if (t-\u003eisCloseTag(brTag) \u0026\u0026 m_document-\u003einCompatMode()) {\n  reportError(MalformedBRError);\n  t-\u003ebeginTag = true;\n}\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-qxmwnna",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-qxmwnna"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全部换为 \u003cbr\u003e 的形式。"
				}
			]
		},
		{
			"ID": "20220316082024-4nky20o",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 2,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "Mg==",
				"Num": 2
			},
			"Properties": {
				"id": "20220316082024-4nky20o"
			},
			"Children": [
				{
					"ID": "20220316082024-80a5mjn",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-80a5mjn"
					},
					"Children": [
						{
							"ID": "20220316082024-ntd8wwz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-ntd8wwz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "表格离散"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-ugrrfgt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-ugrrfgt"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003ctable\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\u003ctd\u003einner table\u003c/td\u003e\u003c/tr\u003e\n  \u003c/table\u003e\n  \u003ctr\u003e\u003ctd\u003eouter table\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-3dwox0m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-3dwox0m"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "WebKit"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "会自动转换为:"
				}
			]
		},
		{
			"ID": "20220316082024-ieuvi8s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-ieuvi8s"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003ctable\u003e\n    \u003ctr\u003e\u003ctd\u003eouter table\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\u003ctable\u003e\n    \u003ctr\u003e\u003ctd\u003einner table\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-t8c8zmd",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 3,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "Mw==",
				"Num": 3
			},
			"Properties": {
				"id": "20220316082024-t8c8zmd"
			},
			"Children": [
				{
					"ID": "20220316082024-sfe375k",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-sfe375k"
					},
					"Children": [
						{
							"ID": "20220316082024-x3av3dp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-x3av3dp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "表单元素嵌套"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-thefop9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-thefop9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这时候直接忽略里面的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-n7ixdc8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-n7ixdc8"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "样式计算"
				}
			]
		},
		{
			"ID": "20220316082024-7mqc5oa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-7mqc5oa"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于 CSS 样式，它的来源一般是三种:"
				}
			]
		},
		{
			"ID": "20220316082024-0xlp9wv",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-0xlp9wv"
			},
			"Children": [
				{
					"ID": "20220316082024-p8fmjj5",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-p8fmjj5"
					},
					"Children": [
						{
							"ID": "20220316082024-995urmv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-995urmv"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "link 标签引用"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-31r3ezb",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-31r3ezb"
					},
					"Children": [
						{
							"ID": "20220316082024-wjogr34",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-wjogr34"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "style 标签中的样式"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-p9e4uu2",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-p9e4uu2"
					},
					"Children": [
						{
							"ID": "20220316082024-m7d5dtv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-m7d5dtv"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "元素的内嵌 style 属性"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-07ve9s7",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-07ve9s7"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "格式化样式表"
				}
			]
		},
		{
			"ID": "20220316082024-vj4cvft",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vj4cvft"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，浏览器是无法直接识别 CSS 样式文本的，因此渲染引擎接收到 CSS 文本之后第一件事情就是将其转化为一个结构化的对象，即 styleSheets。"
				}
			]
		},
		{
			"ID": "20220316082024-ccnl4ea",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ccnl4ea"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个格式化的过程过于复杂，而且对于不同的浏览器会有不同的优化策略，这里就不展开了。"
				}
			]
		},
		{
			"ID": "20220316082024-h3x8m7z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-h3x8m7z"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在浏览器控制台能够通过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "document.styleSheets"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来查看这个最终的结构。当然，这个结构包含了以上三种 CSS 来源，为后面的样式操作提供了基础。"
				}
			]
		},
		{
			"ID": "20220316082024-d4bwzsy",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-d4bwzsy"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "标准化样式属性"
				}
			]
		},
		{
			"ID": "20220316082024-axpku3p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-axpku3p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有一些 CSS 样式的数值并不容易被渲染引擎所理解，因此需要在计算样式之前将它们标准化，如"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "em"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "-\u003e"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "px"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ","
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "red"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "-\u003e"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "#ff0000"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ","
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "bold"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "-\u003e"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "700"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "等等。"
				}
			]
		},
		{
			"ID": "20220316082024-u3cnr0g",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-u3cnr0g"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "计算每个节点的具体样式"
				}
			]
		},
		{
			"ID": "20220316082024-68h9iuj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-68h9iuj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "样式已经被"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "格式化"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "标准化"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 接下来就可以计算每个节点的具体样式信息了。"
				}
			]
		},
		{
			"ID": "20220316082024-37bpqng",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-37bpqng"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实计算的方式也并不复杂，主要就是两个规则: "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "继承"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "层叠"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-lmwtzti",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-lmwtzti"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每个子节点都会默认继承父节点的样式属性，如果父节点中没有找到，就会采用浏览器默认样式，也叫"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "UserAgent样式"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这就是继承规则，非常容易理解。"
				}
			]
		},
		{
			"ID": "20220316082024-a8wgglr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-a8wgglr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后是层叠规则，CSS 最大的特点在于它的层叠性，也就是最终的样式取决于各个属性共同作用的效果，甚至有很多诡异的层叠现象，看过《CSS 世界》的同学应该对此深有体会，具体的层叠规则属于深入 CSS 语言的范畴，这里就不过多介绍了。"
				}
			]
		},
		{
			"ID": "20220316082024-wz8cy0r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wz8cy0r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不过值得注意的是，在计算完样式之后，所有的样式值会被挂在到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "window.getComputedStyle"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "当中，也就是可以通过 JS 来获取计算后的样式，非常方便。"
				}
			]
		},
		{
			"ID": "20220316082024-uzgqfxs",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-uzgqfxs"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "生成布局树"
				}
			]
		},
		{
			"ID": "20220316082024-yoqyfyt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yoqyfyt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在已经生成了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM样式"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，接下来要做的就是通过浏览器的布局系统"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "确定元素的位置"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，也就是要生成一棵"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "布局树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "(Layout Tree)。"
				}
			]
		},
		{
			"ID": "20220316082024-wy3ta4l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wy3ta4l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "布局树生成的大致工作如下:"
				}
			]
		},
		{
			"ID": "20220316082024-bn4lxt5",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-bn4lxt5"
			},
			"Children": [
				{
					"ID": "20220316082024-yezfs1u",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-yezfs1u"
					},
					"Children": [
						{
							"ID": "20220316082024-silah3s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-silah3s"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "遍历生成的 DOM 树节点，并把他们添加到"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "布局树中"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-ex1glly",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-ex1glly"
					},
					"Children": [
						{
							"ID": "20220316082024-k0k266g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-k0k266g"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算布局树节点的坐标位置。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-rwtw5tt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-rwtw5tt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "值得注意的是，这棵布局树值包含可见元素，对于 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "head"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "标签和设置了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "display: none"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的元素，将不会被放入其中。"
				}
			]
		},
		{
			"ID": "20220316082024-hmpdbp3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-hmpdbp3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有人说首先会生成"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Render Tree"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，也就是渲染树，其实这还是 16 年之前的事情，现在 Chrome 团队已经做了大量的重构，已经没有生成"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Render Tree"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的过程了。而布局树的信息已经非常完善，完全拥有"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Render Tree"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的功能。"
				}
			]
		},
		{
			"ID": "20220316082024-clvjkpj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-clvjkpj"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "之所以不讲布局的细节，是因为它过于复杂，一一介绍会显得文章过于臃肿，不过大部分情况下我们只需要知道它所做的工作"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "是什么"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "即可，如果想深入其中的原理，知道它是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "如何来做的"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，我强烈推荐你去读一读人人 FED 团队的文章"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "从 Chrome 源码看浏览器如何 layout 布局"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fwww.rrfed.com%2F2017%2F02%2F26%2Fchrome-layout%2F"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://www.rrfed.com/2017/02/26/chrome-layout/"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")。"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-hk3qf2x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-hk3qf2x"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220316082024-otcrk86",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-otcrk86"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "梳理一下这一节的主要脉络:"
				}
			]
		},
		{
			"ID": "20220316082024-21u6aoj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-21u6aoj"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f080b2f718e4ad~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-otidwkl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-otidwkl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 5 篇: 说一说从输入 URL 到页面呈现发生了什么？——渲染过程篇"
				}
			]
		},
		{
			"ID": "20220316082024-y9zramp",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-y9zramp"
			}
		},
		{
			"ID": "20220316082024-yrdmng8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yrdmng8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上一节介绍了浏览器"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "解析"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的过程, 其中包含"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "构建DOM"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "样式计算"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "构建布局树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-6uwyswk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6uwyswk"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来就来拆解下一个过程——"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "渲染"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。分为以下几个步骤:"
				}
			]
		},
		{
			"ID": "20220316082024-a58sj9x",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-a58sj9x"
			},
			"Children": [
				{
					"ID": "20220316082024-hxceorf",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-hxceorf"
					},
					"Children": [
						{
							"ID": "20220316082024-kaxatap",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-kaxatap"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "建立"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "图层树"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "("
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Layer Tree"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ")"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-nsv39x5",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-nsv39x5"
					},
					"Children": [
						{
							"ID": "20220316082024-obfuh7u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-obfuh7u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "生成"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "绘制列表"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-s7sh7q0",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-s7sh7q0"
					},
					"Children": [
						{
							"ID": "20220316082024-9ouxfmu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-9ouxfmu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "生成"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "图块"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "并"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "栅格化"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-2auv45z",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-2auv45z"
					},
					"Children": [
						{
							"ID": "20220316082024-kljxzd3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-kljxzd3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "显示器显示内容"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-4x02j0h",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-4x02j0h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "一、建图层树"
				}
			]
		},
		{
			"ID": "20220316082024-qlbeysn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-qlbeysn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果你觉得现在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DOM节点"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "也有了，样式和位置信息也都有了，可以开始绘制页面了，那你就错了。"
				}
			]
		},
		{
			"ID": "20220316082024-wyh2088",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wyh2088"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为你考虑掉了另外一些复杂的场景，比如 3D 动画如何呈现出变换效果，当元素含有层叠上下文时如何控制显示和隐藏等等。"
				}
			]
		},
		{
			"ID": "20220316082024-87lokqt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-87lokqt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了解决如上所述的问题，浏览器在构建完"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "布局树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "之后，还会对特定的节点进行分层，构建一棵"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "图层树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "("
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Layer Tree"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ")。"
				}
			]
		},
		{
			"ID": "20220316082024-7hp63s5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-7hp63s5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那这棵图层树是根据什么来构建的呢？"
				}
			]
		},
		{
			"ID": "20220316082024-6o48xj9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6o48xj9"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一般情况下，节点的图层会默认属于父亲节点的图层 (这些图层也称为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "合成层"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ")。那什么时候会提升为一个单独的合成层呢？"
				}
			]
		},
		{
			"ID": "20220316082024-d9z868c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-d9z868c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "有两种情况需要分别讨论，一种是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "显式合成"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，一种是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "隐式合成"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-nj9h0zd",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-nj9h0zd"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "显式合成"
				}
			]
		},
		{
			"ID": "20220316082024-90e7fy6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-90e7fy6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下面是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "显式合成"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的情况:"
				}
			]
		},
		{
			"ID": "20220316082024-wfs1cxo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wfs1cxo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、 拥有"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "层叠上下文"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的节点。"
				}
			]
		},
		{
			"ID": "20220316082024-xljksv2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-xljksv2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "层叠上下文也基本上是有一些特定的 CSS 属性创建的，一般有以下情况:"
				}
			]
		},
		{
			"ID": "20220316082024-qv7tgvo",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-qv7tgvo"
			},
			"Children": [
				{
					"ID": "20220316082024-0z5jr2d",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-0z5jr2d"
					},
					"Children": [
						{
							"ID": "20220316082024-4ciwbzc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-4ciwbzc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "HTML 根元素本身就具有层叠上下文。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-4o3w3vr",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-4o3w3vr"
					},
					"Children": [
						{
							"ID": "20220316082024-x6ifikr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-x6ifikr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "普通元素设置 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "position 不为 static"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 并且"
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "设置了 z-index 属性"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，会产生层叠上下文。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-ibe42x6",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-ibe42x6"
					},
					"Children": [
						{
							"ID": "20220316082024-4z95asy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-4z95asy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "元素的 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "opacity"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 值不是 1"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-4d9lw98",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220316082024-4d9lw98"
					},
					"Children": [
						{
							"ID": "20220316082024-h9xoosw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-h9xoosw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "元素的 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "transform"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 值不是 none"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-inkt6vs",
					"Type": "NodeListItem",
					"Data": "5",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 5,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NQ==",
						"Num": 5
					},
					"Properties": {
						"id": "20220316082024-inkt6vs"
					},
					"Children": [
						{
							"ID": "20220316082024-u0kh8nc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-u0kh8nc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "元素的 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "filter"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 值不是 none"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-ap66939",
					"Type": "NodeListItem",
					"Data": "6",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 6,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Ng==",
						"Num": 6
					},
					"Properties": {
						"id": "20220316082024-ap66939"
					},
					"Children": [
						{
							"ID": "20220316082024-wm53y48",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-wm53y48"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "元素的 "
								},
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "isolation"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 值是 isolate"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-o4g8gys",
					"Type": "NodeListItem",
					"Data": "7",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 7,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Nw==",
						"Num": 7
					},
					"Properties": {
						"id": "20220316082024-o4g8gys"
					},
					"Children": [
						{
							"ID": "20220316082024-e2eguxz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-e2eguxz"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "will-change"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 指定的属性值为上面任意一个。(will-change 的作用后面会详细介绍)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-qbbst0p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-qbbst0p"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、需要"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "剪裁"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的地方。"
				}
			]
		},
		{
			"ID": "20220316082024-hgkdlxv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-hgkdlxv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如一个 div，你只给他设置 100 * 100 像素的大小，而你在里面放了非常多的文字，那么超出的文字部分就需要被剪裁。当然如果出现了滚动条，那么滚动条会被单独提升为一个图层。"
				}
			]
		},
		{
			"ID": "20220316082024-pfui0w7",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-pfui0w7"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "隐式合成"
				}
			]
		},
		{
			"ID": "20220316082024-65vvzzd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-65vvzzd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "隐式合成"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，简单来说就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "层叠等级低"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的节点被提升为单独的图层之后，那么"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "所有层叠等级比它高"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的节点"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "都会"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "成为一个单独的图层。"
				}
			]
		},
		{
			"ID": "20220316082024-ntzvs79",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ntzvs79"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个隐式合成其实隐藏着巨大的风险，如果在一个大型应用中，当一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "z-index"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "比较低的元素被提升为单独图层之后，层叠在它上面的的元素统统都会被提升为单独的图层，可能会增加上千个图层，大大增加内存的压力，甚至直接让页面崩溃。这就是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "层爆炸"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的原理。这里有一个具体的例子，"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "点击打开"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000014520786"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://segmentfault.com/a/1190000014520786"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")。"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-dql74ip",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-dql74ip"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "值得注意的是，当需要"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "repaint"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "时，只需要"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "repaint"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "本身，而不会影响到其他的层。"
				}
			]
		},
		{
			"ID": "20220316082024-8v7a094",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-8v7a094"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "二、生成绘制列表"
				}
			]
		},
		{
			"ID": "20220316082024-im2k9gs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-im2k9gs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来渲染引擎会将图层的绘制拆分成一个个绘制指令，比如先画背景、再描绘边框...... 然后将这些指令按顺序组合成一个待绘制列表，相当于给后面的绘制操作做了一波计划。"
				}
			]
		},
		{
			"ID": "20220316082024-k2c34jy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-k2c34jy"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里我以百度首页为例，大家可以在 Chrome 开发者工具中在设置栏中展开 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "more tools"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 然后选择"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Layers"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "面板，就能看到下面的绘制列表:"
				}
			]
		},
		{
			"ID": "20220316082024-wphjv6s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wphjv6s"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f080b57cdb8f39~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-l49qrzz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-l49qrzz"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "三、生成图块和生成位图"
				}
			]
		},
		{
			"ID": "20220316082024-7femxza",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-7femxza"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在开始绘制操作，实际上在渲染进程中绘制操作是由专门的线程来完成的，这个线程叫"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "合成线程"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-ic8665e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ic8665e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "绘制列表准备好了之后，渲染进程的主线程会给"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "合成线程"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "发送"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "commit"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "消息，把绘制列表提交给合成线程。接下来就是合成线程一展宏图的时候啦。"
				}
			]
		},
		{
			"ID": "20220316082024-3ytwnov",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-3ytwnov"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，考虑到视口就这么大，当页面非常大的时候，要滑很长时间才能滑到底，如果要一口气全部绘制出来是相当浪费性能的。因此，合成线程要做的第一件事情就是将图层"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "分块"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这些块的大小一般不会特别大，通常是 256 * 256 或者 512 * 512 这个规格。这样可以大大加速页面的首屏展示。"
				}
			]
		},
		{
			"ID": "20220316082024-9w8rkq3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-9w8rkq3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为后面图块数据要进入 GPU 内存，考虑到浏览器内存上传到 GPU 内存的操作比较慢，即使是绘制一部分图块，也可能会耗费大量时间。针对这个问题，Chrome 采用了一个策略: 在首次合成图块时只采用一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "低分辨率"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的图片，这样首屏展示的时候只是展示出低分辨率的图片，这个时候继续进行合成操作，当正常的图块内容绘制完毕后，会将当前低分辨率的图块内容替换。这也是 Chrome 底层优化首屏加载速度的一个手段。"
				}
			]
		},
		{
			"ID": "20220316082024-2yn9ziq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-2yn9ziq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "顺便提醒一点，渲染进程中专门维护了一个"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "栅格化线程池"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，专门负责把"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "图块"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "转换为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "位图数据"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-r9mf45m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-r9mf45m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后合成线程会选择视口附近的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "图块"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，把它交给"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "栅格化线程池"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "生成位图。"
				}
			]
		},
		{
			"ID": "20220316082024-kn1pze6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-kn1pze6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "生成位图的过程实际上都会使用 GPU 进行加速，生成的位图最后发送给"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "合成线程"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-wj5vhz5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-wj5vhz5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "四、显示器显示内容"
				}
			]
		},
		{
			"ID": "20220316082024-18wruu6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-18wruu6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "栅格化操作完成后，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "合成线程"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "会生成一个绘制命令，即 \"DrawQuad\"，并发送给浏览器进程。"
				}
			]
		},
		{
			"ID": "20220316082024-hztfzau",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-hztfzau"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器进程中的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "viz组件"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "接收到这个命令，根据这个命令，把页面内容绘制到内存，也就是生成了页面，然后把这部分内存发送给显卡。为什么发给显卡呢？我想有必要先聊一聊显示器显示图像的原理。"
				}
			]
		},
		{
			"ID": "20220316082024-ha3kt6n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ha3kt6n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "无论是 PC 显示器还是手机屏幕，都有一个固定的刷新频率，一般是 60 HZ，即 60 帧，也就是一秒更新 60 张图片，一张图片停留的时间约为 16.7 ms。而每次更新的图片都来自显卡的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "前缓冲区"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。而显卡接收到浏览器进程传来的页面后，会合成相应的图像，并将图像保存到"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "后缓冲区"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，然后系统自动将"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "前缓冲区"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "后缓冲区"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "对换位置，如此循环更新。"
				}
			]
		},
		{
			"ID": "20220316082024-zd44psv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zd44psv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "看到这里你也就是明白，当某个动画大量占用内存的时候，浏览器生成图像的时候会变慢，图像传送给显卡就会不及时，而显示器还是以不变的频率刷新，因此会出现卡顿，也就是明显的掉帧现象。"
				}
			]
		},
		{
			"ID": "20220316082024-qo7a3jc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-qo7a3jc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220316082024-tvccg09",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-tvccg09"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "到这里，我们算是把整个过程给走通了，现在重新来梳理一下页面渲染的流程。"
				}
			]
		},
		{
			"ID": "20220316082024-r9tmvio",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-r9tmvio"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f080b7b8926b7f~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-g7p1pbm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-g7p1pbm"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 6 篇: 谈谈你对重绘和回流的理解。"
				}
			]
		},
		{
			"ID": "20220316082024-n4j1gz0",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-n4j1gz0"
			}
		},
		{
			"ID": "20220316082024-e6tnfc3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-e6tnfc3"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们首先来回顾一下"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "渲染流水线"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的流程:"
				}
			]
		},
		{
			"ID": "20220316082024-4iw3ru0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-4iw3ru0"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f080ba7fa706eb~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-enef916",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-enef916"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来，我们将来以此为依据来介绍重绘和回流，以及让更新视图的另外一种方式——合成。"
				}
			]
		},
		{
			"ID": "20220316082024-iqmghb3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-iqmghb3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "回流"
				}
			]
		},
		{
			"ID": "20220316082024-0cfocl1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-0cfocl1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先介绍"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "回流"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "回流"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "也叫"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "重排"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-rtfptx5",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-rtfptx5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "触发条件"
				}
			]
		},
		{
			"ID": "20220316082024-nbsobjb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-nbsobjb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单来说，就是当我们对 DOM 结构的修改引发 DOM 几何尺寸变化的时候，会发生"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "回流"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的过程。"
				}
			]
		},
		{
			"ID": "20220316082024-jew6lul",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-jew6lul"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体一点，有以下的操作会触发回流:"
				}
			]
		},
		{
			"ID": "20220316082024-o3mm75e",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-o3mm75e"
			},
			"Children": [
				{
					"ID": "20220316082024-yragwnt",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-yragwnt"
					},
					"Children": [
						{
							"ID": "20220316082024-9dfnfbh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-9dfnfbh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个 DOM 元素的几何属性变化，常见的几何属性有"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "width"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "height"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "padding"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "margin"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "left"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "top"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "border"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 等等, 这个很好理解。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-riyipgi",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-riyipgi"
					},
					"Children": [
						{
							"ID": "20220316082024-h1qezhu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-h1qezhu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使 DOM 节点发生"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "增减"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "或者"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "移动"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-2wtwmtb",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-2wtwmtb"
					},
					"Children": [
						{
							"ID": "20220316082024-8xgbi0d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-8xgbi0d"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "读写 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "offset"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "族、"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "scroll"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "族和"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "client"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "族属性的时候，浏览器为了获取这些值，需要进行回流操作。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-66ynqk1",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220316082024-66ynqk1"
					},
					"Children": [
						{
							"ID": "20220316082024-x6knhyp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-x6knhyp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "调用 "
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "window.getComputedStyle"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 方法。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-7tcpnsl",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-7tcpnsl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "回流过程"
				}
			]
		},
		{
			"ID": "20220316082024-ul3wp8r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ul3wp8r"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "依照上面的渲染流水线，触发回流的时候，如果 DOM 结构发生改变，则重新渲染 DOM 树，然后将后面的流程 (包括主线程之外的任务) 全部走一遍。"
				}
			]
		},
		{
			"ID": "20220316082024-o9fpzi2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-o9fpzi2"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f0809e65b3d2fc~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-zqbrtio",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zqbrtio"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相当于将解析和合成的过程重新又走了一篇，开销是非常大的。"
				}
			]
		},
		{
			"ID": "20220316082024-v2tmyvt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-v2tmyvt"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "重绘"
				}
			]
		},
		{
			"ID": "20220316082024-ho7qqhi",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-ho7qqhi"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "触发条件"
				}
			]
		},
		{
			"ID": "20220316082024-rziqn7c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-rziqn7c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当 DOM 的修改导致了样式的变化，并且没有影响几何属性的时候，会导致"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "重绘"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "("
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "repaint"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ")。"
				}
			]
		},
		{
			"ID": "20220316082024-td2of9h",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-td2of9h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "重绘过程"
				}
			]
		},
		{
			"ID": "20220316082024-vnak30t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vnak30t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于没有导致 DOM 几何属性的变化，因此元素的位置信息不需要更新，从而省去布局的过程。流程如下："
				}
			]
		},
		{
			"ID": "20220316082024-1q16sxi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-1q16sxi"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f080a26aa222d4~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-atwz4wl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-atwz4wl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "跳过了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "生成布局树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "建图层树"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的阶段，直接生成绘制列表，然后继续进行分块、生成位图等后面一系列操作。"
				}
			]
		},
		{
			"ID": "20220316082024-tr68tli",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-tr68tli"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到，重绘不一定导致回流，但回流一定发生了重绘。"
				}
			]
		},
		{
			"ID": "20220316082024-szja4ev",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-szja4ev"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "合成"
				}
			]
		},
		{
			"ID": "20220316082024-i1oos1h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-i1oos1h"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "还有一种情况，是直接合成。比如利用 CSS3 的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "transform"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "opacity"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "filter"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这些属性就可以实现合成的效果，也就是大家常说的 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "GPU 加速"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-dicbetc",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-dicbetc"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "GPU 加速的原因"
				}
			]
		},
		{
			"ID": "20220316082024-ujmynsq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ujmynsq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在合成的情况下，会直接跳过布局和绘制流程，直接进入"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非主线程"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "处理的部分，即直接交给"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "合成线程"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "处理。交给它处理有两大好处:"
				}
			]
		},
		{
			"ID": "20220316082024-egvatrc",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-egvatrc"
			},
			"Children": [
				{
					"ID": "20220316082024-u6nb8m5",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-u6nb8m5"
					},
					"Children": [
						{
							"ID": "20220316082024-l4wlkop",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-l4wlkop"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "能够充分发挥"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "GPU"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的优势。合成线程生成位图的过程中会调用线程池，并在其中使用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "GPU"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "进行加速生成，而 GPU 是擅长处理位图数据的。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-fywqlan",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-fywqlan"
					},
					"Children": [
						{
							"ID": "20220316082024-62gqazu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-62gqazu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "没有占用主线程的资源，即使主线程卡住了，效果依然能够流畅地展示。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-m7kxou5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-m7kxou5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "实践意义"
				}
			]
		},
		{
			"ID": "20220316082024-j6xq35v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-j6xq35v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "知道上面的原理之后，对于开发过程有什么指导意义呢？"
				}
			]
		},
		{
			"ID": "20220316082024-sspxuzo",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-sspxuzo"
			},
			"Children": [
				{
					"ID": "20220316082024-8km46hs",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-8km46hs"
					},
					"Children": [
						{
							"ID": "20220316082024-7t2c3rq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-7t2c3rq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "避免频繁使用 style，而是采用修改"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "class"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的方式。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-n690i4z",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-n690i4z"
					},
					"Children": [
						{
							"ID": "20220316082024-e9dnacq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-e9dnacq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "createDocumentFragment"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "进行批量的 DOM 操作。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-s8syh2d",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-s8syh2d"
					},
					"Children": [
						{
							"ID": "20220316082024-27cfpb1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-27cfpb1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于 resize、scroll 等进行防抖 / 节流处理。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-9vfug26",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220316082024-9vfug26"
					},
					"Children": [
						{
							"ID": "20220316082024-o8oegqb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-o8oegqb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "添加 will-change: tranform ，让渲染引擎为其单独实现一个图层，当这些变换发生时，仅仅只是利用合成线程去处理这些变换，而不牵扯到主线程，大大提高渲染效率。当然这个变化不限于"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "tranform"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 任何可以实现合成效果的 CSS 属性都能用"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "will-change"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "来声明。这里有一个实际的例子，一行"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "will-change: tranform"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "拯救一个项目，"
								},
								{
									"Type": "NodeLink",
									"Children": [
										{
											"Type": "NodeOpenBracket",
											"Data": "["
										},
										{
											"Type": "NodeLinkText",
											"Data": "点击直达"
										},
										{
											"Type": "NodeCloseBracket",
											"Data": "]"
										},
										{
											"Type": "NodeOpenParen",
											"Data": "("
										},
										{
											"Type": "NodeLinkDest",
											"Data": "https://juejin.cn/post/6844903966573068301"
										},
										{
											"Type": "NodeLinkSpace",
											"Data": " "
										},
										{
											"Type": "NodeLinkTitle",
											"Data": "https://juejin.cn/post/6844903966573068301"
										},
										{
											"Type": "NodeCloseParen",
											"Data": ")。"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-oayromq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-oayromq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 7 篇: 能不能说一说 XSS 攻击？"
				}
			]
		},
		{
			"ID": "20220316082024-aa59yas",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-aa59yas"
			}
		},
		{
			"ID": "20220316082024-f7jymnv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-f7jymnv"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "什么是 XSS 攻击？"
				}
			]
		},
		{
			"ID": "20220316082024-5jdegp0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-5jdegp0"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "XSS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 全称是 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cross Site Scripting"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "(即"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "跨站脚本"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ")，为了和 CSS 区分，故叫它"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "XSS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。XSS 攻击是指浏览器中执行恶意脚本 (无论是跨域还是同域)，从而拿到用户的信息并进行操作。"
				}
			]
		},
		{
			"ID": "20220316082024-sqq4wi8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-sqq4wi8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这些操作一般可以完成下面这些事情:"
				}
			]
		},
		{
			"ID": "20220316082024-7697o9j",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-7697o9j"
			},
			"Children": [
				{
					"ID": "20220316082024-e7lipyx",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-e7lipyx"
					},
					"Children": [
						{
							"ID": "20220316082024-ypfdr2b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-ypfdr2b"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "窃取"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Cookie"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-9mrlb49",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-9mrlb49"
					},
					"Children": [
						{
							"ID": "20220316082024-8ssk38u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-8ssk38u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "监听用户行为，比如输入账号密码后直接发送到黑客服务器。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-io8p9aq",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-io8p9aq"
					},
					"Children": [
						{
							"ID": "20220316082024-4qdsq54",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-4qdsq54"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "修改 DOM 伪造登录表单。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-viai2gk",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220316082024-viai2gk"
					},
					"Children": [
						{
							"ID": "20220316082024-ublcbyn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-ublcbyn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在页面中生成浮窗广告。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-0891d5l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-0891d5l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通常情况，XSS 攻击的实现有三种方式——"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "存储型"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "反射型"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "文档型"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。原理都比较简单，先来一一介绍一下。"
				}
			]
		},
		{
			"ID": "20220316082024-h8fcqxe",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-h8fcqxe"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "存储型"
				}
			]
		},
		{
			"ID": "20220316082024-aq6obsr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-aq6obsr"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "存储型"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，顾名思义就是将恶意脚本存储了起来，确实，存储型的 XSS 将脚本存储到了服务端的数据库，然后在客户端执行这些脚本，从而达到攻击的效果。"
				}
			]
		},
		{
			"ID": "20220316082024-gvte5wi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-gvte5wi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常见的场景是留言评论区提交一段脚本代码，如果前后端没有做好转义的工作，那评论内容存到了数据库，在页面渲染过程中"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "直接执行"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 相当于执行一段未知逻辑的 JS 代码，是非常恐怖的。这就是存储型的 XSS 攻击。"
				}
			]
		},
		{
			"ID": "20220316082024-37c663h",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-37c663h"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "反射型"
				}
			]
		},
		{
			"ID": "20220316082024-4lvn361",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-4lvn361"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "反射型XSS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "指的是恶意脚本作为"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "网络请求的一部分"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-m45avjf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-m45avjf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比如我输入:"
				}
			]
		},
		{
			"ID": "20220316082024-mpsf1xm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-mpsf1xm"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "http://sanyuan.com?q=\u003cscript\u003ealert(\"你完蛋了\")\u003c/script\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-sxck41b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-sxck41b"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这杨，在服务器端会拿到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "q"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "参数, 然后将内容返回给浏览器端，浏览器将这些内容作为 HTML 的一部分解析，发现是一个脚本，直接执行，这样就被攻击了。"
				}
			]
		},
		{
			"ID": "20220316082024-bmiudnt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-bmiudnt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "之所以叫它"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "反射型"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 是因为恶意脚本是通过作为网络请求的参数，经过服务器，然后再反射到 HTML 文档中，执行解析。和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "存储型"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "不一样的是，服务器并不会存储这些恶意脚本。"
				}
			]
		},
		{
			"ID": "20220316082024-abmfug3",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-abmfug3"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "文档型"
				}
			]
		},
		{
			"ID": "20220316082024-572n4fz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-572n4fz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文档型的 XSS 攻击并不会经过服务端，而是作为中间人的角色，在数据传输过程劫持到网络数据包，然后"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "修改里面的 html 文档"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "！"
				}
			]
		},
		{
			"ID": "20220316082024-2f8s5at",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-2f8s5at"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样的劫持方式包括"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "WIFI路由器劫持"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "本地恶意软件"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "等。"
				}
			]
		},
		{
			"ID": "20220316082024-ve25n9l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-ve25n9l"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "防范措施"
				}
			]
		},
		{
			"ID": "20220316082024-jsp59pf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-jsp59pf"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "明白了三种"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "XSS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "攻击的原理，我们能发现一个共同点: 都是让恶意脚本直接能在浏览器中执行。"
				}
			]
		},
		{
			"ID": "20220316082024-kwuyjdw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-kwuyjdw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那么要防范它，就是要避免这些脚本代码的执行。"
				}
			]
		},
		{
			"ID": "20220316082024-vivo2at",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vivo2at"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了完成这一点，必须做到"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "一个信念，两个利用"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-l8bxc4l",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-l8bxc4l"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "一个信念"
				}
			]
		},
		{
			"ID": "20220316082024-xdh7rv5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-xdh7rv5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "千万不要相信任何用户的输入！"
				}
			]
		},
		{
			"ID": "20220316082024-mqh7bj6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-mqh7bj6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "无论是在前端和服务端，都要对用户的输入进行"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "转码"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "或者"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "过滤"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-l0tapmu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-l0tapmu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如:"
				}
			]
		},
		{
			"ID": "20220316082024-afjvqow",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-afjvqow"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cscript\u003ealert('你完蛋了')\u003c/script\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-ljw9tot",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ljw9tot"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "转码后变为:"
				}
			]
		},
		{
			"ID": "20220316082024-jtq5p5i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-jtq5p5i"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cscript\u003ealert('你完蛋了')\u003c/script\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-qq0e3sd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-qq0e3sd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样的代码在 html 解析的过程中是无法执行的。"
				}
			]
		},
		{
			"ID": "20220316082024-kt81zpq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-kt81zpq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然也可以利用关键词过滤的方式，将 script 标签给删除。那么现在的内容只剩下:"
				}
			]
		},
		{
			"ID": "20220316082024-7voz2nj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-7voz2nj"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-93ijmeq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-93ijmeq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "什么也没有了:）"
				}
			]
		},
		{
			"ID": "20220316082024-jubjsia",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-jubjsia"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "利用 CSP"
				}
			]
		},
		{
			"ID": "20220316082024-aryrkag",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-aryrkag"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CSP，即浏览器中的内容安全策略，它的核心思想就是服务器决定浏览器加载哪些资源，具体来说可以完成以下功能:"
				}
			]
		},
		{
			"ID": "20220316082024-uwvqzy8",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-uwvqzy8"
			},
			"Children": [
				{
					"ID": "20220316082024-jrlhi2e",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-jrlhi2e"
					},
					"Children": [
						{
							"ID": "20220316082024-px2ugte",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-px2ugte"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "限制其他域下的资源加载。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-06sz750",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-06sz750"
					},
					"Children": [
						{
							"ID": "20220316082024-gtsxh6e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-gtsxh6e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "禁止向其它域提交数据。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-w0hxkbe",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-w0hxkbe"
					},
					"Children": [
						{
							"ID": "20220316082024-prztfh9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-prztfh9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "提供上报机制，能帮助我们及时发现 XSS 攻击。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-p9fe3qy",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-p9fe3qy"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "利用 HttpOnly"
				}
			]
		},
		{
			"ID": "20220316082024-i20m6po",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-i20m6po"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "很多 XSS 攻击脚本都是用来窃取 Cookie, 而设置 Cookie 的 HttpOnly 属性后，JavaScript 便无法读取 Cookie 的值。这样也能很好的防范 XSS 攻击。"
				}
			]
		},
		{
			"ID": "20220316082024-308lg25",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-308lg25"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220316082024-dijyh9g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-dijyh9g"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "XSS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 攻击是指浏览器中执行恶意脚本, 然后拿到用户的信息进行操作。主要分为"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "存储型"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "反射型"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "文档型"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。防范的措施包括:"
				}
			]
		},
		{
			"ID": "20220316082024-tp7u48b",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-tp7u48b"
			},
			"Children": [
				{
					"ID": "20220316082024-w6cx101",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-w6cx101"
					},
					"Children": [
						{
							"ID": "20220316082024-mhr2j9z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-mhr2j9z"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个信念: 不要相信用户的输入，对输入内容转码或者过滤，让其不可执行。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-kifrzwl",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-kifrzwl"
					},
					"Children": [
						{
							"ID": "20220316082024-lte3nlb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-lte3nlb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "两个利用: 利用 CSP，利用 Cookie 的 HttpOnly 属性。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-3xep4zt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-3xep4zt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 8 篇: 能不能说一说 CSRF 攻击？"
				}
			]
		},
		{
			"ID": "20220316082024-m9wqwe1",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-m9wqwe1"
			}
		},
		{
			"ID": "20220316082024-9mvahxy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-9mvahxy"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "什么是 CSRF 攻击？"
				}
			]
		},
		{
			"ID": "20220316082024-mzdd5fl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-mzdd5fl"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CSRF(Cross-site request forgery), 即跨站请求伪造，指的是黑客诱导用户点击链接，打开黑客的网站，然后黑客利用用户"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "目前的登录状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "发起跨站请求。"
				}
			]
		},
		{
			"ID": "20220316082024-pggb6yo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-pggb6yo"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "举个例子, 你在某个论坛点击了黑客精心挑选的小姐姐图片，你点击后，进入了一个新的页面。"
				}
			]
		},
		{
			"ID": "20220316082024-yhpb6dq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yhpb6dq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那么恭喜你，被攻击了:）"
				}
			]
		},
		{
			"ID": "20220316082024-erhmc9i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-erhmc9i"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "你可能会比较好奇，怎么突然就被攻击了呢？接下来我们就来拆解一下当你点击了链接之后，黑客在背后做了哪些事情。"
				}
			]
		},
		{
			"ID": "20220316082024-8672dlh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-8672dlh"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可能会做三样事情。列举如下："
				}
			]
		},
		{
			"ID": "20220316082024-xsbldk0",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-xsbldk0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "1. 自动发 GET 请求"
				}
			]
		},
		{
			"ID": "20220316082024-wkpcjty",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wkpcjty"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "黑客网页里面可能有一段这样的代码:"
				}
			]
		},
		{
			"ID": "20220316082024-kv2qhvl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-kv2qhvl"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cimg src=\"https://xxx.com/info?user=hhh\u0026count=100\"\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-p0h4431",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-p0h4431"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "进入页面后自动发送 get 请求，值得注意的是，这个请求会自动带上关于 xxx.com 的 cookie 信息 (这里是假定你已经在 xxx.com 中登录过)。"
				}
			]
		},
		{
			"ID": "20220316082024-47eu1uv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-47eu1uv"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假如服务器端没有相应的验证机制，它可能认为发请求的是一个正常的用户，因为携带了相应的 cookie，然后进行相应的各种操作，可以是转账汇款以及其他的恶意操作。"
				}
			]
		},
		{
			"ID": "20220316082024-1ednef4",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-1ednef4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "2. 自动发 POST 请求"
				}
			]
		},
		{
			"ID": "20220316082024-fv0qmxn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-fv0qmxn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "黑客可能自己填了一个表单，写了一段自动提交的脚本。"
				}
			]
		},
		{
			"ID": "20220316082024-z584k1b",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-z584k1b"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cform id='hacker-form' action=\"https://xxx.com/info\" method=\"POST\"\u003e\n  \u003cinput type=\"hidden\"  /\u003e\n  \u003cinput type=\"hidden\"  /\u003e\n\u003c/form\u003e\n\u003cscript\u003edocument.getElementById('hacker-form').submit();\u003c/script\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-59u4aep",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-59u4aep"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同样也会携带相应的用户 cookie 信息，让服务器误以为是一个正常的用户在操作，让各种恶意的操作变为可能。"
				}
			]
		},
		{
			"ID": "20220316082024-v536zl0",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-v536zl0"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "3. 诱导点击发送 GET 请求"
				}
			]
		},
		{
			"ID": "20220316082024-1b2h9tb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-1b2h9tb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在黑客的网站上，可能会放上一个链接，驱使你来点击:"
				}
			]
		},
		{
			"ID": "20220316082024-2bijfov",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-2bijfov"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003ca href=\"https://xxx/info?user=hhh\u0026count=100\" taget=\"_blank\"\u003e点击进入修仙世界\u003c/a\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-nprvloq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-nprvloq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "点击后，自动发送 get 请求，接下来和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "自动发 GET 请求"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "部分同理。"
				}
			]
		},
		{
			"ID": "20220316082024-frqgd4n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-frqgd4n"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CSRF"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "攻击的原理。和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "XSS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "攻击对比，CSRF 攻击并不需要将恶意代码注入用户当前页面的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "文档中，而是跳转到新的页面，利用服务器的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "验证漏洞"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "用户之前的登录状态"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来模拟用户进行操作。"
				}
			]
		},
		{
			"ID": "20220316082024-gqai4gl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-gqai4gl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "防范措施"
				}
			]
		},
		{
			"ID": "20220316082024-f87s7se",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-f87s7se"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "1. 利用 Cookie 的 SameSite 属性"
				}
			]
		},
		{
			"ID": "20220316082024-9csz58t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-9csz58t"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CSRF攻击"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中重要的一环就是自动发送目标站点下的 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cookie"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 然后就是这一份 Cookie 模拟了用户的身份。因此在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Cookie"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "上面下文章是防范的不二之选。"
				}
			]
		},
		{
			"ID": "20220316082024-lrvi2ix",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-lrvi2ix"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "恰好，在 Cookie 当中有一个关键的字段，可以对请求中 Cookie 的携带作一些限制，这个字段就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "SameSite"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-luvhual",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-luvhual"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "SameSite"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "可以设置为三个值，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Strict"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Lax"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "None"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-ci86z6p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ci86z6p"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "a."
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Strict"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "模式下，浏览器完全禁止第三方请求携带 Cookie。比如请求"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "sanyuan.com"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "网站只能在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "sanyuan.com"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "域名当中请求才能携带 Cookie，在其他网站请求都不能。"
				}
			]
		},
		{
			"ID": "20220316082024-gscfjal",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-gscfjal"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "b."
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Lax"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "模式，就宽松一点了，但是只能在 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "get 方法提交表单"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "况或者"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "a 标签发送 get 请求"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的情况下可以携带 Cookie，其他情况均不能。"
				}
			]
		},
		{
			"ID": "20220316082024-glgubjb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-glgubjb"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "c."
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "None"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "模式下，也就是默认模式，请求会自动携带上 Cookie。"
				}
			]
		},
		{
			"ID": "20220316082024-3a2834x",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-3a2834x"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "2. 验证来源站点"
				}
			]
		},
		{
			"ID": "20220316082024-5uzjaft",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-5uzjaft"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这就需要要用到请求头中的两个字段: "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Origin"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Referer"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-yrpckbe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yrpckbe"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中，"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Origin"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 只包含域名信息，而 "
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Referer"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 包含了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "具体"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的 URL 路径。"
				}
			]
		},
		{
			"ID": "20220316082024-2ghp2h2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-2ghp2h2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，这两者都是可以伪造的，通过 Ajax 中自定义请求头即可，安全性略差。"
				}
			]
		},
		{
			"ID": "20220316082024-5lo37g4",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-5lo37g4"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "3. CSRF Token"
				}
			]
		},
		{
			"ID": "20220316082024-825einh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-825einh"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Django"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "作为 Python 的一门后端框架，如果是用它开发过的同学就知道，在它的模板 (template) 中, 开发表单时，经常会附上这样一行代码:"
				}
			]
		},
		{
			"ID": "20220316082024-xmlmloc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-xmlmloc"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "{% csrf_token %}\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-yxfj1uc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yxfj1uc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CSRF Token"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的典型应用。那它的原理是怎样的呢？"
				}
			]
		},
		{
			"ID": "20220316082024-ah7hoh0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ah7hoh0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，浏览器向服务器发送请求时，服务器生成一个字符串，将其植入到返回的页面中。"
				}
			]
		},
		{
			"ID": "20220316082024-6h0lbhp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6h0lbhp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后浏览器如果要发送请求，就必须带上这个字符串，然后服务器来验证是否合法，如果不合法则不予响应。这个字符串也就是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CSRF Token"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，通常第三方站点无法拿到这个 token, 因此也就是被服务器给拒绝。"
				}
			]
		},
		{
			"ID": "20220316082024-i4zfbrd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-i4zfbrd"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220316082024-ozp9rmd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ozp9rmd"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CSRF(Cross-site request forgery), 即跨站请求伪造，指的是黑客诱导用户点击链接，打开黑客的网站，然后黑客利用用户目前的登录状态发起跨站请求。"
				}
			]
		},
		{
			"ID": "20220316082024-83v66t4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-83v66t4"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CSRF"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "攻击一般会有三种方式:"
				}
			]
		},
		{
			"ID": "20220316082024-8rq9r85",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 4,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20220316082024-8rq9r85"
			},
			"Children": [
				{
					"ID": "20220316082024-bcgd01j",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-bcgd01j"
					},
					"Children": [
						{
							"ID": "20220316082024-2g66hxs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-2g66hxs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自动 GET 请求"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-je4pmif",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-je4pmif"
					},
					"Children": [
						{
							"ID": "20220316082024-q9jq5zh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-q9jq5zh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "自动 POST 请求"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-o1kxxry",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 4,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20220316082024-o1kxxry"
					},
					"Children": [
						{
							"ID": "20220316082024-8drx59v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-8drx59v"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "诱导点击发送 GET 请求。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-2br9y0w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-2br9y0w"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "防范措施: "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "利用 Cookie 的 SameSite 属性"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "验证来源站点"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CSRF Token"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-syrbgzz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-syrbgzz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 9 篇: HTTPS 为什么让数据传输更安全？"
				}
			]
		},
		{
			"ID": "20220316082024-30dtp4i",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-30dtp4i"
			}
		},
		{
			"ID": "20220316082024-7dudbxc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-7dudbxc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "谈到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTPS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 就不得不谈到与之相对的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的特性是明文传输，因此在传输的每一个环节，数据都有可能被第三方窃取或者篡改，具体来说，HTTP 数据经过 TCP 层，然后经过"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "WIFI路由器"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "运营商"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "目标服务器"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，这些环节中都可能被中间人拿到数据并进行篡改，也就是我们常说的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "中间人攻击"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-6lo7tn6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6lo7tn6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了防范这样一类攻击，我们不得已要引入新的加密方案，即 HTTPS。"
				}
			]
		},
		{
			"ID": "20220316082024-wuzxjrk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wuzxjrk"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTPS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "并不是一个新的协议, 而是一个加强版的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。其原理是在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "之间建立了一个中间层，当"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "通信时并不是像以前那样直接通信，直接经过了一个中间层进行加密，将加密后的数据包传给"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 响应的，"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "必须将数据包解密，才能传给上面的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这个中间层也叫"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "安全层"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "安全层"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的核心就是对数据"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "加解密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-xg8eegr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-xg8eegr"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来我们就来剖析一下"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTPS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的加解密是如何实现的。"
				}
			]
		},
		{
			"ID": "20220316082024-1f2v233",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-1f2v233"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "对称加密和非对称加密"
				}
			]
		},
		{
			"ID": "20220316082024-uadytfr",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-uadytfr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "概念"
				}
			]
		},
		{
			"ID": "20220316082024-oqotsxx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-oqotsxx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先需要理解"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的概念，然后讨论两者应用后的效果如何。"
				}
			]
		},
		{
			"ID": "20220316082024-a5w3elx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-a5w3elx"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "是最简单的方式，指的是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "解密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "用的是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "同样的密钥"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-g9djea0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-g9djea0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而对于"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，如果有 A、 B 两把密钥，如果用 A 加密过的数据包只能用 B 解密，反之，如果用 B 加密过的数据包只能用 A 解密。"
				}
			]
		},
		{
			"ID": "20220316082024-fk4ucd8",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-fk4ucd8"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "加解密过程"
				}
			]
		},
		{
			"ID": "20220316082024-a3qcjua",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-a3qcjua"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着我们来谈谈"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "浏览器"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "服务器"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "进行协商加解密的过程。"
				}
			]
		},
		{
			"ID": "20220316082024-1v01r2t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-1v01r2t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，浏览器会给服务器发送一个随机数"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "client_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和一个加密的方法列表。"
				}
			]
		},
		{
			"ID": "20220316082024-h20s6kt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-h20s6kt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "服务器接收后给浏览器返回另一个随机数"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "server_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和加密方法。"
				}
			]
		},
		{
			"ID": "20220316082024-b0vthvc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-b0vthvc"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在，两者拥有三样相同的凭证: "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "client_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "server_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和加密方法。"
				}
			]
		},
		{
			"ID": "20220316082024-sod3dbt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-sod3dbt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着用这个加密方法将两个随机数混合起来生成密钥，这个密钥就是浏览器和服务端通信的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "暗号"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-t8x771c",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-t8x771c"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "各自应用的效果"
				}
			]
		},
		{
			"ID": "20220316082024-vzoik6u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vzoik6u"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的方式，那么第三方可以在中间获取到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "client_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "server_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和加密方法，由于这个加密方法同时可以解密，所以中间人可以成功对暗号进行解密，拿到数据，很容易就将这种加密方式破解了。"
				}
			]
		},
		{
			"ID": "20220316082024-6d8am2v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-6d8am2v"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "既然"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这么不堪一击，我们就来试一试"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非对称"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "加密。在这种加密方式中，服务器手里有两把钥匙，一把是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "公钥"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，也就是说每个人都能拿到，是公开的，另一把是"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "私钥"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，这把私钥只有服务器自己知道。"
				}
			]
		},
		{
			"ID": "20220316082024-30foasa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-30foasa"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "好，现在开始传输。"
				}
			]
		},
		{
			"ID": "20220316082024-0likrlt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-0likrlt"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器把"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "client_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和加密方法列表传过来，服务器接收到，把"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "server_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "加密方法"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "公钥"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "传给浏览器。"
				}
			]
		},
		{
			"ID": "20220316082024-be8hd5c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-be8hd5c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在两者拥有相同的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "client_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "server_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和加密方法。然后浏览器用公钥将"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "client_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "server_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "加密，生成与服务器通信的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "暗号"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-wivrg8z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-wivrg8z"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这时候由于是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "非对称加密"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，公钥加密过的数据只能用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "私钥"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "解密，因此中间人就算拿到浏览器传来的数据，由于他没有私钥，照样无法解密，保证了数据的安全性。"
				}
			]
		},
		{
			"ID": "20220316082024-gmq3rgw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-gmq3rgw"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这难道一定就安全吗？聪明的小伙伴早就发现了端倪。回到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的定义，公钥加密的数据可以用私钥解密，那私钥加密的数据也可以用公钥解密呀！"
				}
			]
		},
		{
			"ID": "20220316082024-dag7op5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-dag7op5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "服务器的数据只能用私钥进行加密 (因为如果它用公钥那么浏览器也没法解密啦)，中间人一旦拿到公钥，那么就可以对服务端传来的数据进行解密了，就这样又被破解了。而且，只是采用非对称加密，对于服务器性能的消耗也是相当巨大的，因此我们暂且不采用这种方案。"
				}
			]
		},
		{
			"ID": "20220316082024-asn2j3e",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-asn2j3e"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "对称加密和非对称加密的结合"
				}
			]
		},
		{
			"ID": "20220316082024-m4wn79e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-m4wn79e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以发现，对称加密和非对称加密，单独应用任何一个，都会存在安全隐患。那我们能不能把两者结合，进一步保证安全呢？"
				}
			]
		},
		{
			"ID": "20220316082024-zdl7gq0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zdl7gq0"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实是可以的，演示一下整个流程："
				}
			]
		},
		{
			"ID": "20220316082024-31dhtnk",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-31dhtnk"
			},
			"Children": [
				{
					"ID": "20220316082024-pb3e9hb",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-pb3e9hb"
					},
					"Children": [
						{
							"ID": "20220316082024-548xvxn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-548xvxn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浏览器向服务器发送"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "client_random"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和加密方法列表。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-i6ofcgv",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-i6ofcgv"
					},
					"Children": [
						{
							"ID": "20220316082024-7o4nanc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-7o4nanc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务器接收到，返回"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "server_random"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、加密方法以及公钥。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-x4tiq5c",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20220316082024-x4tiq5c"
					},
					"Children": [
						{
							"ID": "20220316082024-u4j5wv6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-u4j5wv6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浏览器接收，接着生成另一个随机数"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "pre_random"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 并且用公钥加密，传给服务器。(敲黑板！重点操作！)"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-inyaojv",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20220316082024-inyaojv"
					},
					"Children": [
						{
							"ID": "20220316082024-fv711na",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-fv711na"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务器用私钥解密这个被加密后的"
								},
								{
									"Type": "NodeCodeSpan",
									"CodeMarkerLen": 1,
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker",
											"Data": "`"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "pre_random"
										},
										{
											"Type": "NodeCodeSpanCloseMarker",
											"Data": "`"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-mix1ncu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-mix1ncu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在浏览器和服务器有三样相同的凭证:"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "client_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "server_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "pre_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。然后两者用相同的加密方法混合这三个随机数，生成最终的"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "密钥"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-r4d5oxn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-r4d5oxn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后浏览器和服务器尽管用一样的密钥进行通信，即使用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-39e57s5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-39e57s5"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个最终的密钥是很难被中间人拿到的，为什么呢? 因为中间人没有私钥，从而"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "拿不到 pre_random"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，也就无法生成最终的密钥了。"
				}
			]
		},
		{
			"ID": "20220316082024-551ca1e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-551ca1e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "回头比较一下和单纯的使用"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "非对称加密"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 这种方式做了什么改进呢？本质上是"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "防止了私钥加密的数据外传"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。单独使用"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "非对称加密"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，最大的漏洞在于服务器传数据给浏览器只能用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "私钥"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "加密，这是危险产生的根源。利用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "对称和非对称"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "加密结合的方式，就防止了这一点，从而保证了安全。"
				}
			]
		},
		{
			"ID": "20220316082024-m4l00uk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-m4l00uk"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "添加数字证书"
				}
			]
		},
		{
			"ID": "20220316082024-xu20frz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-xu20frz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "尽管通过两者加密方式的结合，能够很好地实现加密传输，但实际上还是存在一些问题。黑客如果采用 DNS 劫持，将目标地址替换成黑客服务器的地址，然后黑客自己造一份公钥和私钥，照样能进行数据传输。而对于浏览器用户而言，他是不知道自己正在访问一个危险的服务器的。"
				}
			]
		},
		{
			"ID": "20220316082024-pg0xwja",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-pg0xwja"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "事实上"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTPS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "在上述"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "结合对称和非对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的基础上，又添加了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "数字证书认证"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的步骤。其目的就是让服务器证明自己的身份。"
				}
			]
		},
		{
			"ID": "20220316082024-9t210qi",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-9t210qi"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "传输过程"
				}
			]
		},
		{
			"ID": "20220316082024-94jc52d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-94jc52d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了获取这个证书，服务器运营者需要向第三方认证机构获取授权，这个第三方机构也叫"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "CA"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "("
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Certificate Authority"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "), 认证通过后 CA 会给服务器颁发"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "数字证书"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220316082024-jvc2yg8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-jvc2yg8"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个数字证书有两个作用:"
				}
			]
		},
		{
			"ID": "20220316082024-sikhul9",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220316082024-sikhul9"
			},
			"Children": [
				{
					"ID": "20220316082024-7nl5auj",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20220316082024-7nl5auj"
					},
					"Children": [
						{
							"ID": "20220316082024-o75vahz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-o75vahz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务器向浏览器证明自己的身份。"
								}
							]
						}
					]
				},
				{
					"ID": "20220316082024-bt8ohvo",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20220316082024-bt8ohvo"
					},
					"Children": [
						{
							"ID": "20220316082024-83xph2q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220316082024-83xph2q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "把公钥传给浏览器。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-5273yj7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-5273yj7"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这个验证的过程发生在什么时候呢？"
				}
			]
		},
		{
			"ID": "20220316082024-q7mmjwi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-q7mmjwi"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当服务器传送"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "server_random"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、加密方法的时候，顺便会带上"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "数字证书"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "(包含了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "公钥"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "), 接着浏览器接收之后就会开始验证数字证书。如果验证通过，那么后面的过程照常进行，否则拒绝执行。"
				}
			]
		},
		{
			"ID": "20220316082024-o6llq56",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-o6llq56"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在我们来梳理一下"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTPS"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "最终的加解密过程:"
				}
			]
		},
		{
			"ID": "20220316082024-3ez448m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-3ez448m"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!"
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/15/16f080a6f6375dc1~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-v4ycllu",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220316082024-v4ycllu"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "#### "
				},
				{
					"Type": "NodeText",
					"Data": "认证过程"
				}
			]
		},
		{
			"ID": "20220316082024-l9462nu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-l9462nu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浏览器拿到数字证书后，如何来对证书进行认证呢？"
				}
			]
		},
		{
			"ID": "20220316082024-8isgk9o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-8isgk9o"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先，会读取证书中的明文内容。CA 进行数字证书的签名时会保存一个 Hash 函数，来这个函数来计算明文内容得到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "信息A"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，然后用公钥解密明文内容得到"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "信息B"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，两份信息做比对，一致则表示认证合法。"
				}
			]
		},
		{
			"ID": "20220316082024-aal0y7s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-aal0y7s"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然有时候对于浏览器而言，它不知道哪些 CA 是值得信任的，因此会继续查找 CA 的上级 CA，以同样的信息比对方式验证上级 CA 的合法性。一般根级的 CA 会内置在操作系统当中，当然如果向上找没有找到根级的 CA，那么将被视为不合法。"
				}
			]
		},
		{
			"ID": "20220316082024-tztotx5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-tztotx5"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20220316082024-m4miy9d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-m4miy9d"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HTTPS 并不是一个新的协议, 它在"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HTTP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "TCP"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的传输中建立了一个安全层，利用"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "非对称加密"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "结合数字证书认证的方式，让传输过程的安全性大大提高。"
				}
			]
		},
		{
			"ID": "20220316082024-o6322ec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-o6322ec"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 10 篇: 能不能实现事件的防抖和节流？"
				}
			]
		},
		{
			"ID": "20220316082024-e2uo8fb",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-e2uo8fb"
			}
		},
		{
			"ID": "20220316082024-0m63rer",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-0m63rer"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "节流"
				}
			]
		},
		{
			"ID": "20220316082024-h82e589",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-h82e589"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "节流的核心思想: 如果在定时器的时间范围内再次触发，则不予理睬，等当前定时器"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "完成"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，才能启动"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "下一个定时器任务"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这就好比公交车，10 分钟一趟，10 分钟内有多少人在公交站等我不管，10 分钟一到我就要发车走人！"
				}
			]
		},
		{
			"ID": "20220316082024-snjo4bq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-snjo4bq"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码如下:"
				}
			]
		},
		{
			"ID": "20220316082024-ahsa17i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-ahsa17i"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function throttle(fn, interval) {\n  let flag = true;\n  return function(...args) {\n    let context = this;\n    if (!flag) return;\n    flag = false;\n    setTimeout(() =\u003e {\n      fn.apply(context, args);\n      flag = true;\n    }, interval);\n  };\n};\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-zblhqse",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-zblhqse"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "写成下面的方式也是表达一样的意思:"
				}
			]
		},
		{
			"ID": "20220316082024-fi8gbh6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-fi8gbh6"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "const throttle = function(fn, interval) {\n  let last = 0;\n  return function (...args) {\n    let context = this;\n    let now = +new Date();\n    // 还没到时间\n    if(now - last \u003c interval) return;\n    last = now;\n    fn.apply(this, args)\n  }\n}\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-vf82ulm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-vf82ulm"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "防抖"
				}
			]
		},
		{
			"ID": "20220316082024-002z2ww",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-002z2ww"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "核心思想: 每次事件触发则删除原来的定时器，建立新的定时器。跟"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "王者荣耀"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "回城"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "功能类似，你反复触发回城功能，那么只认最后一次，从最后一次触发开始计时。"
				}
			]
		},
		{
			"ID": "20220316082024-hyu8rwr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-hyu8rwr"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function debounce(fn, delay) {\n  let timer = null;\n  return function (...args) {\n    let context = this;\n    if(timer) clearTimeout(timer);\n    timer = setTimeout(function() {\n      fn.apply(context, args);\n    }, delay);\n  }\n}\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-p2urawl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-p2urawl"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "双剑合璧——加强版节流"
				}
			]
		},
		{
			"ID": "20220316082024-yj2sy87",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-yj2sy87"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在我们可以把"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "防抖"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "节流"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "放到一起，为什么呢？因为防抖有时候触发的太频繁会导致一次响应都没有，我们希望到了固定的时间必须给用户一个响应，事实上很多前端库就是采取了这样的思路。"
				}
			]
		},
		{
			"ID": "20220316082024-xe589ba",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-xe589ba"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function throttle(fn, delay) {\n  let last = 0, timer = null;\n  return function (...args) {\n    let context = this;\n    let now = new Date();\n    if(now - last \u003c delay){\n      clearTimeout(timer);\n      setTimeout(function() {\n        last = now;\n        fn.apply(context, args);\n      }, delay);\n    } else {\n      // 这个时候表示时间到了，必须给响应\n      last = now;\n      fn.apply(context, args);\n    }\n  }\n}\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-q6a603t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-q6a603t"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第 11 篇: 能不能实现图片懒加载？"
				}
			]
		},
		{
			"ID": "20220316082024-nbfpuim",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-nbfpuim"
			}
		},
		{
			"ID": "20220316082024-hca7ya2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-hca7ya2"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "方案一: clientHeight、scrollTop 和 offsetTop"
				}
			]
		},
		{
			"ID": "20220316082024-n8mzvkz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-n8mzvkz"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "首先给图片一个占位资源:"
				}
			]
		},
		{
			"ID": "20220316082024-f25kpgs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-f25kpgs"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cimg src=\"default.jpg\" data-src=\"http://www.xxx.com/target.jpg\" /\u003e\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-re9dd2m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-re9dd2m"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接着，通过监听 scroll 事件来判断图片是否到达视口:"
				}
			]
		},
		{
			"ID": "20220316082024-ksznr6r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-ksznr6r"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "let img = document.getElementsByTagName(\"img\");\nlet num = img.length;\nlet count = 0;//计数器，从第一张图片开始计\n\nlazyload();//首次加载别忘了显示图片\n\nwindow.addEventListener('scroll', lazyload);\n\nfunction lazyload() {\n  let viewHeight = document.documentElement.clientHeight;//视口高度\n  let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;//滚动条卷去的高度\n  for(let i = count; i \u003cnum; i++) {\n    // 元素现在已经出现在视口中\n    if(img[i].offsetTop \u003c scrollHeight + viewHeight) {\n      if(img[i].getAttribute(\"src\") !== \"default.jpg\") continue;\n      img[i].src = img[i].getAttribute(\"data-src\");\n      count ++;\n    }\n  }\n}\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-n538bza",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-n538bza"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，最好对 scroll 事件做节流处理，以免频繁触发:"
				}
			]
		},
		{
			"ID": "20220316082024-umhv0y0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-umhv0y0"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// throttle函数我们上节已经实现\nwindow.addEventListener('scroll', throttle(lazyload, 200));\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-48zd4pr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-48zd4pr"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "方案二：getBoundingClientRect"
				}
			]
		},
		{
			"ID": "20220316082024-bgfwfga",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-bgfwfga"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在我们用另外一种方式来判断图片是否出现在了当前视口, 即 DOM 元素的 "
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "getBoundingClientRect"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " API。"
				}
			]
		},
		{
			"ID": "20220316082024-0ba098e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-0ba098e"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上述的 lazyload 函数改成下面这样:"
				}
			]
		},
		{
			"ID": "20220316082024-4erlshp",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-4erlshp"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function lazyload() {\n  for(let i = count; i \u003cnum; i++) {\n    // 元素现在已经出现在视口中\n    if(img[i].getBoundingClientRect().top \u003c document.documentElement.clientHeight) {\n      if(img[i].getAttribute(\"src\") !== \"default.jpg\") continue;\n      img[i].src = img[i].getAttribute(\"data-src\");\n      count ++;\n    }\n  }\n}\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-y400xgj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220316082024-y400xgj"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### "
				},
				{
					"Type": "NodeText",
					"Data": "方案三: IntersectionObserver"
				}
			]
		},
		{
			"ID": "20220316082024-p68o2br",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-p68o2br"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这是浏览器内置的一个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "API"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，实现了"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "监听window的scroll事件"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "、"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "判断是否在视口中"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "以及"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "节流"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "三大功能。"
				}
			]
		},
		{
			"ID": "20220316082024-nhwal2c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-nhwal2c"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们来具体试一把："
				}
			]
		},
		{
			"ID": "20220316082024-nosc95o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20220316082024-nosc95o"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "let img = document.getElementsByTagName(\"img\");\n\nconst observer = new IntersectionObserver(changes =\u003e {\n  //changes 是被观察的元素集合\n  for(let i = 0, len = changes.length; i \u003c len; i++) {\n    let change = changes[i];\n    // 通过这个属性判断是否在视口中\n    if(change.isIntersecting) {\n      const imgElement = change.target;\n      imgElement.src = imgElement.getAttribute(\"data-src\");\n      observer.unobserve(imgElement);\n    }\n  }\n})\nArray.from(img).forEach(item =\u003e observer.observe(item));\n复制代码\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20220316082024-sqggejp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-sqggejp"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样就很方便地实现了图片懒加载，当然这个"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "IntersectionObserver"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "也可以用作其他资源的预加载，功能非常强大。"
				}
			]
		},
		{
			"ID": "20220316082024-nihsnke",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-nihsnke"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文末碎碎念"
				}
			]
		},
		{
			"ID": "20220316082024-91xph8f",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220316082024-91xph8f"
			}
		},
		{
			"ID": "20220316082024-qxtocr1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-qxtocr1"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以上文章在均在开源项目"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "神三元的博客"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fsanyuan0704%2Fmy_blog"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://github.com/sanyuan0704/my_blog"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")首发，旨在打造完整前端知识体系，如果对你些许的帮助，请帮项目点一个 star，非常感谢！"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "首发，旨在打造完整前端知识体系，如果对你些许的帮助，请帮项目点一个 star，非常感谢！"
				}
			]
		},
		{
			"ID": "20220316082024-m2x31hu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-m2x31hu"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外，本人的"
				},
				{
					"Type": "NodeStrong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "掘金小册"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "《React Hooks 与 Immutable 数据流实战》最近已经上线，虽然是关于 React 的实战教程，但也包含了诸多浏览器和性能优化相关的实践手段，一共有"
				},
				{
					"Type": "NodeCodeSpan",
					"CodeMarkerLen": 1,
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker",
							"Data": "`"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "36"
						},
						{
							"Type": "NodeCodeSpanCloseMarker",
							"Data": "`"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "个小节，后期打算将 hooks 源码解析的系列文章直接放到小册中，不断给小册增值，相信能对正在进阶的各位有所帮助，望多多支持！"
				},
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "小册链接"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://juejin.cn/book/6844733816460804104"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://juejin.cn/book/6844733816460804104"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-jcd9srs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-jcd9srs"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "参考文献:"
				}
			]
		},
		{
			"ID": "20220316082024-dnd9qbl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-dnd9qbl"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "极客时间浏览器专栏"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Ftime.geekbang.org%2Fcolumn%2Farticle%2F169468"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://time.geekbang.org/column/article/169468"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-gok629o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-gok629o"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "浏览器层合成与页面渲染优化"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://juejin.cn/post/6844903966573068301"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://juejin.cn/post/6844903966573068301"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-r08u51s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-r08u51s"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "浏览器是如何工作的"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://link.juejin.cn?target=https%3A%2F%2Fwww.html5rocks.com%2Fzh%2Ftutorials%2Finternals%2Fhowbrowserswork%2F%23The_browsers_we_will_talk_about"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/#The_browsers_we_will_talk_about"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-ycz5e11",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-ycz5e11"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "山月——实现图片懒加载的几种方案比较"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://juejin.cn/post/6844903986504417293"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://juejin.cn/post/6844903986504417293"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20220316082024-vm966f1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220316082024-vm966f1"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Children": [
						{
							"Type": "NodeOpenBracket",
							"Data": "["
						},
						{
							"Type": "NodeLinkText",
							"Data": "掘金小册——前端性能优化原理与实践"
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]"
						},
						{
							"Type": "NodeOpenParen",
							"Data": "("
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://juejin.cn/book/6844733750048210957"
						},
						{
							"Type": "NodeLinkSpace",
							"Data": " "
						},
						{
							"Type": "NodeLinkTitle",
							"Data": "https://juejin.cn/book/6844733750048210957"
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")"
						}
					]
				}
			]
		}
	]
}